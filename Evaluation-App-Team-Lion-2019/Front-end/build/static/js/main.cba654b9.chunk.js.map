{"version":3,"sources":["ulm.jpg","helper/setAuthToken.js","actions/types.js","actions/AuthAction.js","LoginPageApp.js","Register.js","actions/RegisterAction.js","components/viewSummary/viewSummary.js","components/viewRubric/viewRubric.js","components/rubricList/rubricList.js","components/navBar/navAdmin.js","components/navBar/navEvaluator.js","components/navBar/loginNav.js","components/navBar/generalNavBar.js","App.js","serviceWorker.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","index.js"],"names":["module","exports","__webpack_require__","p","setAuthToken","token","axios","defaults","headers","common","SET_CURRENT_USER","GET_ERRORS","setCurrentUser","decoded","type","payload","LoginPageApp","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChangeEmail","bind","assertThisInitialized","onChangePassword","onSubmit","state","email","password","errors","e","setState","defineProperty","target","name","value","preventDefault","window","location","assign","login","react_default","a","createElement","form","className","div","placeholder","onChange","required","id","onClick","handleClick","Component","contextTypes","router","React","PropTypes","object","isRequired","connect","obj","dispatch","post","then","res","data","role","localStorage","setItem","jwt_decode","catch","err","Register","onChangeCwid","onChangeFirstName","onChangeLastName","onChangeRole","cwid","firstName","lastName","RegisterAction","style","marginTop","programSummary","title","outcomes","description","measures","ProgramSummaryBody","map","currentOutcome","i","viewSummary_Outcome","outcome","reportMode","key","Outcome","scope","Measures","currentMeasure","Statistics","metTarget","total","toFixed","ViewSummary","handleEditModeClick","handleEditClick","setView","editMode","pathname","getStatistics","_this2","get","console","log","addOutcomeButton","viewSummary_ProgramSummaryBody","Rubric","measureId","scale","criteria","scores","TopRowGradeScale","currentScore","CriteriaRow","currentCriteria","CriteriaDescription","gradeMode","CriteriaGradeInput","gradeScale","disabled","ViewRubric","onChangeSubjectId","handleSaveGradeClick","handleAverageScoreClick","subjectID","averageScore","calcAverage","document","getElementById","subjectScore","userCWID","sessionStorage","getItem","subjectId","alert","totalScore","numberOfCriteria","forEach","parseInt","average","saveGradeButton","SubjectIdTextbox","rubricAverage","Fragment","width","rubrics","ListDisplay","rubric","Link","to","RubricList","NavBar","removeItem","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","logout","NavEvaluator","user","GeneralNavBar","src","logo","height","alt","navAdmin","navEvaluator","loginNav","require","App","BrowserRouter","navBar_generalNavBar","Route","exact","path","component","LogIn","Boolean","hostname","match","isEmpty","initialState","isAuthenticated","combineReducers","auth","arguments","length","undefined","action","store","createStore","rootReducer","applyMiddleware","thunk","body","classList","add","Token","ReactDOM","render","es","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cba654b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ulm.20e0e1bc.jpg\";","import axios from \"axios\";\r\n\r\nconst setAuthToken = (token) =>{\r\n    if(token){\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    }\r\n    else{\r\n        axios.defaults.headers.common[\"Authorization\"] = null; \r\n    }\r\n\r\n};\r\n\r\nexport default setAuthToken;","export const REGISTER_A_NEW_USER = \"REGISTER_A_NEW_USER\";\r\nexport const SET_CURRENT_USER= \"SET_CURRENT_USER\";\r\nexport const LOG_OUT = \"LOG_OUT\";\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\n","\r\nimport axios from \"axios\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthToken from '../helper/setAuthToken';\r\n\r\nimport {GET_ERRORS, SET_CURRENT_USER} from './types';\r\n\r\nexport function setCurrentUser(decoded){\r\n    return {\r\n        type: SET_CURRENT_USER,\r\n        payload: decoded\r\n    }\r\n}\r\n\r\n\r\nexport function logOut(){\r\n    return dispatch =>{\r\n       localStorage.removeItem(\"Token\");\r\n       localStorage.removeItem(\"Role\");\r\n       setAuthToken(false);\r\n       dispatch(setCurrentUser({}));\r\n   }}\r\n\r\n\r\nexport function login(obj) { \r\n    return dispatch => {\r\n    return axios\r\n        .post(\"http://localhost:8000/api/login\",obj)\r\n        .then (res=>{\r\n            const token = res.data.token;\r\n            const role = res.data.role;\r\n\r\n            localStorage.setItem(\"Token\", token);\r\n            localStorage.setItem(\"Role\",role);\r\n            setAuthToken(token);\r\n            dispatch(setCurrentUser(jwt_decode(token)));\r\n\r\n        })\r\n        .catch(err => dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.res.data\r\n        })\r\n        );\r\n}}\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { login } from './actions/AuthAction';\r\nimport  {connect} from 'react-redux';\r\n\r\n\r\n\r\nclass LoginPageApp extends Component \r\n{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.state={\r\n            email: '',\r\n            password: '',\r\n            errors:{}\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    onChange(e){\r\n        this.setState({ [e.target.name]: e.target.value});\r\n    }\r\n\r\n    handleClick(e){\r\n        e.preventDefault();\r\n        window.location.assign('/register');\r\n    }\r\n\r\n   \r\n    \r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n        \r\n       \r\n        \r\n                \r\n        this.props.login(this.state);\r\n                \r\n           \r\n           \r\n        \r\n        \r\n            this.setState({\r\n                email: \"\",\r\n                password: \"\"\r\n            })\r\n            \r\n    }\r\n\r\n\r\n    \r\n    render() \r\n    {\r\n        const {errors} = this.state;\r\n        return (\r\n         \r\n                \r\n                <form onSubmit= {this.onSubmit}>\r\n                <h1>Sign In</h1>\r\n                { errors.form && <div className =\"alert alert-danger\">{errors.div}</div>}\r\n                       \r\n                      \r\n                        <div className=\"from-group\">\r\n                            <label>Email:</label>\r\n                            <input \r\n                            className=\"form-control\" \r\n                            type=\"text\" \r\n                            name=\"email\" \r\n                            placeholder=\"Please enter your email\"\r\n                            value = {this.state.value}\r\n                            onChange={this.onChange}\r\n                            required\r\n                            />\r\n                            \r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Password:</label>\r\n                            <input className=\"form-control\" \r\n                                    type=\"password\" \r\n                                    name=\"password\" \r\n                                    placeholder=\"Please enter your password\"\r\n                                    value={this.state.value}\r\n                                    \r\n                                    onChange={this.onChange}\r\n                                    required\r\n                                    />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input className=\"btn btn-primary\" \r\n                                    type=\"submit\" \r\n                                    value=\"Sign In\" \r\n                                    />  \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                        <input className=\"btn btn-primary\" \r\n                                    id = \"register\" \r\n                                    type=\"button\" \r\n                                    value=\"Register\"\r\n                                    onClick={this.handleClick}/> \r\n                    </div>\r\n                    \r\n                    \r\n            \r\n                </form>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nLoginPageApp.propTypes = {\r\nlogin: React.PropTypes.func.isRequired\r\n}\r\n\r\nLoginPageApp.contextTypes = {\r\n    router: React.PropTypes.object.isRequired\r\n}\r\nexport default connect(null, { login }) (LoginPageApp);","import React, {Component} from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {RegisterAction} from './actions/RegisterAction';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Register extends Component{\r\n\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.onChangeCwid=this.onChangeCwid.bind(this);\r\n        this.onChangeFirstName = this.onChangeFirstName.bind(this);\r\n        this.onChangeLastName = this.onChangeLastName.bind(this);\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n        this.onChangeRole = this.onChangeRole.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.state={\r\n            cwid: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            password: '',\r\n            role: 'Administrator'\r\n        }\r\n    }\r\n\r\nonChangeCwid(e){\r\n    this.setState({\r\n        cwid: e.target.value\r\n    })\r\n}\r\n\r\nonChangeFirstName(e){\r\n    this.setState({\r\n        firstName: e.target.value\r\n    })\r\n\r\n}\r\n\r\n\r\nonChangeLastName(e){\r\n    this.setState({\r\n        lastName: e.target.value\r\n    })\r\n}\r\n\r\nonChangeEmail(e){\r\n    this.setState({\r\n        email: e.target.value\r\n    })\r\n}\r\n\r\nonChangePassword(e){\r\n    this.setState({\r\n        password: e.target.value\r\n    })\r\n}\r\n\r\nonChangeRole(e){\r\n    this.setState({\r\n        role: e.target.value\r\n    })\r\n}\r\n\r\nonSubmit(e){\r\n    e.preventDefault();\r\n\r\n    const obj={\r\n        cwid: this.state.cwid,\r\n        firstName: this.state.firstName,\r\n        lastName:this.state.lastName,\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        role: this.state.role\r\n    }\r\n\r\n   this.props.RegisterAction(obj);\r\n\r\n         this.setState({\r\n            cwid: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            password: '',\r\n            role: ''\r\n         })\r\n\r\n        \r\n\r\n}\r\n\r\nrender(){\r\n\r\n    return(\r\n        <form onSubmit = {this.onSubmit}>\r\n\r\n    <div className=\"form-group\" style={{marginTop:50}}>\r\n      <label>CWID</label>\r\n      <input type=\"number\" \r\n            className=\"form-control\" \r\n            id=\"cwid\" \r\n            value={this.state.cwid}\r\n            onChange ={this.onChangeCwid}\r\n            placeholder=\"Campus Wide ID\"\r\n            required/>\r\n    </div>\r\n  \r\n    <div className=\"form-group\">\r\n      <label>First Name</label>\r\n      <input type=\"text\" \r\n            className=\"form-control\" \r\n            id=\"firstName\" \r\n            value={this.state.firstName}\r\n            onChange={this.onChangeFirstName}\r\n            placeholder=\"First Name\"\r\n            required/>\r\n    </div>\r\n    <div className=\"form-group\">\r\n      <label>Last Name</label>\r\n      <input type=\"text\" \r\n            className=\"form-control\" \r\n            id=\"lastName\" \r\n            value={this.state.lastName}\r\n            onChange={this.onChangeLastName}\r\n            placeholder=\"Last Name\"\r\n            required/>\r\n    </div>\r\n\r\n    <div className =\"form-group\">\r\n      <label>Email</label>\r\n      <input type=\"email\" \r\n            className=\"form-control\" \r\n            id=\"email\" \r\n            value={this.state.email}\r\n            onChange={this.onChangeEmail}\r\n            placeholder=\"Email\"\r\n            required/>\r\n    </div>\r\n    <div className=\"form-group\">\r\n      <label>Password</label>\r\n      <input type=\"password\" \r\n            className=\"form-control\" \r\n            id=\"password\" \r\n            value={this.state.password}\r\n            onChange={this.onChangePassword}\r\n            placeholder=\"Password\"\r\n            required/>\r\n    </div>\r\n\r\n    <div className =\"form-group\">\r\n      <label>Role</label>\r\n      <select type =\"text\"\r\n              className=\"form-control\" \r\n              value={this.state.role}\r\n              onChange={this.onChangeRole}>\r\n            <option id=\"role\" \r\n                    value=\"Administrator\"\r\n                    >Administrator</option>     \r\n              \r\n              <option id=\"role\" \r\n                    value=\"Evaluator\"\r\n                    >Evaluator</option>   \r\n              \r\n              \r\n              \r\n              </select>\r\n      \r\n    </div>\r\n \r\n \r\n  \r\n  <div className =\"form-group\">\r\n  <input type=\"submit\" \r\n        className=\"btn btn-primary\"\r\n        value =\"Submit\"\r\n        />\r\n        </div>\r\n</form> \r\n\r\n    \r\n    );\r\n}\r\n\r\n\r\n\r\n}\r\n\r\nexport default connect ({RegisterAction})(Register);","import axios from \"axios\";\r\nimport { GET_ERRORS } from \"./types\";\r\n\r\n\r\nexport const RegisterAction = obj => dispatch =>{\r\n    axios.post('http://localhost:8000/api/register', obj)\r\n        .then(res=>\r\n            window.location.assign('/')\r\n        )\r\n        .catch(err=>{\r\n            dispatch({\r\n                type:GET_ERRORS,\r\n                payload: err.res.data\r\n            })\r\n        })\r\n} ","import React, {Component} from 'react';\r\nimport './viewSummary.css';\r\nimport axios from 'axios';\r\n\r\n/*\r\nvar outcome1 = {\r\n    description: \"Outcome 1 \",\r\n    measures: [\"1.1 Measure 1\", \"1.2 Measure 2\"]\r\n};\r\n\r\nvar outcome2 = {\r\n    description: \"Outcome 2\",\r\n    measures: [\"2.1 Measure 1\", \"2.2 Measure 2 Look see how.\"]\r\n};\r\n\r\nvar outcome3 = {\r\n    description: \"Outcome 3\",\r\n    measures: [\"3.1 Measure 1\", \"3.2 Measure 2\", \"3.3 Measure 3\"]\r\n};\r\n\r\nvar programSummary = { \r\n    title: \"Assessment 2019\",\r\n    outcomes: [outcome1, outcome2, outcome3]\r\n};\r\n*/\r\n\r\nvar outcome1 = {\r\n    description: \"Communicate effectively in a variety of professional contexts.\",\r\n    measures: [\"75% or more of students evaluated on oral presentation skills will have an average BUSN 3005 rubric score of 3 or better.\"]\r\n};\r\n\r\nvar programSummary = {\r\n    title: \"Assessment 2019\",\r\n    outcomes: [outcome1]\r\n};\r\n\r\nconst ProgramSummaryBody = props =>\r\n{\r\n    return programSummary.outcomes.map(function(currentOutcome, i){\r\n        return <Outcome outcome={currentOutcome} reportMode={props.reportMode} state={props.state} key={i} />;\r\n    });\r\n}\r\n\r\nconst Outcome = props => (\r\n    <tr>\r\n        <th scope=\"row\">{props.outcome.description}</th>\r\n        <td><Measures outcome={props.outcome} reportMode={props.reportMode} state={props.state}  /></td>\r\n    </tr>\r\n)\r\n\r\nfunction Measures(props)\r\n{\r\n    return props.outcome.measures.map(function(currentMeasure, i){\r\n        return (\r\n            <div key={i}>\r\n                <p>{currentMeasure}</p>\r\n                {props.reportMode ? <Statistics state={props.state} /> : null}\r\n            </div>\r\n        )\r\n    });\r\n}\r\n\r\nfunction Statistics(props)\r\n{\r\n    return <p>\r\n            Measure statistics: {((props.state.metTarget /props.state.total) * 100).toFixed(2)}% of \r\n            evaluations have met the target score of 3. {props.state.total} subjects have been evaluated.\r\n            </p>\r\n}\r\n\r\nexport default class ViewSummary extends Component \r\n{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.handleEditModeClick = this.handleEditClick.bind(this);\r\n        this.setView = this.setView.bind(this);\r\n        this.state = {\r\n            editMode: false,\r\n            reportMode: false,\r\n            total: 0,\r\n            metTarget: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.setView();\r\n    }\r\n\r\n    setView()\r\n    {\r\n        if (window.location.pathname===\"/summaryReport\")\r\n        {\r\n            this.getStatistics();\r\n            this.setState({\r\n                reportMode: true\r\n            });\r\n        }\r\n    }\r\n\r\n    getStatistics()\r\n    {\r\n        axios.get('/measureStatistics')\r\n            .then(res => {\r\n                console.log(res.data);\r\n                this.setState({\r\n                    total: res.data.total,\r\n                    metTarget: res.data.metTarget\r\n                })\r\n            })\r\n    }\r\n\r\n    handleEditClick()\r\n    {\r\n        this.setState({editMode: true});\r\n    }\r\n\r\n    render()\r\n    {\r\n        const editMode = this.state.editMode;\r\n        let addOutcomeButton;\r\n\r\n        if (editMode)\r\n        {\r\n            addOutcomeButton = <div><button type=\"button\" className=\"btn btn-primary\">Add Outcome</button></div>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h1>{programSummary.title}</h1>\r\n            \r\n                <table className=\"table table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\" className=\"outcome-width\">Learning Outcomes</th>\r\n                            <th scope=\"col\" className=\"measure-width\">Measures of Performace</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <ProgramSummaryBody reportMode={this.state.reportMode} state={this.state} />\r\n                    </tbody>\r\n                </table>\r\n                {addOutcomeButton}\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleEditClick}>Edit Program Summary</button>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport axios from \"axios\";\r\n\r\n//dummy data\r\nvar criteriaOne = {\r\n    description: \"Subject Knowledge\",\r\n    scores: [\r\n        \"student does not have grasp of info; cannot answer questions.\",\r\n            \"uncomfortable with info; able to answer very few questions.\",\r\n            \"comfortable with info; can answer simple questions.\",\r\n            \"shows full knowledge; answers questions easily but does not elaborate\",\r\n            \"knowledge is more than required; answers questions with details and elaboration\"\r\n    ]\r\n}\r\n\r\nvar criteriaTwo = {\r\n    description: \"Organization\",\r\n    scores: [\r\n        \"audience cannot understand  presentation; no logical sequence of information\",\r\n        \"audience has difficulty following; info jumps around\",\r\n        \"logical sequence with a few minor jumps\",\r\n        \"logical sequence\",\r\n        \"logical sequence;  ideas clearly linked\"\r\n    ]\r\n}\r\n\r\nvar criteriaThree = {\r\n    description: \"Use of Communication Aids\",\r\n    scores: [\r\n        \"numerous spelling and/or  grammar errors; no  communication  aids or detracting aids\",\r\n        \"several spelling and/or grammar errors; aids highlight unimportant info\",\r\n        \"few spelling or grammar errors; aids lack originality or adequate development\",\r\n        \"two or fewer spelling or grammar errors; aids support and relate to text and presentation\",\r\n        \"no spelling or grammatical errors; aids explain and enhance text and presentation\"\r\n    ]\r\n}\r\n\r\nvar Rubric = {\r\n    title: \"Oral Presentation\",\r\n    measureId: 1,\r\n    scale: [ [1, \"1 - Limited\"], [2, \"2 - Developing\"], [3, \"3 - Capable\"], [4, \"4 - Strong\"], [5, \"5 - Excellent\"]],\r\n    criteria: [criteriaOne, criteriaTwo, criteriaThree]\r\n}\r\n\r\nfunction TopRowGradeScale(props)\r\n{\r\n    return Rubric.scale.map(function(currentScore, i)\r\n        {\r\n            return <th scope=\"col\" key={i}>{currentScore[1]}</th>\r\n        });\r\n}\r\n\r\nfunction CriteriaRow(props)\r\n{\r\n    return Rubric.criteria.map(function(currentCriteria, i)\r\n    {\r\n        return (\r\n            <tr key={i}>\r\n                <th scope=\"row\">{currentCriteria.description}</th>\r\n                <CriteriaDescription criteria={currentCriteria} />\r\n                {props.gradeMode?  <td><CriteriaGradeInput currentCriteria={currentCriteria} /></td> : null}\r\n            </tr>\r\n            );\r\n    });\r\n}\r\n\r\nconst gradeScale = generateGradeScale();\r\n\r\nfunction CriteriaGradeInput(props)\r\n{\r\n    return (\r\n        <select className=\"form-control\" id={props.currentCriteria.description}>\r\n            <option disabled value> -- select an option -- </option>\r\n            {gradeScale}\r\n        </select>\r\n    )\r\n}\r\n\r\nfunction CriteriaDescription(props)\r\n{\r\n    return props.criteria.scores.map(function(currentScore, i)\r\n    {\r\n        return <td key={i}>{currentScore}</td>\r\n    });\r\n}\r\n\r\nfunction generateGradeScale()\r\n{\r\n    return (\r\n        Rubric.scale.map(function(currentScore, i)\r\n        {\r\n            return <option key={i} value={currentScore[0]}>{currentScore[1]}</option>\r\n        })\r\n    );\r\n}\r\n\r\nexport default class ViewRubric extends Component\r\n{\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.onChangeSubjectId = this.onChangeSubjectId.bind(this);\r\n        this.handleSaveGradeClick = this.handleSaveGradeClick.bind(this);\r\n        this.handleAverageScoreClick = this.handleAverageScoreClick.bind(this);\r\n        this.state = {\r\n            gradeMode: false,\r\n            subjectID: '',\r\n            averageScore: 1,\r\n            calcAverage: 2,\r\n        }\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.setView();\r\n    }\r\n\r\n    setView()\r\n    {\r\n        if (window.location.pathname==='/gradeRubric')\r\n        {\r\n            this.setState({\r\n                gradeMode: true\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSaveGradeClick()\r\n    {\r\n        let scores = Rubric.criteria.map(function(currentCriteria)\r\n        {\r\n            return {description: currentCriteria.description,\r\n                    value: document.getElementById(currentCriteria.description).value};\r\n        })\r\n\r\n        let subjectScore = {measureId: 1,\r\n                            userCWID: sessionStorage.getItem('userCWID'),\r\n                            subjectId: this.state.subjectId,\r\n                            scores: scores};\r\n\r\n        axios.post('/subjectScore', subjectScore)\r\n        .then(res =>{\r\n            console.log(res.data);\r\n        });\r\n        alert(\"The score has been saved.\");\r\n    }\r\n\r\n    handleAverageScoreClick(e)\r\n    {\r\n        this.setState({\r\n            calcAverage: e.target.value \r\n        })\r\n        let totalScore = 0;\r\n        let numberOfCriteria = 0;\r\n        Rubric.criteria.forEach(function(currentCriteria)\r\n        {\r\n                totalScore = totalScore + parseInt(document.getElementById(currentCriteria.description).value);\r\n                numberOfCriteria++;\r\n        });\r\n        console.log(totalScore);\r\n        let average = (totalScore / numberOfCriteria).toFixed(e.target.value);\r\n\r\n        this.setState({\r\n            averageScore: average\r\n        })\r\n    }\r\n\r\n    onChangeSubjectId(e)\r\n    {\r\n        this.setState({\r\n            subjectId: e.target.value\r\n        });\r\n    }\r\n\r\n    render()\r\n    {\r\n        let saveGradeButton;\r\n        let SubjectIdTextbox;\r\n        let rubricAverage;\r\n\r\n        if (this.state.gradeMode)\r\n        {\r\n            saveGradeButton = <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleSaveGradeClick}>Save Grade</button>\r\n            SubjectIdTextbox = <>\r\n                                <label className=\"mr-2\">Subject ID:</label>\r\n                                <input type=\"text\" \r\n                                        placeholder=\"subject Id as integer\" \r\n                                        value={this.state.value}\r\n                                        onChange={this.onChangeSubjectId}/>\r\n                               </>\r\n            rubricAverage = <div>\r\n                <label className=\"pr-1\">Calculate Average</label>\r\n                <select type=\"button\" className=\"btn btn-secondary btn-sm\" onClick={this.handleAverageScoreClick}>\r\n                    <option value=\"0\">No Decimal</option>\r\n                    <option value=\"1\">One Decimal</option>\r\n                    <option value=\"2\">Two Decimals</option>\r\n                    <option value=\"3\">Three Decimals</option>\r\n                </select>\r\n                <span className=\"pl-1\">The average score is: {this.state.averageScore}</span>\r\n            </div>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h1>Rubric</h1>\r\n                <div>\r\n                    <span className=\"mr-4\">{this.state.gradeMode ? \"Grade\" : null} {Rubric.title}</span>\r\n                    {SubjectIdTextbox}\r\n                </div>\r\n                \r\n                <table className=\"table table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\" className=\"outcome-width\">Criteria</th>\r\n                            <TopRowGradeScale />\r\n                            {this.state.gradeMode ? <th scope=\"col\" width=\"150px\">Score</th> : null}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <CriteriaRow gradeMode={this.state.gradeMode} />\r\n                    </tbody>\r\n                </table>\r\n                {rubricAverage}\r\n                {saveGradeButton}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//dummy data\r\nvar rubrics = [\"Rubric 1\", \"Rubric 2\", \"Rubric 3\"];\r\n\r\n\r\nfunction ListDisplay(props)\r\n{\r\n    return props.rubrics.map(function(rubric, i){\r\n        return <div key={i}><Link to=\"/viewRubric\">{rubric}</Link></div>;\r\n    });\r\n}\r\n\r\nexport default class RubricList extends Component \r\n{\r\n    render()\r\n    {\r\n        return(\r\n            <div>\r\n                <h1>Rubric List</h1>\r\n                <ListDisplay rubrics={rubrics} />\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './generalNavBar.css';\r\n\r\nclass NavBar extends Component \r\n{\r\n    logout()\r\n    {\r\n        sessionStorage.removeItem('userRole');\r\n        sessionStorage.removeItem('userCWID');\r\n        localStorage.removeItem(\"jwtToken\");\r\n        window.location.assign('/');\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <>\r\n                <Link to=\"/viewSummary\" className=\"navbar-brand\">Department Evaluation</Link>\r\n                <div className=\"collpase nav-collapse\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"navbar-item\">\r\n                            <Link to=\"/viewSummary\" className=\"nav-link\">View Summary</Link>\r\n                        </li>\r\n                        <li className=\"navbar-item\">\r\n                            <div className=\"dropdown\">\r\n                                <button className=\"dropdown-toggle btn nav-link\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\" \r\n                                        aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                    Evaluations\r\n                                </button>\r\n                                <div className=\"dropdown-menu bg-primary\" aria-labelledby=\"dropdownMenuLink\">\r\n                                    <Link to=\"/gradeRubric\" className=\"nav-link\">My Assignments</Link>\r\n                                    <Link to=\"/rubricList\" className=\"nav-link\">Make Assignments</Link>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                        <li className=\"navbar-item\">\r\n                            <Link to=\"/rubricList\" className=\"nav-link\">Rubrics</Link>\r\n                        </li>\r\n                        <li className=\"navbar-item\">\r\n                            <Link to=\"/summaryReport\" className=\"nav-link\">Report</Link>\r\n                        </li>\r\n                        <li className=\"navbar-item\">\r\n                            <Link to=\"/viewSSummary\" className=\"nav-link\">Past Assessments</Link>\r\n                        </li>\r\n                        <li className=\"navbar-item\">\r\n                            <button className=\"btn btn-danger\" onClick={this.logout}>Log Out </button>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass NavEvaluator extends Component{\r\n\r\n    render(){\r\n        return(\r\n          <>\r\n            <div className=\"navbar-brand\">Evaluator</div>\r\n              <div className=\"collpase nav-collapse\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                  <li className=\"navbar-item\">\r\n                    <Link to=\"/\" className=\"nav-link\">Log Out</Link>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavEvaluator;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass NavBar extends Component \r\n{\r\n    render()\r\n    {\r\n        return (\r\n          <>\r\n            <Link to=\"/\" className=\"navbar-brand\">Evaluation Application</Link>\r\n              <div className=\"collpase nav-collapse\">\r\n              <ul className=\"navbar-nav mr-auto\">\r\n                <li className=\"navbar-item\">\r\n                  <Link to=\"/\" className=\"nav-link\">Log In</Link>\r\n                </li>\r\n                <li className=\"navbar-item\">\r\n                  <Link to=\"/register\" className=\"nav-link\">Register</Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\nimport logo from \"../../ulm.jpg\";\r\nimport './generalNavBar.css'\r\n\r\nimport AdminNavBar from './navAdmin';\r\nimport EvalNavBar from './navEvaluator';\r\nimport LoginNav from './loginNav.js';\r\n\r\nconst user = sessionStorage.getItem('userRole');\r\n\r\nclass GeneralNavBar extends Component \r\n{\r\n    render(){\r\n        return(\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary mb-4\">\r\n          <button className=\"navbar-brand\" target=\"_blank\">\r\n            <img src={logo} width=\"50\" height=\"50\" alt=\"Not available\" />\r\n          </button>\r\n          {user===\"Administrator\" ? <AdminNavBar /> : null}\r\n          {user===\"Evaluator\" ? <EvalNavBar /> : null}\r\n          {user===null ? <LoginNav /> : null}\r\n        </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GeneralNavBar;","import React, {Component} from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\r\n\r\n\r\nimport LogIn from \"./LoginPageApp\";\r\nimport Register from \"./Register\";\r\nimport ViewSummary from \"./components/viewSummary/viewSummary.js\";\r\nimport Rubric from \"./components/viewRubric/viewRubric\";\r\nimport RubricList from \"./components/rubricList/rubricList\";\r\nimport GeneralNavBar from './components/navBar/generalNavBar.js';\r\n\r\nrequire('bootstrap');\r\n\r\n\r\nclass App extends Component{\r\n\r\n    render(){\r\n\r\n        return(\r\n          \r\n          <div className=\"container darkest-gray pb-2\">\r\n            <Router>\r\n              <div>\r\n                <GeneralNavBar />\r\n                <Route exact path=\"/\"  component={LogIn} />\r\n                <Route exact path=\"/register\" component={Register} />\r\n                \r\n                <Route exact path=\"/viewSummary\" component={ViewSummary}/>\r\n                <Route exact path=\"/summaryReport\" component={ViewSummary} />\r\n                <Route exact path=\"/viewRubric\" component={Rubric}/>\r\n                <Route exact path=\"/gradeRubric\" component={Rubric}/>\r\n                <Route exact path=\"/rubricList\" component={RubricList}/>\r\n                \r\n            </div>\r\n          </Router>\r\n        </div>\r\n       \r\n        );\r\n      }\r\n    }\r\n    \r\n    export default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import {SET_CURRENT_USER} from '../actions/types';\r\n\r\nconst isEmpty = require('is-empty');\r\n\r\nconst initialState ={\r\n    isAuthenticated:false,\r\n    user: {}\r\n}\r\n\r\nexport default function (state = initialState, action ={}){\r\n    switch(action.type){\r\n        case SET_CURRENT_USER:\r\n        return {\r\n            isAuthenticated: !isEmpty(action.payload),\r\n            user:action.payload\r\n        }\r\n        default:\r\n        return state;\r\n    }\r\n}","import {GET_ERRORS} from '../actions/types';\r\n\r\nconst initialState ={};\r\n\r\nexport default function (state=initialState, action){\r\n    switch (action.type){\r\n        case GET_ERRORS:\r\n                return action.payload;\r\n    \r\n    default:\r\n    return state;\r\n}\r\n}","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  errors: errorReducer\r\n});","import { createStore, applyMiddleware} from \"redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\nimport thunk from 'redux-thunk';\r\nconst initialState = {};\r\n\r\n\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  applyMiddleware(thunk)\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport jwt_decode from 'jwt-decode';\r\nimport setAuthToken from './helper/setAuthToken';\r\nimport  { setCurrentUser } from './actions/AuthAction';\r\n\r\n\r\ndocument.body.classList.add('dark-gray');\r\n\r\nif(localStorage.Token){\r\n    setAuthToken(localStorage.Token);\r\n    store.dispatch(setCurrentUser(jwt_decode(localStorage.Token)))\r\n}\r\n\r\nReactDOM.render(\r\n<Provider store ={store}>\r\n<App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}