{"ast":null,"code":"import _classCallCheck from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/editProgramSummary/addRubricMeasurePopup.js\";\nimport React, { Component } from 'react';\nimport './popup.css';\n/**\n * Props:\n * -closePopup: a function to close the popup.\n * -rubrics: the list of rubrics to show in select form.\n */\n\nvar Rubrics = function Rubrics(props) {\n  return props.rubrics.map(function (r) {\n    return React.createElement(\"option\", {\n      key: r.Rubric_Title,\n      value: r.Rubric_Title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, r.Rubric_Title);\n  });\n};\n\nvar AddRubricMeasurePopup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddRubricMeasurePopup, _Component);\n\n  function AddRubricMeasurePopup() {\n    _classCallCheck(this, AddRubricMeasurePopup);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AddRubricMeasurePopup).apply(this, arguments));\n  }\n\n  _createClass(AddRubricMeasurePopup, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"popup mounted.\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"popup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"popup_inner p-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Define Rubric Measure\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        className: \"bg-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(Rubrics, {\n        rubrics: this.props.rubrics,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }))), React.createElement(\"button\", {\n        onClick: this.props.closePopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"close me\")));\n    }\n  }]);\n\n  return AddRubricMeasurePopup;\n}(Component);\n\nexport { AddRubricMeasurePopup as default };","map":{"version":3,"sources":["/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/editProgramSummary/addRubricMeasurePopup.js"],"names":["React","Component","Rubrics","props","rubrics","map","r","Rubric_Title","AddRubricMeasurePopup","console","log","closePopup"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,aAAP;AAEA;;;;;;AAMA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK,EAAI;AACvB,SAAOA,KAAK,CAACC,OAAN,CAAcC,GAAd,CAAkB,UAAAC,CAAC,EAAI;AAC5B,WAAO;AAAQ,MAAA,GAAG,EAAEA,CAAC,CAACC,YAAf;AAA6B,MAAA,KAAK,EAAED,CAAC,CAACC,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqDD,CAAC,CAACC,YAAvD,CAAP;AACD,GAFM,CAAP;AAGD,CAJD;;IAMqBC,qB;;;;;;;;;;;;;wCAGjB;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;;;6BAEQ;AACL,aACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAS,QAAA,OAAO,EAAE,KAAKP,KAAL,CAAWC,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,CAFF,EAQE;AAAQ,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWQ,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF,CADF,CADF;AAcD;;;;EAtB4CV,S;;SAA9BO,qB","sourcesContent":["import React, {Component} from 'react';\nimport './popup.css';\n\n/**\n * Props:\n * -closePopup: a function to close the popup.\n * -rubrics: the list of rubrics to show in select form.\n */\n\nconst Rubrics = props => {\n  return props.rubrics.map(r => {\n    return <option key={r.Rubric_Title} value={r.Rubric_Title}>{r.Rubric_Title}</option>\n  })\n}\n\nexport default class AddRubricMeasurePopup extends Component\n{\n    componentDidMount()\n    {\n      console.log(\"popup mounted.\");\n    }\n\n    render() {\n        return (\n          <div className='popup'>\n            <div className='popup_inner p-4'>\n              <h1>Define Rubric Measure</h1>\n              <form>\n                <input type=\"text\" />\n                <select className=\"bg-danger\">\n                  <Rubrics rubrics={this.props.rubrics} />\n                </select>\n              </form>\n              <button onClick={this.props.closePopup}>close me</button>\n            </div>\n          </div>\n        );\n      }\n}"]},"metadata":{},"sourceType":"module"}