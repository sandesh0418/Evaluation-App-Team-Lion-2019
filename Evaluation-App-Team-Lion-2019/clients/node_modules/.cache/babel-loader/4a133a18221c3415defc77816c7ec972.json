{"ast":null,"code":"import _classCallCheck from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/editProgramSummary/addRubricMeasurePopup.js\";\nimport React, { Component } from 'react';\nimport './popup.css';\n/**\n * Props:\n * -closePopup: a function to close the popup.\n * -rubrics: the list of rubrics to show in select form.\n * -submit: a function to save the changes to the measure.\n * -handleInputChange: a function to take inputs by name and update their state.\n * -rubric: the current selected rubric.\n * -description: the description that will be in the new measure\n * -targetScore: the target score of the new measure\n * -percentToReachTarget: the percent to reach to the target score\n */\n\nvar Rubrics = function Rubrics(props) {\n  return props.rubrics.map(function (r) {\n    return React.createElement(\"option\", {\n      key: r.Rubric_Title,\n      value: r.Rubric_Title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, r.Rubric_Title);\n  });\n};\n\nvar SelectTargetScore = function SelectTargetScore(props) {\n  console.log(props.rubric);\n  return props.rubric.scale.map(function (s) {\n    return React.createElement(\"option\", {\n      key: s.Value_Number,\n      value: s.Value_Number,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, s.Value_Name);\n  });\n};\n\nvar AddRubricMeasurePopup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddRubricMeasurePopup, _Component);\n\n  function AddRubricMeasurePopup(props) {\n    _classCallCheck(this, AddRubricMeasurePopup);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AddRubricMeasurePopup).call(this, props));\n  }\n\n  _createClass(AddRubricMeasurePopup, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"popup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"popup_inner p-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Define Rubric Measure\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Select rubric: \"), React.createElement(\"select\", {\n        className: \"form-control\",\n        value: this.props.rubric,\n        name: \"rubric\",\n        onChange: this.props.handleInputChange,\n        onClick: this.props.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Rubrics, {\n        rubrics: this.props.rubrics,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Enter Measure Description: \"), React.createElement(\"textarea\", {\n        className: \"form-control\",\n        rows: \"7\",\n        name: \"description\",\n        value: this.props.description,\n        onChange: this.props.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Select target score: \"), React.createElement(\"select\", {\n        className: \"form-control bg-sm\",\n        name: \"targetScore\",\n        value: this.props.targetScore,\n        onChange: this.props.handleInputChange,\n        onClick: this.props.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(SelectTargetScore, {\n        rubric: this.props.rubric,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Enter percent to achieve score: \"), React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        name: \"percentToReachTarget\",\n        value: this.props.percentToReachTarget,\n        onChange: this.props.handleInputChange,\n        min: \"0\",\n        max: \"100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }))), React.createElement(\"button\", {\n        className: \"btn btn-primary mr-4\",\n        name: \"rubricMeasure\",\n        onClick: this.props.submit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        className: \"btn btn-danger mr-4\",\n        onClick: this.props.closePopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Cancel\")));\n    }\n  }]);\n\n  return AddRubricMeasurePopup;\n}(Component);\n\nexport { AddRubricMeasurePopup as default };","map":{"version":3,"sources":["/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/editProgramSummary/addRubricMeasurePopup.js"],"names":["React","Component","Rubrics","props","rubrics","map","r","Rubric_Title","SelectTargetScore","console","log","rubric","scale","s","Value_Number","Value_Name","AddRubricMeasurePopup","handleInputChange","description","targetScore","percentToReachTarget","submit","closePopup"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './popup.css';\n\n/**\n * Props:\n * -closePopup: a function to close the popup.\n * -rubrics: the list of rubrics to show in select form.\n * -submit: a function to save the changes to the measure.\n * -handleInputChange: a function to take inputs by name and update their state.\n * -rubric: the current selected rubric.\n * -description: the description that will be in the new measure\n * -targetScore: the target score of the new measure\n * -percentToReachTarget: the percent to reach to the target score\n */\n\nconst Rubrics = props => {\n  return props.rubrics.map(r => {\n    return <option key={r.Rubric_Title} value={r.Rubric_Title}>{r.Rubric_Title}</option>\n  })\n}\n\nconst SelectTargetScore = props => {\n  console.log(props.rubric);\n  return props.rubric.scale.map(s => {\n    return <option key={s.Value_Number} value={s.Value_Number}>{s.Value_Name}</option>\n  })\n}\n\nexport default class AddRubricMeasurePopup extends Component\n{\n\n    constructor(props)\n    {\n      super(props);\n    }\n\n    render() {\n        return (\n          <div className='popup'>\n            <div className='popup_inner p-4'>\n              <h1>Define Rubric Measure</h1>\n              <form>\n                <div className=\"form-group\">\n                  <label>Select rubric: </label>\n                  <select \n                    className=\"form-control\"\n                    value={this.props.rubric} \n                    name=\"rubric\"\n                    onChange={this.props.handleInputChange}\n                    onClick={this.props.handleInputChange}>\n                    <Rubrics rubrics={this.props.rubrics} />\n                  </select>\n                </div>\n                <div className=\"form-group\">\n                  <label>Enter Measure Description: </label>\n                  <textarea \n                    className=\"form-control\" \n                    rows=\"7\"\n                    name=\"description\"\n                    value={this.props.description}\n                    onChange={this.props.handleInputChange} \n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Select target score: </label>\n                  <select \n                    className=\"form-control bg-sm\"\n                    name=\"targetScore\"\n                    value={this.props.targetScore} \n                    onChange={this.props.handleInputChange}\n                    onClick={this.props.handleInputChange}>\n                    <SelectTargetScore rubric={this.props.rubric} />\n                  </select>\n                </div>\n                <div className=\"form-group\">\n                  <label>Enter percent to achieve score: </label>\n                  <input \n                    type=\"number\" \n                    className=\"form-control\"\n                    name=\"percentToReachTarget\"\n                    value={this.props.percentToReachTarget}\n                    onChange={this.props.handleInputChange} \n                    min=\"0\" \n                    max=\"100\" />\n                </div>\n              </form>\n              <button\n                className=\"btn btn-primary mr-4\" \n                name=\"rubricMeasure\"\n                onClick={this.props.submit}>\n                Submit\n              </button>\n              <button \n                className=\"btn btn-danger mr-4\" \n                onClick={this.props.closePopup}>\n                Cancel\n              </button>\n            </div>\n          </div>\n        );\n      }\n}"]},"metadata":{},"sourceType":"module"}