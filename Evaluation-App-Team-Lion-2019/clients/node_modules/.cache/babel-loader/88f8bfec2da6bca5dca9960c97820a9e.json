{"ast":null,"code":"import _defineProperty from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/Rubric/rubricView.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport '../../../stylesheets/rubricView.css';\nimport { ClipLoader } from 'react-spinners';\nimport { Spinner } from 'react-bootstrap';\n\nfunction TopRowGradeScale(props) {\n  return props.oneCriteria.descriptions.map(function (currentDescription) {\n    return React.createElement(\"th\", {\n      scope: \"col\",\n      key: currentDescription.value_number,\n      as: \"textarea\",\n      \"aria-label\": \"With textarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, currentDescription.value_name === \"\" ? \"Undefined value name.\" : currentDescription.value_name);\n  });\n}\n\nfunction CriteriaRow(props) {\n  return props.criteria.map(function (currentCriteria, i) {\n    return React.createElement(\"tr\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      className: \"p-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, currentCriteria.criteria_title === \"\" ? \"Undefined Critieria\" : currentCriteria.criteria_title), React.createElement(CriteriaDescription, {\n      criteriaDescriptions: currentCriteria.descriptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), props.gradeMode ? React.createElement(\"td\", {\n      className: \"p-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(CriteriaGradeInput, {\n      currentCriteria: currentCriteria,\n      calculateAverageScore: props.calculateAverageScore,\n      gradeScale: props.gradeScale,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })) : null, props.weighted ? React.createElement(\"td\", {\n      className: \"p-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, currentCriteria.weight + \"%\") : null);\n  });\n}\n\nfunction CriteriaDescription(props) {\n  return props.criteriaDescriptions.map(function (currentDescription) {\n    return React.createElement(\"td\", {\n      key: currentDescription.value_number,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, currentDescription.value_description);\n  });\n}\n\nfunction CriteriaGradeInput(props) {\n  return React.createElement(\"select\", {\n    className: \"form-control\",\n    id: props.currentCriteria.criteria_title,\n    onChange: props.calculateAverageScore,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    disabled: true,\n    value: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \" -- select an option -- \"), props.gradeScale);\n}\n\nvar SubjectSelector = function SubjectSelector(props) {\n  return React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"mr-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Select Subject:\"), React.createElement(\"select\", {\n    className: \"form-control width-200\",\n    value: props.value,\n    onChange: props.onChange,\n    onClick: props.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(SubjectList, {\n    subjectList: props.subjectList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })));\n};\n\nvar SubjectList = function SubjectList(props) {\n  return props.subjectList.map(function (s) {\n    return React.createElement(\"option\", {\n      key: s.subjectId,\n      value: s.subjectId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, s.subjectName);\n  });\n};\n\nfunction calculateUnweightedAverage(scores) {\n  var totalScore = 0;\n  var numberOfCriteria = 0;\n  scores.forEach(function (s) {\n    totalScore = totalScore + parseInt(s.score);\n    numberOfCriteria++;\n  });\n  return totalScore / numberOfCriteria;\n}\n\nfunction calculateWeightedAverage(scores) {\n  var totalScore = 0;\n  scores.forEach(function (s) {\n    totalScore = totalScore + s.score * (s.weight / 100);\n  });\n  return totalScore;\n}\n\nfunction mapAverageScoreToValueName(criteria, averageScore) {\n  var description = criteria.descriptions.find(function (d) {\n    return d.value_number === Math.floor(averageScore);\n  });\n  return description.value_name;\n}\n\nvar ViewRubric =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ViewRubric, _Component);\n\n  function ViewRubric(props) {\n    var _this;\n\n    _classCallCheck(this, ViewRubric);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ViewRubric).call(this, props));\n    _this.onChangeSubjectId = _this.onChangeSubjectId.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSaveGradeClick = _this.handleSaveGradeClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.calculateAverageScore = _this.calculateAverageScore.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleInput = _this.handleInput.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      rubricTitle: '',\n      Rubric_Id: '',\n      scale: '',\n      rubric: {\n        criteria: [{\n          descriptions: [{\n            value_number: 1,\n            value_name: 0\n          }]\n        }]\n      },\n      gradeMode: false,\n      measureId: '',\n      subjectId: '',\n      averageScore: 1,\n      calcAverage: 2,\n      subjectList: []\n    };\n    return _this;\n  }\n\n  _createClass(ViewRubric, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setView();\n      this.getData();\n    }\n  }, {\n    key: \"setView\",\n    value: function setView() {\n      if (window.location.pathname.includes('/gradeRubric/')) {\n        this.setState({\n          gradeMode: true\n        });\n      }\n    }\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      var _this2 = this;\n\n      axios.get('/rubric/getViewRubric/' + this.props.match.params.rubric + \"/\" + localStorage.getItem(\"Cycle_Id\")).then(function (res) {\n        _this2.setState({\n          rubricTitle: res.data.rubric.rubric_title,\n          Rubric_Id: res.data.rubric.Rubric_Id,\n          rubric: res.data.rubric\n        });\n      });\n\n      if (window.location.pathname.includes('/gradeRubric/')) {\n        axios.get('/assignments/subjectList/' + this.props.match.params.assignment).then(function (res) {\n          _this2.setState({\n            subjectList: res.data.subjectList,\n            subjectId: res.data.subjectList[0].subjectId\n          });\n        });\n        axios.get('/assignments/assignmentMeasure/' + this.props.match.params.assignment).then(function (res) {\n          _this2.setState({\n            measureId: res.data.measure.measureId\n          });\n        });\n      }\n    }\n  }, {\n    key: \"handleSaveGradeClick\",\n    value: function handleSaveGradeClick() {\n      var scores = this.state.rubric.criteria.map(function (currentCriteria) {\n        return {\n          criteriaTitle: currentCriteria.criteria_title,\n          value: document.getElementById(currentCriteria.criteria_title).value\n        };\n      });\n      var subjectScore = {\n        measureId: this.state.measureId,\n        userEmail: localStorage.getItem('email'),\n        subjectId: this.state.subjectId,\n        scores: scores\n      };\n      axios.post('/scoreSubmission/rubricScore', subjectScore).then(function (res) {\n        alert(\"The score has been saved.\");\n        window.location.reload();\n      });\n    }\n  }, {\n    key: \"calculateAverageScore\",\n    value: function calculateAverageScore(e) {\n      var scores = this.state.rubric.criteria.map(function (c) {\n        return {\n          criteriaTitle: c.criteria_title,\n          weight: c.weight,\n          score: document.getElementById(c.criteria_title).value\n        };\n      });\n\n      if (this.state.rubric.weighted) {\n        this.setState({\n          averageScore: calculateWeightedAverage(scores)\n        });\n      } else {\n        this.setState({\n          averageScore: calculateUnweightedAverage(scores)\n        });\n      }\n    }\n  }, {\n    key: \"handleInput\",\n    value: function handleInput(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"onChangeSubjectId\",\n    value: function onChangeSubjectId(e) {\n      this.setState({\n        subjectId: e.target.value\n      });\n      var subjectIndex = this.state.subjectList.findIndex(function (s) {\n        return s.subjectId === e.target.value;\n      });\n\n      if (this.state.subjectList[subjectIndex].scores[0].score !== null) {\n        this.state.subjectList[subjectIndex].scores.forEach(function (s) {\n          document.getElementById(s.criteriaTitle).value = s.score;\n        });\n      } else {\n        this.state.rubric.criteria.forEach(function (c) {\n          document.getElementById(c.criteria_title).value = 1;\n        });\n      }\n    }\n  }, {\n    key: \"onChangeScale\",\n    value: function onChangeScale(e) {\n      this.setState({\n        scale: e.target.value\n      });\n    }\n  }, {\n    key: \"EditRubric\",\n    value: function EditRubric(e) {\n      localStorage.removeItem(\"Rubric_Id\");\n      localStorage.setItem(\"Rubric_Id\", e.target.id);\n      window.location.replace('/createRubric');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var saveGradeButton;\n      var rubricAverage;\n      var editRubricButton;\n\n      if (this.state.gradeMode) {\n        saveGradeButton = React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary\",\n          onClick: this.handleSaveGradeClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267\n          },\n          __self: this\n        }, \"Save Grade\");\n        rubricAverage = React.createElement(\"div\", {\n          className: \"mb-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"pr-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270\n          },\n          __self: this\n        }, \"Decimal Places in Average\"), React.createElement(\"select\", {\n          defaultValue: \"2\",\n          className: \"form-control width-200\",\n          name: \"calcAverage\",\n          onChange: this.handleInput,\n          onClick: this.handleInput,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: \"0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273\n          },\n          __self: this\n        }, \"No Decimal\"), React.createElement(\"option\", {\n          value: \"1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274\n          },\n          __self: this\n        }, \"One Decimal\"), React.createElement(\"option\", {\n          value: \"2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275\n          },\n          __self: this\n        }, \"Two Decimals\"), React.createElement(\"option\", {\n          value: \"3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276\n          },\n          __self: this\n        }, \"Three Decimals\")), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278\n          },\n          __self: this\n        }, \"The average score is:\", \" \" + this.state.averageScore.toFixed(this.state.calcAverage) + \"  or '\" + mapAverageScoreToValueName(this.state.rubric.criteria[0], this.state.averageScore) + \"'\"));\n      } else {\n        editRubricButton = React.createElement(\"div\", {\n          className: \"col s12\",\n          style: {\n            paddingLeft: \"11.250px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"#\",\n          style: {\n            width: \"150px\",\n            borderRadius: \"3px\",\n            letterSpacing: \"1.5px\",\n            marginTop: \"1rem\",\n            padding: \"15px\"\n          },\n          id: this.state.Rubric_Id,\n          onClick: this.EditRubric,\n          className: \"btn btn-large waves-effect waves-light hoverable blue accent-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287\n          },\n          __self: this\n        }, \"Edit\"));\n      }\n\n      var gradeScale = this.state.rubric.criteria[0].descriptions.map(function (currentDescription) {\n        return React.createElement(\"option\", {\n          key: currentDescription.value_number,\n          value: currentDescription.value_number,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307\n          },\n          __self: this\n        }, currentDescription.value_name);\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, \"Rubric\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"mr-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, this.state.gradeMode ? \"Grade\" : null, \" \", this.state.rubric.rubric_title), this.state.gradeMode ? React.createElement(SubjectSelector, {\n        subjectList: this.state.subjectList,\n        onChange: this.onChangeSubjectId,\n        value: this.state.subjectId,\n        className: \"bg-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }) : null), React.createElement(\"table\", {\n        className: \"table table-bordered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        id: \"criteria\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"col\",\n        className: \"outcome-width\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, \"Criteria\"), React.createElement(TopRowGradeScale, {\n        oneCriteria: this.state.rubric.criteria[0],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }), this.state.gradeMode ? React.createElement(\"th\", {\n        scope: \"col\",\n        width: \"150px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, \"Score\") : null, this.state.rubric.weighted ? React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, \"Weight\") : null)), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, React.createElement(CriteriaRow, {\n        gradeMode: this.state.gradeMode,\n        criteria: this.state.rubric.criteria,\n        weighted: this.state.rubric.weighted,\n        gradeScale: gradeScale,\n        calculateAverageScore: this.calculateAverageScore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }))), rubricAverage, saveGradeButton, editRubricButton);\n    }\n  }]);\n\n  return ViewRubric;\n}(Component);\n\nexport { ViewRubric as default };","map":{"version":3,"sources":["/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/Rubric/rubricView.js"],"names":["React","Component","axios","ClipLoader","Spinner","TopRowGradeScale","props","oneCriteria","descriptions","map","currentDescription","value_number","value_name","CriteriaRow","criteria","currentCriteria","i","criteria_title","gradeMode","calculateAverageScore","gradeScale","weighted","weight","CriteriaDescription","criteriaDescriptions","value_description","CriteriaGradeInput","SubjectSelector","value","onChange","subjectList","SubjectList","s","subjectId","subjectName","calculateUnweightedAverage","scores","totalScore","numberOfCriteria","forEach","parseInt","score","calculateWeightedAverage","mapAverageScoreToValueName","averageScore","description","find","d","Math","floor","ViewRubric","onChangeSubjectId","bind","handleSaveGradeClick","handleInput","state","rubricTitle","Rubric_Id","scale","rubric","measureId","calcAverage","setView","getData","window","location","pathname","includes","setState","get","match","params","localStorage","getItem","then","res","data","rubric_title","assignment","measure","criteriaTitle","document","getElementById","subjectScore","userEmail","post","alert","reload","e","c","target","name","subjectIndex","findIndex","removeItem","setItem","id","replace","saveGradeButton","rubricAverage","editRubricButton","toFixed","paddingLeft","width","borderRadius","letterSpacing","marginTop","padding","EditRubric"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from \"axios\";\nimport '../../../stylesheets/rubricView.css';\nimport { ClipLoader } from 'react-spinners';\nimport { Spinner } from 'react-bootstrap';\n\n\nfunction TopRowGradeScale(props)\n{\n    return props.oneCriteria.descriptions.map(function(currentDescription)\n    {\n        return <th scope=\"col\" \n                    key={currentDescription.value_number}\n                    as=\"textarea\"\n                    aria-label=\"With textarea\">\n                    {currentDescription.value_name === \"\" ? \"Undefined value name.\" : currentDescription.value_name}\n                </th>\n    });\n}\n\nfunction CriteriaRow(props)\n{\n    return props.criteria.map(function(currentCriteria, i)\n    {\n        return (\n            <tr key={i}>\n                <th scope=\"row\" className=\"p-3\">\n                    {currentCriteria.criteria_title === \"\" ? \"Undefined Critieria\" : currentCriteria.criteria_title}\n                </th>\n                <CriteriaDescription criteriaDescriptions={currentCriteria.descriptions} />\n                {props.gradeMode?  \n                    <td className=\"p-3\">\n                        <CriteriaGradeInput \n                            currentCriteria={currentCriteria} \n                            calculateAverageScore={props.calculateAverageScore} \n                            gradeScale={props.gradeScale} />\n                    </td> : null}\n                {props.weighted ? <td className=\"p-3\">{currentCriteria.weight + \"%\"}</td> : null}\n            </tr>\n            );\n    });\n}\n\nfunction CriteriaDescription(props)\n{\n    return props.criteriaDescriptions.map(function(currentDescription)\n    {\n        return <td key={currentDescription.value_number}>{currentDescription.value_description}</td>\n    });\n}\n\nfunction CriteriaGradeInput(props)\n{\n    return (\n        <select className=\"form-control\" id={props.currentCriteria.criteria_title} onChange={props.calculateAverageScore}>\n            <option disabled value> -- select an option -- </option>\n            {props.gradeScale}\n        </select>\n    )\n}\n\nconst SubjectSelector = props => {\n    return (\n        <div className=\"form-group\">\n            <label className=\"mr-2\">Select Subject:</label>\n            <select className=\"form-control width-200\" value={props.value} onChange={props.onChange} onClick={props.onChange}>\n                <SubjectList subjectList={props.subjectList} />\n            </select>\n        </div>\n    )\n}\n\nconst SubjectList = props => {\n    return props.subjectList.map(s => {\n        return <option key={s.subjectId} value={s.subjectId}>{s.subjectName}</option>\n    })\n}\n\nfunction calculateUnweightedAverage(scores)\n{\n    let totalScore = 0;\n    let numberOfCriteria = 0;\n    scores.forEach(s => {\n            totalScore = totalScore + parseInt(s.score);\n            numberOfCriteria++;\n    });\n    return (totalScore / numberOfCriteria);\n}\n\nfunction calculateWeightedAverage(scores)\n{\n    let totalScore = 0;\n    scores.forEach(s => {\n        totalScore = totalScore + (s.score * (s.weight / 100))\n    })\n    return totalScore;\n}\n\nfunction mapAverageScoreToValueName(criteria, averageScore)\n{\n    let description = criteria.descriptions.find(d => d.value_number === Math.floor(averageScore));\n    return description.value_name\n}\n\nexport default class ViewRubric extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.onChangeSubjectId = this.onChangeSubjectId.bind(this);\n        this.handleSaveGradeClick = this.handleSaveGradeClick.bind(this);\n        this.calculateAverageScore = this.calculateAverageScore.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n        this.state = {\n            rubricTitle: '',\n            Rubric_Id: '',\n            scale: '',\n            rubric: {\n                criteria:[{descriptions : [{value_number: 1, value_name: 0}]}]\n            },\n            gradeMode: false,\n            measureId: '',\n            subjectId: '',\n            averageScore: 1,\n            calcAverage: 2,\n            subjectList: []\n        }\n    }\n\n    componentDidMount()\n    {\n        this.setView();\n        this.getData();\n    }\n\n    setView()\n    {\n        if (window.location.pathname.includes('/gradeRubric/'))\n        {\n            this.setState({\n                gradeMode: true\n            })\n        }\n    }\n\n    getData()\n    {\n        axios.get('/rubric/getViewRubric/'+this.props.match.params.rubric + \"/\" + localStorage.getItem(\"Cycle_Id\"))\n            .then(res => {\n                this.setState({\n                    rubricTitle: res.data.rubric.rubric_title,\n                    Rubric_Id: res.data.rubric.Rubric_Id,\n                    rubric: res.data.rubric\n                })\n            })\n\n        if(window.location.pathname.includes('/gradeRubric/'))\n        {\n            axios.get('/assignments/subjectList/'+this.props.match.params.assignment)\n            .then(res => {\n                this.setState({\n                    subjectList: res.data.subjectList,\n                    subjectId: res.data.subjectList[0].subjectId\n                })\n            })\n            axios.get('/assignments/assignmentMeasure/' + this.props.match.params.assignment)\n                .then(res => {\n                    this.setState({\n                        measureId: res.data.measure.measureId\n                    })\n                })\n        }\n    }\n\n    handleSaveGradeClick()\n    {\n        let scores = this.state.rubric.criteria.map(function(currentCriteria)\n        {\n            return {\n                criteriaTitle: currentCriteria.criteria_title,\n                value: document.getElementById(currentCriteria.criteria_title).value\n            };\n        })\n\n        let subjectScore = {measureId: this.state.measureId,\n                            userEmail: localStorage.getItem('email'),\n                            subjectId: this.state.subjectId,\n                            scores: scores};\n\n        axios.post('/scoreSubmission/rubricScore', subjectScore)\n        .then(res => {\n            alert(\"The score has been saved.\");\n            window.location.reload();\n        });\n    }\n\n    calculateAverageScore(e)\n    {\n        let scores = this.state.rubric.criteria.map(c => {\n            return {\n                criteriaTitle: c.criteria_title,\n                weight: c.weight,\n                score: document.getElementById(c.criteria_title).value\n            }\n        })\n\n        if(this.state.rubric.weighted)\n        {\n            this.setState({\n                averageScore: calculateWeightedAverage(scores)\n            })\n        }\n        else\n        {\n            this.setState({\n                averageScore: calculateUnweightedAverage(scores)\n            })\n        }\n    }\n\n    handleInput(e)\n    {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    onChangeSubjectId(e)\n    {\n        this.setState({\n            subjectId: e.target.value\n        });\n\n        let subjectIndex = this.state.subjectList.findIndex(s => s.subjectId === e.target.value);\n        if (this.state.subjectList[subjectIndex].scores[0].score !== null)\n        {\n            this.state.subjectList[subjectIndex].scores.forEach(s => {\n                document.getElementById(s.criteriaTitle).value = s.score;\n            })\n        }\n        else\n        {\n            this.state.rubric.criteria.forEach(c => {\n                document.getElementById(c.criteria_title).value = 1;\n            })\n        }\n    }\n\n    onChangeScale(e){\n        this.setState({scale: e.target.value})\n    }\n\n    EditRubric(e){\n        localStorage.removeItem(\"Rubric_Id\");\n        localStorage.setItem(\"Rubric_Id\", e.target.id);\n        window.location.replace('/createRubric');\n    }\n\n    render()\n    {\n        let saveGradeButton;\n        let rubricAverage;\n        let editRubricButton;\n\n        if (this.state.gradeMode)\n        {\n            saveGradeButton = <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleSaveGradeClick}>Save Grade</button>\n\n            rubricAverage = <div className=\"mb-2\">\n                <label className=\"pr-1\">Decimal Places in Average</label>\n                <select defaultValue=\"2\" className=\"form-control width-200\" name=\"calcAverage\" \n                    onChange={this.handleInput} onClick={this.handleInput}>\n                    <option value=\"0\">No Decimal</option>\n                    <option value=\"1\">One Decimal</option>\n                    <option value=\"2\">Two Decimals</option>\n                    <option value=\"3\">Three Decimals</option>\n                </select>\n                <span>The average score is: \n                    {\" \" + this.state.averageScore.toFixed(this.state.calcAverage) + \"  or '\" + \n                        mapAverageScoreToValueName(this.state.rubric.criteria[0], this.state.averageScore) + \"'\"}\n                </span>\n            </div>\n        }\n        else\n        {\n            editRubricButton = <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <a href=\"#\"\n                style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\",\n                    padding: \"15px\"\n                }}\n                id ={this.state.Rubric_Id}\n                onClick={this.EditRubric}\n\n                className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                >\n                Edit \n                </a>\n            </div>\n        }\n\n        let gradeScale = this.state.rubric.criteria[0].descriptions.map(function(currentDescription)\n        {\n            return <option key={currentDescription.value_number} value={currentDescription.value_number}>{currentDescription.value_name}</option>\n        })\n\n        return (\n            <div>\n                <h1>Rubric</h1>\n                <div>\n                    <h2 className=\"mr-4\">{this.state.gradeMode ? \"Grade\" : null} {this.state.rubric.rubric_title}</h2>\n                    {this.state.gradeMode ? \n                        <SubjectSelector \n                            subjectList={this.state.subjectList} \n                            onChange={this.onChangeSubjectId}\n                            value={this.state.subjectId}\n                            className=\"bg-danger\" />\n                        : null}\n                </div>\n                \n                <table className=\"table table-bordered\">\n                    <thead>\n                        <tr id =\"criteria\"> \n                            <th scope=\"col\" className=\"outcome-width\" >Criteria</th>\n                            <TopRowGradeScale oneCriteria={this.state.rubric.criteria[0]} />\n                            {this.state.gradeMode ? <th scope=\"col\" width=\"150px\">Score</th> : null}\n                            {this.state.rubric.weighted ? <th scope=\"col\">Weight</th> : null}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <CriteriaRow \n                            gradeMode={this.state.gradeMode} \n                            criteria={this.state.rubric.criteria} \n                            weighted={this.state.rubric.weighted}\n                            gradeScale={gradeScale}\n                            calculateAverageScore={this.calculateAverageScore}\n                        />\n                    </tbody>\n                    \n                </table>\n                {rubricAverage}\n                {saveGradeButton}\n                {editRubricButton}\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}