{"ast":null,"code":"import _classCallCheck from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/Cycle/viewPastCycle.js\";\nimport React, { Component } from 'react';\nimport { getAllRubric } from '../../../actions/rubric';\nimport { getOutcome, getMeasure } from '../../../actions/outcome';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Loader from 'react-loader-spinner';\nimport '../../../stylesheets/spinner.css';\n\nvar viewPastCycle =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(viewPastCycle, _Component);\n\n  function viewPastCycle(props, context) {\n    var _this;\n\n    _classCallCheck(this, viewPastCycle);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(viewPastCycle).call(this, props, context));\n    _this.state = {\n      open: false\n    };\n    return _this;\n  }\n\n  _createClass(viewPastCycle, [{\n    key: \"onClick\",\n    value: function onClick(e) {\n      this.props.getMeasure(e.target.id);\n      this.setState({\n        open: !this.state.open\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getAllRubric(this.props.match.params.cycle);\n      this.props.getOutcome(this.props.match.params.cycle);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var open = this.state.open;\n      var rubric = this.props.rubric;\n      var outcomes = this.props.outcomes;\n      var rubricDisplay;\n      var outcomeDisplay;\n\n      if (rubric.getAllRubric != null) {\n        if (rubric.getAllRubric.rubrics.length > 0) {\n          rubricDisplay = React.createElement(\"div\", {\n            className: \"card\",\n            style: {\n              width: \"18rem\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"card-header\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          }, \"Rubrics\"), React.createElement(\"ul\", {\n            className: \"list-group list-group-flush\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          }, rubric.getAllRubric.rubrics.map(function (single, index) {\n            return React.createElement(\"li\", {\n              className: \"list-group-item\",\n              key: index,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 48\n              },\n              __self: this\n            }, \" \", single.Rubric_Title);\n          })));\n        } else {\n          rubricDisplay = React.createElement(\"p\", {\n            className: \"text-danger\",\n            style: {\n              textAlign: \"center\",\n              fontSize: \"30px\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, \" This Cycle does not have any rubrics\");\n        }\n      } else {\n        rubricDisplay = React.createElement(Loader, {\n          type: \"Oval\",\n          color: \"black\",\n          height: \"100\",\n          width: \"100\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        });\n      }\n\n      if (outcomes.outcome != null) {\n        if (outcomes.outcome.length > 0) {\n          outcomeDisplay = React.createElement(\"div\", {\n            className: \"card\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"card-header\",\n            style: {\n              textAlign: \"center\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, \"Outcomes\"), React.createElement(\"table\", {\n            className: \"table-bordered\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }, outcomes.outcome.map(function (single, index) {\n            return React.createElement(\"tbody\", {\n              key: index,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 84\n              },\n              __self: this\n            }, React.createElement(\"tr\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 85\n              },\n              __self: this\n            }, React.createElement(\"td\", {\n              style: {\n                padding: \"2px\",\n                width: \"2rem\",\n                textAlign: \"center\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 86\n              },\n              __self: this\n            }, React.createElement(\"a\", {\n              onClick: _this2.onClick.bind(_this2),\n              id: single.Outcome_ID,\n              name: single.Outcome_Name,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 86\n              },\n              __self: this\n            }, single.Outcome_Name)), React.createElement(\"td\", {\n              style: {\n                padding: \"8px\",\n                width: \"4rem\",\n                textAlign: \"justify\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 92\n              },\n              __self: this\n            }, single.Description)));\n          })));\n        }\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row justify-content-md-center container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, rubricDisplay), React.createElement(\"div\", {\n        className: \"col-sm-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, outcomeDisplay)));\n    }\n  }]);\n\n  return viewPastCycle;\n}(Component);\n\nviewPastCycle.propTypes = {\n  getAllRubric: PropTypes.func.isRequired,\n  rubric: PropTypes.object.isRequired,\n  getOutcome: PropTypes.func.isRequired,\n  outcomes: PropTypes.object.isRequired,\n  getMeasure: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nvar mapPropsToState = function mapPropsToState(state) {\n  return {\n    rubric: state.rubric,\n    outcomes: state.outcomes,\n    auth: state.auth\n  };\n};\n\nexport default connect(mapPropsToState, {\n  getAllRubric: getAllRubric,\n  getOutcome: getOutcome,\n  getMeasure: getMeasure\n})(viewPastCycle);","map":{"version":3,"sources":["/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/Cycle/viewPastCycle.js"],"names":["React","Component","getAllRubric","getOutcome","getMeasure","PropTypes","connect","Loader","viewPastCycle","props","context","state","open","e","target","id","setState","match","params","cycle","rubric","outcomes","rubricDisplay","outcomeDisplay","rubrics","length","width","map","single","index","Rubric_Title","textAlign","fontSize","outcome","padding","onClick","bind","Outcome_ID","Outcome_Name","Description","propTypes","func","isRequired","object","auth","mapPropsToState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {getAllRubric} from '../../../actions/rubric';\nimport { getOutcome, getMeasure} from '../../../actions/outcome';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Loader from 'react-loader-spinner';\nimport '../../../stylesheets/spinner.css';\n\n\n\n\n\n\nclass viewPastCycle extends Component {\n    constructor(props, context) {\n        super(props, context);\n    \n        this.state = {\n          open: false,\n        };\n      }\n   \n     onClick(e){\n         this.props.getMeasure(e.target.id)\n         this.setState({ open: !this.state.open })\n     }\n\n\n    componentDidMount(){\n        this.props.getAllRubric(this.props.match.params.cycle);\n        this.props.getOutcome(this.props.match.params.cycle);\n    }\n  render() {\n    const { open } = this.state;\n    const {rubric} = this.props;\n    const { outcomes } = this.props;\n    var rubricDisplay;\n    var outcomeDisplay;\n    if(rubric.getAllRubric != null){\n        if(rubric.getAllRubric.rubrics.length>0){\n            rubricDisplay= <div className=\"card\" style={{width: \"18rem\"}}>\n            <div className=\"card-header\">\n              Rubrics\n            </div>\n            <ul className=\"list-group list-group-flush\">\n              \n              {rubric.getAllRubric.rubrics.map((single, index) =>(\n                  <li className=\"list-group-item\" key={index}> {single.Rubric_Title}</li>\n              ))}\n              \n            </ul>\n          </div>\n        }\n\n        else{\n            rubricDisplay = <p className=\"text-danger\" style={{textAlign: \"center\", fontSize: \"30px\"}}> This Cycle does not have any rubrics</p>\n        }\n    }\n\n\n    \n    else{\n        rubricDisplay = <Loader \n        type=\"Oval\"\n        \n        color=\"black\"\n        height=\"100\"\t\n        width=\"100\"\n     />\n    }\n\n    if(outcomes.outcome != null){\n        if(outcomes.outcome.length>0){\n            outcomeDisplay = <div className=\"card\">\n                                <div className=\"card-header\" style={{textAlign: \"center\"}}>\n                                    Outcomes\n                                </div>\n\n\n                                <table className=\"table-bordered\">\n\n                                    {\n                                        outcomes.outcome.map((single, index) =>(\n                                            <tbody key={index}>\n                                            <tr >\n                                            <td style={{padding: \"2px\", width: \"2rem\", textAlign: \"center\"}}><a \n                                                                                                                onClick={this.onClick.bind(this)}\n                                                                                                                id={single.Outcome_ID}\n                                                                                                                name={single.Outcome_Name}\n                                                                                                                >{single.Outcome_Name}</a>\n                                                                                                                                                                                </td>\n                                            <td style={{padding: \"8px\", width: \"4rem\", textAlign: \"justify\"}}>{single.Description}\n                                            \n        </td>\n                    \n                                            </tr></tbody>\n                                        ))\n                                    }\n                                </table>\n                           \n                            </div>}\n    }\n\n    return (\n      <div>\n\n          <div className =\"row justify-content-md-center container\">\n            <div className=\"col-sm-4\">\n                {rubricDisplay}\n                </div>\n            <div className=\"col-sm-8\">\n                {outcomeDisplay}\n                </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nviewPastCycle.propTypes={\n    getAllRubric: PropTypes.func.isRequired,\n    rubric: PropTypes.object.isRequired,\n    getOutcome: PropTypes.func.isRequired,\n    outcomes: PropTypes.object.isRequired,\n    getMeasure: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n}\n\nconst mapPropsToState = state =>({\n    rubric: state.rubric,\n    outcomes: state.outcomes,\n    auth: state.auth\n})\n\n\n\nexport default connect(mapPropsToState, {getAllRubric, getOutcome, getMeasure})(viewPastCycle);"]},"metadata":{},"sourceType":"module"}