{"ast":null,"code":"import _classCallCheck from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/editProgramSummary/addRubricMeasurePopup.js\";\nimport React, { Component } from 'react';\nimport DropdownItem from 'react-bootstrap/DropdownItem';\nimport './popup.css';\n/**\n * Props:\n * -closePopup: a function to close the popup.\n * -rubrics: the list of rubrics to show in select form.\n * -submit: a function to save the changes to the measure.\n * -handleRubricChange: a function to change the rubric\n * -handleDescriptionChange: to change the description\n * -handleTargetScoreChange: to change desired score.\n * -handlePercentToReachTargetChange: to change percent to reach target.\n */\n\nvar Rubrics = function Rubrics(props) {\n  return props.rubrics.map(function (r) {\n    return React.createElement(\"option\", {\n      key: r.Rubric_Title,\n      value: r.Rubric_Title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, r.Rubric_Title);\n  });\n};\n\nvar AddRubricMeasurePopup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddRubricMeasurePopup, _Component);\n\n  function AddRubricMeasurePopup(props) {\n    var _this;\n\n    _classCallCheck(this, AddRubricMeasurePopup);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddRubricMeasurePopup).call(this, props));\n    _this.handleRubricChange = _this.handleRubricChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDescriptionChange = _this.handleDescriptionChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleTargetScoreChange = _this.handleDesiredScoreChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handlePercentToReachTargetChange = _this.handleDesiredAchievementChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      rubric: '',\n      description: \"Enter measure description.  This will displayed in Program Assessment Summary.\",\n      targetScore: 0,\n      percentToReachTarget: 0\n    };\n    return _this;\n  }\n\n  _createClass(AddRubricMeasurePopup, [{\n    key: \"handleRubricChange\",\n    value: function handleRubricChange(e) {\n      this.setState({\n        rubric: e.target.value\n      });\n    }\n  }, {\n    key: \"handleDescriptionChange\",\n    value: function handleDescriptionChange(e) {\n      this.setState({\n        description: e.target.value\n      });\n    }\n  }, {\n    key: \"handleDesiredScoreChange\",\n    value: function handleDesiredScoreChange(e) {\n      this.setState({\n        desiredScore: e.target.value\n      });\n    }\n  }, {\n    key: \"handleDesiredAchievementChange\",\n    value: function handleDesiredAchievementChange(e) {\n      this.setState({\n        desiredAcievement: e.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"popup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"popup_inner p-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Define Rubric Measure\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Select rubric: \"), React.createElement(\"select\", {\n        className: \"form-control\",\n        value: this.state.rubric,\n        onChange: this.handleRubricChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Rubrics, {\n        rubrics: this.props.rubrics,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Enter Measure Description: \"), React.createElement(\"textarea\", {\n        className: \"form-control\",\n        rows: \"7\",\n        value: this.state.description,\n        onChange: this.handleDescriptionChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Enter desired score: \"), React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        value: this.state.targetScore,\n        onChange: this.handleDesiredScoreChange,\n        min: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Enter percent to achieve score: \"), React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        value: this.state.percentToReachTarget,\n        onChange: this.handleDesiredAchievementChange,\n        min: \"0\",\n        max: \"100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        className: \"btn btn-primary mr-4\",\n        onClick: this.props.submit,\n        eventKey: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, console.log(this.state), \"Submit\"), React.createElement(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: this.props.closePopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Cancel\")));\n    }\n  }]);\n\n  return AddRubricMeasurePopup;\n}(Component);\n\nexport { AddRubricMeasurePopup as default };","map":{"version":3,"sources":["/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/editProgramSummary/addRubricMeasurePopup.js"],"names":["React","Component","DropdownItem","Rubrics","props","rubrics","map","r","Rubric_Title","AddRubricMeasurePopup","handleRubricChange","bind","handleDescriptionChange","handleTargetScoreChange","handleDesiredScoreChange","handlePercentToReachTargetChange","handleDesiredAchievementChange","state","rubric","description","targetScore","percentToReachTarget","e","setState","target","value","desiredScore","desiredAcievement","submit","console","log","closePopup"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport DropdownItem from 'react-bootstrap/DropdownItem'\nimport './popup.css';\n\n/**\n * Props:\n * -closePopup: a function to close the popup.\n * -rubrics: the list of rubrics to show in select form.\n * -submit: a function to save the changes to the measure.\n * -handleRubricChange: a function to change the rubric\n * -handleDescriptionChange: to change the description\n * -handleTargetScoreChange: to change desired score.\n * -handlePercentToReachTargetChange: to change percent to reach target.\n */\n\nconst Rubrics = props => {\n  return props.rubrics.map(r => {\n    return <option key={r.Rubric_Title} value={r.Rubric_Title}>{r.Rubric_Title}</option>\n  })\n}\n\nexport default class AddRubricMeasurePopup extends Component\n{\n\n    constructor(props)\n    {\n      super(props);\n      this.handleRubricChange = this.handleRubricChange.bind(this);\n      this.handleDescriptionChange = this.handleDescriptionChange.bind(this);\n      this.handleTargetScoreChange = this.handleDesiredScoreChange.bind(this);\n      this.handlePercentToReachTargetChange = this.handleDesiredAchievementChange.bind(this);\n      this.state = {\n        rubric: '',\n        description: \"Enter measure description.  This will displayed in Program Assessment Summary.\",\n        targetScore: 0,\n        percentToReachTarget: 0\n      }\n    }\n\n    handleRubricChange(e)\n    {\n        this.setState({\n          rubric: e.target.value\n        })\n    }\n\n    handleDescriptionChange(e)\n    {\n        this.setState({\n          description: e.target.value\n        })\n    }\n\n    handleDesiredScoreChange(e)\n    {\n      this.setState({\n        desiredScore: e.target.value\n      })\n    }\n\n    handleDesiredAchievementChange(e)\n    {\n      this.setState({\n        desiredAcievement: e.target.value\n      })\n    }\n\n    render() {\n        return (\n          <div className='popup'>\n            <div className='popup_inner p-4'>\n              <h1>Define Rubric Measure</h1>\n              <form>\n                <div className=\"form-group\">\n                  <label>Select rubric: </label>\n                  <select \n                    className=\"form-control\"\n                    value={this.state.rubric} \n                    onChange={this.handleRubricChange}>\n                    <Rubrics rubrics={this.props.rubrics} />\n                  </select>\n                </div>\n                <div className=\"form-group\">\n                  <label>Enter Measure Description: </label>\n                  <textarea \n                    className=\"form-control\" \n                    rows=\"7\"\n                    value={this.state.description}\n                    onChange={this.handleDescriptionChange} \n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Enter desired score: </label>\n                  <input \n                    type=\"number\" \n                    className=\"form-control\"\n                    value={this.state.targetScore} \n                    onChange={this.handleDesiredScoreChange}\n                    min=\"0\" />\n                </div>\n                <div className=\"form-group\">\n                  <label>Enter percent to achieve score: </label>\n                  <input \n                    type=\"number\" \n                    className=\"form-control\"\n                    value={this.state.percentToReachTarget}\n                    onChange={this.handleDesiredAchievementChange} \n                    min=\"0\" \n                    max=\"100\" />\n                </div>\n              </form>\n              <Button\n                className=\"btn btn-primary mr-4\" \n                onClick={this.props.submit}\n                eventKey={this.state}>\n                {console.log(this.state)}\n                Submit\n              </Button>\n              <button \n                className=\"btn btn-danger\" \n                onClick={this.props.closePopup}>\n                Cancel\n              </button>\n            </div>\n          </div>\n        );\n      }\n}"]},"metadata":{},"sourceType":"module"}