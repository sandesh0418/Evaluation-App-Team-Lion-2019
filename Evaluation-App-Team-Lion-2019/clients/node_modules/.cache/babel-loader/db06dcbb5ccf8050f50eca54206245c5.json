{"ast":null,"code":"import _classCallCheck from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/rubricView.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport './rubricView.css';\n\nfunction TopRowGradeScale(props) {\n  return props.oneCriteria.descriptions.map(function (currentDescription) {\n    return React.createElement(\"th\", {\n      scope: \"col\",\n      key: currentDescription.value_title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, currentDescription.value_name);\n  });\n}\n\nfunction CriteriaRow(props) {\n  return props.criteria.map(function (currentCriteria, i) {\n    return React.createElement(\"tr\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, currentCriteria.criteria_title), React.createElement(CriteriaDescription, {\n      criteriaDescriptions: currentCriteria.descriptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), props.gradeMode ? React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(CriteriaGradeInput, {\n      currentCriteria: currentCriteria,\n      gradeScale: props.gradeScale,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    })) : null);\n  });\n}\n\nfunction CriteriaDescription(props) {\n  return props.criteriaDescriptions.map(function (currentDescription) {\n    return React.createElement(\"td\", {\n      key: currentDescription.value_title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, currentDescription.value_description);\n  });\n}\n\nfunction CriteriaGradeInput(props) {\n  return React.createElement(\"select\", {\n    className: \"form-control\",\n    id: props.currentCriteria.criteria_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    disabled: true,\n    value: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \" -- select an option -- \"), props.gradeScale);\n}\n\nvar SubjectSelector = function SubjectSelector(props) {\n  return React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"mr-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Select Subject ID:\"), React.createElement(\"select\", {\n    className: \"form-control width-200\",\n    value: props.value,\n    onChange: props.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(SubjectList, {\n    subjectList: props.subjectList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })));\n};\n\nvar SubjectList = function SubjectList(props) {\n  return props.subjectList.map(function (s) {\n    return React.createElement(\"option\", {\n      key: s.subjectId,\n      value: s.subjectId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, s.subjectName);\n  });\n};\n\nvar ViewRubric =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ViewRubric, _Component);\n\n  function ViewRubric(props) {\n    var _this;\n\n    _classCallCheck(this, ViewRubric);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ViewRubric).call(this, props));\n    _this.onChangeSubjectId = _this.onChangeSubjectId.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSaveGradeClick = _this.handleSaveGradeClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleAverageScoreClick = _this.handleAverageScoreClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      rubricTitle: '',\n      rubric: {\n        criteria: [{\n          descriptions: []\n        }]\n      },\n      gradeMode: false,\n      measureId: '',\n      subjectID: '',\n      averageScore: 1,\n      calcAverage: 2,\n      subjectList: []\n    };\n    return _this;\n  }\n\n  _createClass(ViewRubric, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setView();\n      this.getData();\n    }\n  }, {\n    key: \"setView\",\n    value: function setView() {\n      if (window.location.pathname.includes('/gradeRubric/')) {\n        this.setState({\n          gradeMode: true\n        });\n      }\n    }\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      var _this2 = this;\n\n      axios.get('http://localhost:5000/rubric/getRubric/' + this.props.match.params.rubric).then(function (res) {\n        _this2.setState({\n          rubricTitle: res.data.rubric.rubric_title,\n          rubric: res.data.rubric\n        });\n      });\n      axios.get('http://localhost:5000/assignments/subjectList/' + this.props.match.params.assignment).then(function (res) {\n        _this2.setState({\n          subjectList: res.data.subjectList\n        });\n      });\n      axios.get('http://localhost:5000/assignments/assignmentMeasureId/' + this.props.match.params.assignment).then(function (res) {\n        _this2.setState({\n          measureId: res.data.measureId\n        });\n      });\n    }\n  }, {\n    key: \"handleSaveGradeClick\",\n    value: function handleSaveGradeClick() {\n      var scores = this.state.rubric.criteria.map(function (currentCriteria) {\n        return {\n          criteriaTitle: currentCriteria.criteria_title,\n          value: document.getElementById(currentCriteria.criteria_title).value\n        };\n      });\n      var subjectScore = {\n        measureId: this.state.measureId,\n        userEmail: localStorage.getItem('email'),\n        subjectId: this.state.subjectId,\n        scores: scores\n      };\n      axios.post('http://localhost:5000/scoreSubmission/rubricScore', subjectScore).then(function (res) {\n        console.log(res.data);\n      });\n      alert(\"The score has been saved.\");\n    }\n  }, {\n    key: \"handleAverageScoreClick\",\n    value: function handleAverageScoreClick(e) {\n      this.setState({\n        calcAverage: e.target.value\n      });\n      var totalScore = 0;\n      var numberOfCriteria = 0;\n      this.state.rubric.criteria.forEach(function (currentCriteria) {\n        totalScore = totalScore + parseInt(document.getElementById(currentCriteria.criteria_title).value);\n        numberOfCriteria++;\n      });\n      console.log(totalScore);\n      var average = (totalScore / numberOfCriteria).toFixed(e.target.value);\n      this.setState({\n        averageScore: average\n      });\n    }\n  }, {\n    key: \"onChangeSubjectId\",\n    value: function onChangeSubjectId(e) {\n      this.setState({\n        subjectId: e.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var saveGradeButton;\n      var rubricAverage;\n\n      if (this.state.gradeMode) {\n        saveGradeButton = React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary\",\n          onClick: this.handleSaveGradeClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, \"Save Grade\");\n        rubricAverage = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"pr-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, \"Calculate Average\"), React.createElement(\"select\", {\n          type: \"button\",\n          className: \"btn btn-secondary btn-sm\",\n          onClick: this.handleAverageScoreClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: \"0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }, \"No Decimal\"), React.createElement(\"option\", {\n          value: \"1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, \"One Decimal\"), React.createElement(\"option\", {\n          value: \"2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, \"Two Decimals\"), React.createElement(\"option\", {\n          value: \"3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, \"Three Decimals\")), React.createElement(\"span\", {\n          className: \"pl-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, \"The average score is: \", this.state.averageScore));\n      }\n\n      var gradeScale = this.state.rubric.criteria[0].descriptions.map(function (currentDescription) {\n        return React.createElement(\"option\", {\n          key: currentDescription.value_title,\n          value: currentDescription.value_title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, currentDescription.value_name);\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"Rubric\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"mr-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, this.state.gradeMode ? \"Grade\" : null, \" \", this.state.rubric.rubric_title), this.state.gradeMode ? React.createElement(SubjectSelector, {\n        subjectList: this.state.subjectList,\n        onChange: this.onChangeSubjectId,\n        value: this.state.subjectID,\n        className: \"bg-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }) : null), React.createElement(\"table\", {\n        className: \"table table-bordered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"col\",\n        className: \"outcome-width\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"Criteria\"), React.createElement(TopRowGradeScale, {\n        oneCriteria: this.state.rubric.criteria[0],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }), this.state.gradeMode ? React.createElement(\"th\", {\n        scope: \"col\",\n        width: \"150px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"Score\") : null)), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(CriteriaRow, {\n        gradeMode: this.state.gradeMode,\n        criteria: this.state.rubric.criteria,\n        gradeScale: gradeScale,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }))), rubricAverage, saveGradeButton);\n    }\n  }]);\n\n  return ViewRubric;\n}(Component);\n\nexport { ViewRubric as default };","map":{"version":3,"sources":["/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/rubricView.js"],"names":["React","Component","axios","TopRowGradeScale","props","oneCriteria","descriptions","map","currentDescription","value_title","value_name","CriteriaRow","criteria","currentCriteria","i","criteria_title","gradeMode","gradeScale","CriteriaDescription","criteriaDescriptions","value_description","CriteriaGradeInput","SubjectSelector","value","onChange","subjectList","SubjectList","s","subjectId","subjectName","ViewRubric","onChangeSubjectId","bind","handleSaveGradeClick","handleAverageScoreClick","state","rubricTitle","rubric","measureId","subjectID","averageScore","calcAverage","setView","getData","window","location","pathname","includes","setState","get","match","params","then","res","data","rubric_title","assignment","scores","criteriaTitle","document","getElementById","subjectScore","userEmail","localStorage","getItem","post","console","log","alert","e","target","totalScore","numberOfCriteria","forEach","parseInt","average","toFixed","saveGradeButton","rubricAverage"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from \"axios\";\nimport './rubricView.css';\n\n\nfunction TopRowGradeScale(props)\n{\n    return props.oneCriteria.descriptions.map(function(currentDescription)\n    {\n        return <th scope=\"col\" key={currentDescription.value_title}>{currentDescription.value_name}</th>\n    });\n}\n\nfunction CriteriaRow(props)\n{\n    return props.criteria.map(function(currentCriteria, i)\n    {\n        return (\n            <tr key={i}>\n                <th scope=\"row\">{currentCriteria.criteria_title}</th>\n                <CriteriaDescription criteriaDescriptions={currentCriteria.descriptions} />\n                {props.gradeMode?  <td><CriteriaGradeInput currentCriteria={currentCriteria} gradeScale={props.gradeScale} /></td> : null}\n            </tr>\n            );\n    });\n}\n\nfunction CriteriaDescription(props)\n{\n    return props.criteriaDescriptions.map(function(currentDescription)\n    {\n        return <td key={currentDescription.value_title}>{currentDescription.value_description}</td>\n    });\n}\n\nfunction CriteriaGradeInput(props)\n{\n    return (\n        <select className=\"form-control\" id={props.currentCriteria.criteria_title} >\n            <option disabled value> -- select an option -- </option>\n            {props.gradeScale}\n        </select>\n    )\n}\n\nconst SubjectSelector = props => {\n    return (\n        <div className=\"form-group\">\n            <label className=\"mr-2\">Select Subject ID:</label>\n            <select className=\"form-control width-200\" value={props.value} onChange={props.onChange}>\n                <SubjectList subjectList={props.subjectList} />\n            </select>\n        </div>\n    )\n}\n\nconst SubjectList = props => {\n    return props.subjectList.map(s => {\n        return <option key={s.subjectId} value={s.subjectId}>{s.subjectName}</option>\n    })\n}\n\nexport default class ViewRubric extends Component\n{\n\n    constructor(props)\n    {\n        super(props);\n        this.onChangeSubjectId = this.onChangeSubjectId.bind(this);\n        this.handleSaveGradeClick = this.handleSaveGradeClick.bind(this);\n        this.handleAverageScoreClick = this.handleAverageScoreClick.bind(this);\n        this.state = {\n            rubricTitle: '',\n            rubric: {\n                criteria:[{descriptions : []}]\n            },\n            gradeMode: false,\n            measureId: '',\n            subjectID: '',\n            averageScore: 1,\n            calcAverage: 2,\n            subjectList: []\n        }\n    }\n\n    componentDidMount()\n    {\n        this.setView();\n        this.getData();\n    }\n\n    setView()\n    {\n        if (window.location.pathname.includes('/gradeRubric/'))\n        {\n            this.setState({\n                gradeMode: true\n            })\n        }\n    }\n\n    getData()\n    {\n        axios.get('http://localhost:5000/rubric/getRubric/'+this.props.match.params.rubric)\n            .then(res => {\n                this.setState({\n                    rubricTitle: res.data.rubric.rubric_title,\n                    rubric: res.data.rubric\n                })\n            })\n        axios.get('http://localhost:5000/assignments/subjectList/'+this.props.match.params.assignment)\n            .then(res => {\n                this.setState({\n                    subjectList: res.data.subjectList\n                })\n            })\n        axios.get('http://localhost:5000/assignments/assignmentMeasureId/' + this.props.match.params.assignment)\n            .then(res => {\n                this.setState({\n                    measureId: res.data.measureId\n                })\n            })\n    }\n\n    handleSaveGradeClick()\n    {\n        let scores = this.state.rubric.criteria.map(function(currentCriteria)\n        {\n            return {criteriaTitle: currentCriteria.criteria_title,\n                    value: document.getElementById(currentCriteria.criteria_title).value};\n        })\n\n        let subjectScore = {measureId: this.state.measureId,\n                            userEmail: localStorage.getItem('email'),\n                            subjectId: this.state.subjectId,\n                            scores: scores};\n\n        axios.post('http://localhost:5000/scoreSubmission/rubricScore', subjectScore)\n        .then(res => {\n            console.log(res.data);\n        });\n        alert(\"The score has been saved.\");\n    }\n\n    handleAverageScoreClick(e)\n    {\n        this.setState({\n            calcAverage: e.target.value \n        })\n        let totalScore = 0;\n        let numberOfCriteria = 0;\n        this.state.rubric.criteria.forEach(function(currentCriteria)\n        {\n                totalScore = totalScore + parseInt(document.getElementById(currentCriteria.criteria_title).value);\n                numberOfCriteria++;\n        });\n        console.log(totalScore);\n        let average = (totalScore / numberOfCriteria).toFixed(e.target.value);\n\n        this.setState({\n            averageScore: average\n        })\n    }\n\n    onChangeSubjectId(e)\n    {\n        this.setState({\n            subjectId: e.target.value\n        });\n    }\n\n    render()\n    {\n        let saveGradeButton;\n        let rubricAverage;\n\n        if (this.state.gradeMode)\n        {\n            saveGradeButton = <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleSaveGradeClick}>Save Grade</button>\n\n            rubricAverage = <div>\n                <label className=\"pr-1\">Calculate Average</label>\n                <select type=\"button\" className=\"btn btn-secondary btn-sm\" onClick={this.handleAverageScoreClick}>\n                    <option value=\"0\">No Decimal</option>\n                    <option value=\"1\">One Decimal</option>\n                    <option value=\"2\">Two Decimals</option>\n                    <option value=\"3\">Three Decimals</option>\n                </select>\n                <span className=\"pl-1\">The average score is: {this.state.averageScore}</span>\n            </div>\n        }\n\n        let gradeScale = this.state.rubric.criteria[0].descriptions.map(function(currentDescription)\n        {\n            return <option key={currentDescription.value_title} value={currentDescription.value_title}>{currentDescription.value_name}</option>\n        })\n\n        return (\n            <div>\n                <h1>Rubric</h1>\n                <div>\n                    <h2 className=\"mr-4\">{this.state.gradeMode ? \"Grade\" : null} {this.state.rubric.rubric_title}</h2>\n                    {this.state.gradeMode ? \n                        <SubjectSelector \n                            subjectList={this.state.subjectList} \n                            onChange={this.onChangeSubjectId}\n                            value={this.state.subjectID}\n                            className=\"bg-danger\" />\n                        : null}\n                </div>\n                \n                <table className=\"table table-bordered\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\" className=\"outcome-width\">Criteria</th>\n                            <TopRowGradeScale oneCriteria={this.state.rubric.criteria[0]} />\n                            {this.state.gradeMode ? <th scope=\"col\" width=\"150px\">Score</th> : null}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <CriteriaRow gradeMode={this.state.gradeMode} criteria={this.state.rubric.criteria} gradeScale={gradeScale} />\n                    </tbody>\n                </table>\n                {rubricAverage}\n                {saveGradeButton}\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}