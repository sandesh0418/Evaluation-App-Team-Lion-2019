{"ast":null,"code":"import _defineProperty from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/editProgramSummary/editProgramSummary.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport uuid from 'uuid/v1';\nimport AddRubricMeasurePopup from './addRubricMeasurePopup';\nimport AddTestMeasurePopup from './addTestMeasurePopup';\nvar dummyMeasure = {\n  Measure_ID: '',\n  Description: '',\n  Percent_to_reach_target: 0,\n  Target_Score: 0\n};\nvar dummyOutcome = {\n  Outcome_ID: 0,\n  Description: '',\n  measures: [dummyMeasure]\n};\nvar dummySummary = {\n  title: \"\",\n  outcomes: [dummyOutcome]\n};\n\nvar OutcomeList = function OutcomeList(props) {\n  return props.outcomes.map(function (currentOutcome) {\n    return React.createElement(Outcome, {\n      key: currentOutcome.Outcome_ID,\n      outcome: currentOutcome,\n      handleOutcomeChange: props.handleOutcomeChange,\n      handleAddRubricMeasure: props.handleAddRubricMeasure,\n      handleAddTestMeasure: props.handleAddTestMeasure,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    });\n  });\n};\n\nvar Outcome = function Outcome(props) {\n  return React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col border p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    className: \"form-control\",\n    rows: \"7\",\n    id: props.outcome.Outcome_ID,\n    value: props.outcome.Description,\n    onChange: props.handleOutcomeChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-8 border p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Measures, {\n    measures: props.outcome.measures,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(DropdownButton, {\n    id: \"dropdown-basic-button\",\n    title: \"Add Measure\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Dropdown.Item, {\n    onSelect: props.handleAddTestMeasure,\n    eventKey: props.outcome.Outcome_ID,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Add Test Measure\"), React.createElement(Dropdown.Item, {\n    onSelect: props.handleAddRubricMeasure,\n    eventKey: props.outcome.Outcome_ID,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Add Rubric Measure\"))));\n};\n\nvar Measures = function Measures(props) {\n  return props.measures.map(function (measure) {\n    return React.createElement(\"p\", {\n      key: measure.Description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, measure.Description);\n  });\n};\n\nvar EditProgramSummary =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditProgramSummary, _Component);\n\n  function EditProgramSummary(props) {\n    var _this;\n\n    _classCallCheck(this, EditProgramSummary);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditProgramSummary).call(this, props));\n    _this.handleAddOutcome = _this.handleAddOutcome.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleOutcomeChange = _this.handleOutcomeChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleAddRubricMeasure = _this.handleAddRubricMeasure.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleAddTestMeasure = _this.handleAddTestMeasure.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.closePopup = _this.closePopup.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addNewMeasure = _this.addNewMeasure.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSave = _this.handleSave.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      programSummary: dummySummary,\n      rubrics: null,\n      showAddRubricMeasurePopup: false,\n      showAddTestMeasurePopup: false,\n      outcomeIdOfNewMeasure: \"hello\",\n      //The following values are passed to and manipulated in the addRubricMeasurePopup.\n      rubric: null,\n      //The following values are passed to both the addRubricMeasure and addTestMeasurePopups\n      description: \"Enter measure description.  This will displayed in Program Assessment Summary.\",\n      targetScore: 0,\n      percentToReachTarget: 0\n    };\n    return _this;\n  }\n\n  _createClass(EditProgramSummary, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('http://localhost:5000/summaryReport/getSummary').then(function (res) {\n        _this2.setState({\n          programSummary: res.data.programSummary\n        });\n\n        console.log(res.data.programSummary);\n      });\n      axios.get('http://localhost:5000/rubric/getList').then(function (res) {\n        if (res.data.status) {\n          _this2.setState({\n            rubrics: res.data.rubrics,\n            rubric: res.data.rubrics[0].Rubric_Title\n          });\n        }\n      });\n    }\n  }, {\n    key: \"handleAddOutcome\",\n    value: function handleAddOutcome() {\n      var tempSummary = this.state.programSummary;\n      var newId = uuid();\n      tempSummary.outcomes.push({\n        Outcome_ID: newId,\n        Description: \"Enter outcome description.\",\n        measures: []\n      });\n      this.setState({\n        programSummary: tempSummary\n      });\n    }\n  }, {\n    key: \"handleOutcomeChange\",\n    value: function handleOutcomeChange(e) {\n      var newDescription = e.target.value;\n      var id = e.target.id;\n      var index = this.state.programSummary.outcomes.findIndex(function (o) {\n        return o.Outcome_ID === id;\n      });\n      var tempSummary = this.state.programSummary;\n      tempSummary.outcomes[index].Description = newDescription;\n      this.setState({\n        programSummary: tempSummary\n      });\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"handleAddTestMeasure\",\n    value: function handleAddTestMeasure(e) {\n      this.setState({\n        showAddTestMeasurePopup: true,\n        outcomeIdOfNewMeasure: e\n      });\n    }\n  }, {\n    key: \"handleAddRubricMeasure\",\n    value: function handleAddRubricMeasure(e) {\n      this.setState({\n        showAddRubricMeasurePopup: true,\n        outcomeIdOfNewMeasure: e\n      });\n    }\n  }, {\n    key: \"closePopup\",\n    value: function closePopup(e) {\n      this.setState({\n        showAddRubricMeasurePopup: false,\n        showAddTestMeasurePopup: false\n      });\n    }\n  }, {\n    key: \"addNewMeasure\",\n    value: function addNewMeasure(e) {\n      var _this3 = this;\n\n      var newId = uuid();\n      var tool_name = '';\n\n      if (e.target.name == \"rubricMeasure\") {\n        tool_name = this.state.rubric;\n      } else {\n        tool_name = \"Test\";\n      }\n\n      var newMeasure = {\n        Measure_ID: newId,\n        Description: this.state.description,\n        Percent_to_reach_target: this.state.percentToReachTarget,\n        Target_Score: this.state.targetScore,\n        Tool_Name: tool_name\n      };\n      var index = this.state.programSummary.outcomes.findIndex(function (o) {\n        return o.Outcome_ID === _this3.state.outcomeIdOfNewMeasure;\n      });\n      var tempSummary = this.state.programSummary;\n      tempSummary.outcomes[index].measures.push(newMeasure);\n      this.setState({\n        programSummary: tempSummary,\n        showAddRubricMeasurePopup: false,\n        showAddTestMeasurePopup: false,\n        rubric: this.state.rubrics[0].Rubric_Title,\n        description: \"Enter measure description.  This will displayed in Program Assessment Summary.\",\n        targetScore: 0,\n        percentToReachTarget: 0\n      });\n    }\n  }, {\n    key: \"handleSave\",\n    value: function handleSave() {\n      var _this4 = this;\n\n      axios.post('http://localhost:5000/editProgramSummary/editProgramSummary', this.state.programSummary).then(function (res) {\n        _this4.props.history.push(\"/viewSummary\");\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"Edit Program Summary\"), React.createElement(OutcomeList, {\n        outcomes: this.state.programSummary.outcomes,\n        handleOutcomeChange: this.handleOutcomeChange,\n        handleAddRubricMeasure: this.handleAddRubricMeasure,\n        handleAddTestMeasure: this.handleAddTestMeasure,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-primary mb-4\",\n        onClick: this.handleAddOutcome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \"Add Outcome\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-danger mb-4\",\n        onClick: this.handleSave,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"Save Changes\")), this.state.showAddRubricMeasurePopup ? React.createElement(AddRubricMeasurePopup, {\n        closePopup: this.closePopup,\n        submit: this.addNewMeasure,\n        rubrics: this.state.rubrics,\n        handleInputChange: this.handleInputChange,\n        rubric: this.state.rubric,\n        description: this.state.description,\n        targetScore: this.state.targetScore,\n        percentToReachTarget: this.state.percentToReachTarget,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }) : null, this.state.showAddTestMeasurePopup ? React.createElement(AddTestMeasurePopup, {\n        closePopup: this.closePopup,\n        submit: this.addNewMeasure,\n        handleInputChange: this.handleInputChange,\n        description: this.state.description,\n        targetScore: this.state.targetScore,\n        percentToReachTarget: this.state.percentToReachTarget,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }) : null);\n    }\n  }]);\n\n  return EditProgramSummary;\n}(Component);\n\nexport { EditProgramSummary as default };","map":{"version":3,"sources":["/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/editProgramSummary/editProgramSummary.js"],"names":["React","Component","axios","Dropdown","DropdownButton","uuid","AddRubricMeasurePopup","AddTestMeasurePopup","dummyMeasure","Measure_ID","Description","Percent_to_reach_target","Target_Score","dummyOutcome","Outcome_ID","measures","dummySummary","title","outcomes","OutcomeList","props","map","currentOutcome","handleOutcomeChange","handleAddRubricMeasure","handleAddTestMeasure","Outcome","outcome","Measures","measure","EditProgramSummary","handleAddOutcome","bind","handleInputChange","closePopup","addNewMeasure","handleSave","state","programSummary","rubrics","showAddRubricMeasurePopup","showAddTestMeasurePopup","outcomeIdOfNewMeasure","rubric","description","targetScore","percentToReachTarget","get","then","res","setState","data","console","log","status","Rubric_Title","tempSummary","newId","push","e","newDescription","target","value","id","index","findIndex","o","name","tool_name","newMeasure","Tool_Name","post","history"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,UAAU,EAAE,EADG;AAEfC,EAAAA,WAAW,EAAE,EAFE;AAGfC,EAAAA,uBAAuB,EAAE,CAHV;AAIfC,EAAAA,YAAY,EAAE;AAJC,CAAnB;AAOA,IAAIC,YAAY,GAAG;AACfC,EAAAA,UAAU,EAAE,CADG;AAEfJ,EAAAA,WAAW,EAAE,EAFE;AAGfK,EAAAA,QAAQ,EAAE,CAACP,YAAD;AAHK,CAAnB;AAMA,IAAIQ,YAAY,GAAG;AACfC,EAAAA,KAAK,EAAE,EADQ;AAEfC,EAAAA,QAAQ,EAAE,CAACL,YAAD;AAFK,CAAnB;;AAKA,IAAMM,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AACzB,SAAOA,KAAK,CAACF,QAAN,CAAeG,GAAf,CAAmB,UAASC,cAAT,EAAyB;AAC/C,WAAO,oBAAC,OAAD;AACK,MAAA,GAAG,EAAEA,cAAc,CAACR,UADzB;AAEK,MAAA,OAAO,EAAEQ,cAFd;AAGK,MAAA,mBAAmB,EAAEF,KAAK,CAACG,mBAHhC;AAIK,MAAA,sBAAsB,EAAEH,KAAK,CAACI,sBAJnC;AAKK,MAAA,oBAAoB,EAAEJ,KAAK,CAACK,oBALjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAOH,GARM,CAAP;AASH,CAVD;;AAYA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAN,KAAK,EAAI;AACrB,SACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,SAAS,EAAC,cADd;AAEI,IAAA,IAAI,EAAC,GAFT;AAGI,IAAA,EAAE,EAAEA,KAAK,CAACO,OAAN,CAAcb,UAHtB;AAII,IAAA,KAAK,EAAEM,KAAK,CAACO,OAAN,CAAcjB,WAJzB;AAKI,IAAA,QAAQ,EAAEU,KAAK,CAACG,mBALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAUI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEH,KAAK,CAACO,OAAN,CAAcZ,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,cAAD;AAAgB,IAAA,EAAE,EAAC,uBAAnB;AAA2C,IAAA,KAAK,EAAC,aAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD,CAAU,IAAV;AACI,IAAA,QAAQ,EAAEK,KAAK,CAACK,oBADpB;AAEI,IAAA,QAAQ,EAAEL,KAAK,CAACO,OAAN,CAAcb,UAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAMI,oBAAC,QAAD,CAAU,IAAV;AACI,IAAA,QAAQ,EAAEM,KAAK,CAACI,sBADpB;AAEI,IAAA,QAAQ,EAAEJ,KAAK,CAACO,OAAN,CAAcb,UAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANJ,CAFJ,CAVJ,CADJ;AA4BH,CA7BD;;AA+BA,IAAMc,QAAQ,GAAG,SAAXA,QAAW,CAAAR,KAAK,EAAI;AACtB,SAAOA,KAAK,CAACL,QAAN,CAAeM,GAAf,CAAmB,UAAAQ,OAAO,EAAI;AACjC,WAAO;AAAG,MAAA,GAAG,EAAEA,OAAO,CAACnB,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8BmB,OAAO,CAACnB,WAAtC,CAAP;AACH,GAFM,CAAP;AAGH,CAJD;;IAMqBoB,kB;;;;;AAGjB,8BAAYV,KAAZ,EACA;AAAA;;AAAA;;AACI,4FAAMA,KAAN;AACA,UAAKW,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBC,IAAtB,uDAAxB;AACA,UAAKT,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBS,IAAzB,uDAA3B;AACA,UAAKR,sBAAL,GAA8B,MAAKA,sBAAL,CAA4BQ,IAA5B,uDAA9B;AACA,UAAKP,oBAAL,GAA4B,MAAKA,oBAAL,CAA0BO,IAA1B,uDAA5B;AACA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBD,IAAvB,uDAAzB;AACA,UAAKE,UAAL,GAAkB,MAAKA,UAAL,CAAgBF,IAAhB,uDAAlB;AACA,UAAKG,aAAL,GAAqB,MAAKA,aAAL,CAAmBH,IAAnB,uDAArB;AACA,UAAKI,UAAL,GAAkB,MAAKA,UAAL,CAAgBJ,IAAhB,uDAAlB;AACA,UAAKK,KAAL,GAAa;AACTC,MAAAA,cAAc,EAAEtB,YADP;AAETuB,MAAAA,OAAO,EAAE,IAFA;AAGTC,MAAAA,yBAAyB,EAAE,KAHlB;AAITC,MAAAA,uBAAuB,EAAE,KAJhB;AAKTC,MAAAA,qBAAqB,EAAE,OALd;AAMT;AACAC,MAAAA,MAAM,EAAE,IAPC;AAQT;AACAC,MAAAA,WAAW,EAAE,gFATJ;AAUTC,MAAAA,WAAW,EAAE,CAVJ;AAWTC,MAAAA,oBAAoB,EAAE;AAXb,KAAb;AAVJ;AAuBC;;;;wCAGD;AAAA;;AACI5C,MAAAA,KAAK,CAAC6C,GAAN,CAAU,gDAAV,EACKC,IADL,CACU,UAAAC,GAAG,EAAI;AACT,QAAA,MAAI,CAACC,QAAL,CAAc;AACVZ,UAAAA,cAAc,EAAEW,GAAG,CAACE,IAAJ,CAASb;AADf,SAAd;;AAGAc,QAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACE,IAAJ,CAASb,cAArB;AACP,OAND;AAOApC,MAAAA,KAAK,CAAC6C,GAAN,CAAU,sCAAV,EACKC,IADL,CACU,UAAAC,GAAG,EAAI;AACT,YAAGA,GAAG,CAACE,IAAJ,CAASG,MAAZ,EACA;AACI,UAAA,MAAI,CAACJ,QAAL,CAAc;AACVX,YAAAA,OAAO,EAAEU,GAAG,CAACE,IAAJ,CAASZ,OADR;AAEVI,YAAAA,MAAM,EAAEM,GAAG,CAACE,IAAJ,CAASZ,OAAT,CAAiB,CAAjB,EAAoBgB;AAFlB,WAAd;AAIH;AACR,OATD;AAUH;;;uCAGD;AACI,UAAIC,WAAW,GAAG,KAAKnB,KAAL,CAAWC,cAA7B;AACA,UAAImB,KAAK,GAAGpD,IAAI,EAAhB;AACAmD,MAAAA,WAAW,CAACtC,QAAZ,CAAqBwC,IAArB,CAA0B;AACtB5C,QAAAA,UAAU,EAAE2C,KADU;AAEtB/C,QAAAA,WAAW,EAAE,4BAFS;AAGtBK,QAAAA,QAAQ,EAAE;AAHY,OAA1B;AAMA,WAAKmC,QAAL,CAAc;AACVZ,QAAAA,cAAc,EAAEkB;AADN,OAAd;AAGH;;;wCAEmBG,C,EACpB;AACI,UAAIC,cAAc,GAAGD,CAAC,CAACE,MAAF,CAASC,KAA9B;AACA,UAAIC,EAAE,GAAGJ,CAAC,CAACE,MAAF,CAASE,EAAlB;AACA,UAAIC,KAAK,GAAG,KAAK3B,KAAL,CAAWC,cAAX,CAA0BpB,QAA1B,CAAmC+C,SAAnC,CAA6C,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACpD,UAAF,KAAiBiD,EAArB;AAAA,OAA9C,CAAZ;AACA,UAAIP,WAAW,GAAG,KAAKnB,KAAL,CAAWC,cAA7B;AACAkB,MAAAA,WAAW,CAACtC,QAAZ,CAAqB8C,KAArB,EAA4BtD,WAA5B,GAA0CkD,cAA1C;AAEA,WAAKV,QAAL,CAAc;AACVZ,QAAAA,cAAc,EAAEkB;AADN,OAAd;AAIH;;;sCAEiBG,C,EAClB;AACI,WAAKT,QAAL,qBACKS,CAAC,CAACE,MAAF,CAASM,IADd,EACqBR,CAAC,CAACE,MAAF,CAASC,KAD9B;AAGH;;;yCAEoBH,C,EACrB;AACI,WAAKT,QAAL,CAAc;AACVT,QAAAA,uBAAuB,EAAE,IADf;AAEVC,QAAAA,qBAAqB,EAAEiB;AAFb,OAAd;AAIH;;;2CAEsBA,C,EACvB;AACI,WAAKT,QAAL,CAAc;AACVV,QAAAA,yBAAyB,EAAE,IADjB;AAEVE,QAAAA,qBAAqB,EAAEiB;AAFb,OAAd;AAIH;;;+BAEUA,C,EACX;AACI,WAAKT,QAAL,CAAc;AACVV,QAAAA,yBAAyB,EAAE,KADjB;AAEVC,QAAAA,uBAAuB,EAAE;AAFf,OAAd;AAIH;;;kCAEakB,C,EACd;AAAA;;AACI,UAAIF,KAAK,GAAGpD,IAAI,EAAhB;AACA,UAAI+D,SAAS,GAAG,EAAhB;;AACA,UAAIT,CAAC,CAACE,MAAF,CAASM,IAAT,IAAiB,eAArB,EACA;AACIC,QAAAA,SAAS,GAAG,KAAK/B,KAAL,CAAWM,MAAvB;AACH,OAHD,MAKA;AACIyB,QAAAA,SAAS,GAAG,MAAZ;AACH;;AAED,UAAIC,UAAU,GAAG;AACb5D,QAAAA,UAAU,EAAEgD,KADC;AAEb/C,QAAAA,WAAW,EAAE,KAAK2B,KAAL,CAAWO,WAFX;AAGbjC,QAAAA,uBAAuB,EAAE,KAAK0B,KAAL,CAAWS,oBAHvB;AAIblC,QAAAA,YAAY,EAAE,KAAKyB,KAAL,CAAWQ,WAJZ;AAKbyB,QAAAA,SAAS,EAAEF;AALE,OAAjB;AAOA,UAAIJ,KAAK,GAAG,KAAK3B,KAAL,CAAWC,cAAX,CAA0BpB,QAA1B,CAAmC+C,SAAnC,CAA6C,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACpD,UAAF,KAAiB,MAAI,CAACuB,KAAL,CAAWK,qBAAhC;AAAA,OAA9C,CAAZ;AACA,UAAIc,WAAW,GAAG,KAAKnB,KAAL,CAAWC,cAA7B;AACAkB,MAAAA,WAAW,CAACtC,QAAZ,CAAqB8C,KAArB,EAA4BjD,QAA5B,CAAqC2C,IAArC,CAA0CW,UAA1C;AACA,WAAKnB,QAAL,CAAc;AACVZ,QAAAA,cAAc,EAAEkB,WADN;AAEVhB,QAAAA,yBAAyB,EAAE,KAFjB;AAGVC,QAAAA,uBAAuB,EAAE,KAHf;AAIVE,QAAAA,MAAM,EAAE,KAAKN,KAAL,CAAWE,OAAX,CAAmB,CAAnB,EAAsBgB,YAJpB;AAKVX,QAAAA,WAAW,EAAE,gFALH;AAMVC,QAAAA,WAAW,EAAE,CANH;AAOVC,QAAAA,oBAAoB,EAAE;AAPZ,OAAd;AASH;;;iCAGD;AAAA;;AACI5C,MAAAA,KAAK,CAACqE,IAAN,CAAW,6DAAX,EAA0E,KAAKlC,KAAL,CAAWC,cAArF,EACKU,IADL,CACU,UAAAC,GAAG,EAAI;AACT,QAAA,MAAI,CAAC7B,KAAL,CAAWoD,OAAX,CAAmBd,IAAnB,CAAwB,cAAxB;AACH,OAHL;AAIH;;;6BAGD;AACI,aACI,0CACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADA,EAEA,oBAAC,WAAD;AACI,QAAA,QAAQ,EAAE,KAAKrB,KAAL,CAAWC,cAAX,CAA0BpB,QADxC;AAEI,QAAA,mBAAmB,EAAE,KAAKK,mBAF9B;AAGI,QAAA,sBAAsB,EAAE,KAAKC,sBAHjC;AAII,QAAA,oBAAoB,EAAE,KAAKC,oBAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,EAQA;AAAQ,QAAA,SAAS,EAAC,sBAAlB;AAAyC,QAAA,OAAO,EAAE,KAAKM,gBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBARA,EASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK;AAAQ,QAAA,SAAS,EAAC,qBAAlB;AAAwC,QAAA,OAAO,EAAE,KAAKK,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAL,CATA,EAUC,KAAKC,KAAL,CAAWG,yBAAX,GAAuC,oBAAC,qBAAD;AACI,QAAA,UAAU,EAAE,KAAKN,UADrB;AAEI,QAAA,MAAM,EAAE,KAAKC,aAFjB;AAGI,QAAA,OAAO,EAAE,KAAKE,KAAL,CAAWE,OAHxB;AAII,QAAA,iBAAiB,EAAE,KAAKN,iBAJ5B;AAKI,QAAA,MAAM,EAAE,KAAKI,KAAL,CAAWM,MALvB;AAMI,QAAA,WAAW,EAAE,KAAKN,KAAL,CAAWO,WAN5B;AAOI,QAAA,WAAW,EAAE,KAAKP,KAAL,CAAWQ,WAP5B;AAQI,QAAA,oBAAoB,EAAE,KAAKR,KAAL,CAAWS,oBARrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvC,GAS4C,IAnB7C,EAoBC,KAAKT,KAAL,CAAWI,uBAAX,GAAqC,oBAAC,mBAAD;AACM,QAAA,UAAU,EAAE,KAAKP,UADvB;AAEM,QAAA,MAAM,EAAE,KAAKC,aAFnB;AAGM,QAAA,iBAAiB,EAAE,KAAKF,iBAH9B;AAIM,QAAA,WAAW,EAAE,KAAKI,KAAL,CAAWO,WAJ9B;AAKM,QAAA,WAAW,EAAE,KAAKP,KAAL,CAAWQ,WAL9B;AAMM,QAAA,oBAAoB,EAAE,KAAKR,KAAL,CAAWS,oBANvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAArC,GAO4C,IA3B7C,CADJ;AA+BH;;;;EAzL2C7C,S;;SAA3B6B,kB","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport uuid from 'uuid/v1';\nimport AddRubricMeasurePopup from './addRubricMeasurePopup';\nimport AddTestMeasurePopup from './addTestMeasurePopup';\n\nvar dummyMeasure = {\n    Measure_ID: '',\n    Description: '',\n    Percent_to_reach_target: 0,\n    Target_Score: 0\n}\n\nvar dummyOutcome = {\n    Outcome_ID: 0,\n    Description: '',\n    measures: [dummyMeasure]\n}\n\nvar dummySummary = {\n    title: \"\",\n    outcomes: [dummyOutcome]\n};\n\nconst OutcomeList = props => {\n    return props.outcomes.map(function(currentOutcome) {\n        return <Outcome \n                    key={currentOutcome.Outcome_ID} \n                    outcome={currentOutcome} \n                    handleOutcomeChange={props.handleOutcomeChange}  \n                    handleAddRubricMeasure={props.handleAddRubricMeasure}\n                    handleAddTestMeasure={props.handleAddTestMeasure}\n                />\n    })\n}\n\nconst Outcome = props => {\n    return (\n        <div className=\"row\">\n            <div className=\"col border p-3\">\n                <textarea \n                    className=\"form-control\" \n                    rows=\"7\"\n                    id={props.outcome.Outcome_ID} \n                    value={props.outcome.Description} \n                    onChange={props.handleOutcomeChange} \n                />\n            </div>\n            <div className=\"col-8 border p-3\">\n                <Measures measures={props.outcome.measures} />\n                <DropdownButton id=\"dropdown-basic-button\" title=\"Add Measure\">\n                    <Dropdown.Item \n                        onSelect={props.handleAddTestMeasure}\n                        eventKey={props.outcome.Outcome_ID}>\n                        Add Test Measure\n                    </Dropdown.Item>\n                    <Dropdown.Item \n                        onSelect={props.handleAddRubricMeasure}\n                        eventKey={props.outcome.Outcome_ID}>\n                        Add Rubric Measure\n                    </Dropdown.Item>\n                </DropdownButton>\n            </div>\n        </div>\n    )\n}\n\nconst Measures = props => {\n    return props.measures.map(measure => {\n        return <p key={measure.Description}>{measure.Description}</p>\n    })\n}\n\nexport default class EditProgramSummary extends Component\n{\n\n    constructor(props)\n    {\n        super(props);\n        this.handleAddOutcome = this.handleAddOutcome.bind(this);\n        this.handleOutcomeChange = this.handleOutcomeChange.bind(this);\n        this.handleAddRubricMeasure = this.handleAddRubricMeasure.bind(this);\n        this.handleAddTestMeasure = this.handleAddTestMeasure.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.closePopup = this.closePopup.bind(this);\n        this.addNewMeasure = this.addNewMeasure.bind(this);\n        this.handleSave = this.handleSave.bind(this);\n        this.state = {\n            programSummary: dummySummary,\n            rubrics: null,\n            showAddRubricMeasurePopup: false,\n            showAddTestMeasurePopup: false,\n            outcomeIdOfNewMeasure: \"hello\",\n            //The following values are passed to and manipulated in the addRubricMeasurePopup.\n            rubric: null,\n            //The following values are passed to both the addRubricMeasure and addTestMeasurePopups\n            description: \"Enter measure description.  This will displayed in Program Assessment Summary.\",\n            targetScore: 0,\n            percentToReachTarget: 0\n        }\n    }\n\n    componentDidMount()\n    {\n        axios.get('http://localhost:5000/summaryReport/getSummary')\n            .then(res => {\n                this.setState({\n                    programSummary: res.data.programSummary\n                })\n                console.log(res.data.programSummary);\n        })\n        axios.get('http://localhost:5000/rubric/getList')\n            .then(res => {\n                if(res.data.status)\n                {\n                    this.setState({\n                        rubrics: res.data.rubrics,\n                        rubric: res.data.rubrics[0].Rubric_Title\n                    })\n                }\n        })\n    }\n\n    handleAddOutcome()\n    {\n        let tempSummary = this.state.programSummary;\n        let newId = uuid();\n        tempSummary.outcomes.push({\n            Outcome_ID: newId,\n            Description: \"Enter outcome description.\",\n            measures: []\n        })\n\n        this.setState({\n            programSummary: tempSummary\n        })\n    }\n\n    handleOutcomeChange(e)\n    {\n        let newDescription = e.target.value;\n        let id = e.target.id;\n        let index = this.state.programSummary.outcomes.findIndex(o => o.Outcome_ID === id);\n        let tempSummary = this.state.programSummary;\n        tempSummary.outcomes[index].Description = newDescription;\n\n        this.setState({\n            programSummary: tempSummary,\n\n        })\n    }\n\n    handleInputChange(e)\n    {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleAddTestMeasure(e)\n    {\n        this.setState({\n            showAddTestMeasurePopup: true,\n            outcomeIdOfNewMeasure: e\n        })\n    }\n\n    handleAddRubricMeasure(e)\n    {\n        this.setState({\n            showAddRubricMeasurePopup: true,\n            outcomeIdOfNewMeasure: e\n        })\n    }\n\n    closePopup(e)\n    {\n        this.setState({\n            showAddRubricMeasurePopup: false,\n            showAddTestMeasurePopup: false\n        })\n    }\n\n    addNewMeasure(e)\n    {\n        let newId = uuid();\n        let tool_name = '';\n        if (e.target.name == \"rubricMeasure\")\n        {\n            tool_name = this.state.rubric;\n        }\n        else\n        {\n            tool_name = \"Test\"\n        }\n\n        let newMeasure = {\n            Measure_ID: newId,\n            Description: this.state.description,\n            Percent_to_reach_target: this.state.percentToReachTarget,\n            Target_Score: this.state.targetScore,\n            Tool_Name: tool_name\n        }\n        let index = this.state.programSummary.outcomes.findIndex(o => o.Outcome_ID === this.state.outcomeIdOfNewMeasure);\n        let tempSummary = this.state.programSummary;\n        tempSummary.outcomes[index].measures.push(newMeasure);\n        this.setState({\n            programSummary: tempSummary,\n            showAddRubricMeasurePopup: false,\n            showAddTestMeasurePopup: false,\n            rubric: this.state.rubrics[0].Rubric_Title,\n            description: \"Enter measure description.  This will displayed in Program Assessment Summary.\",\n            targetScore: 0,\n            percentToReachTarget: 0\n        })\n    }\n\n    handleSave()\n    {\n        axios.post('http://localhost:5000/editProgramSummary/editProgramSummary', this.state.programSummary)\n            .then(res => {\n                this.props.history.push(\"/viewSummary\");\n            })\n    }\n\n    render()\n    {\n        return (\n            <>\n            <h1>Edit Program Summary</h1>\n            <OutcomeList \n                outcomes={this.state.programSummary.outcomes} \n                handleOutcomeChange={this.handleOutcomeChange}\n                handleAddRubricMeasure={this.handleAddRubricMeasure}\n                handleAddTestMeasure={this.handleAddTestMeasure} \n            />\n            <button className=\"btn btn-primary mb-4\" onClick={this.handleAddOutcome}>Add Outcome</button>\n            <div><button className=\"btn btn-danger mb-4\" onClick={this.handleSave}>Save Changes</button></div>\n            {this.state.showAddRubricMeasurePopup ? <AddRubricMeasurePopup \n                                                        closePopup={this.closePopup} \n                                                        submit={this.addNewMeasure}\n                                                        rubrics={this.state.rubrics}\n                                                        handleInputChange={this.handleInputChange}\n                                                        rubric={this.state.rubric}\n                                                        description={this.state.description}\n                                                        targetScore={this.state.targetScore}\n                                                        percentToReachTarget={this.state.percentToReachTarget}\n                                                    /> : null}\n            {this.state.showAddTestMeasurePopup ? <AddTestMeasurePopup\n                                                        closePopup={this.closePopup}\n                                                        submit={this.addNewMeasure}\n                                                        handleInputChange={this.handleInputChange}\n                                                        description={this.state.description}\n                                                        targetScore={this.state.targetScore}\n                                                        percentToReachTarget={this.state.percentToReachTarget}\n                                                    /> : null}\n            </>\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}