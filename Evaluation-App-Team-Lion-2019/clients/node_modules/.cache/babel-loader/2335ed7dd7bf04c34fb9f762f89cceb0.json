{"ast":null,"code":"import _classCallCheck from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/measureReport.js\";\nimport React, { Component } from 'react';\nimport Axios from 'axios';\n\nfunction CriteriaTitles(props) {\n  return props.criteria.map(function (c) {\n    return React.createElement(\"th\", {\n      key: c.criteriaTitle,\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, c.criteriaTitle);\n  });\n}\n\nfunction Row(props) {\n  return props.subjectList.map(function (s) {\n    return React.createElement(Evaluation, {\n      weighted: props.weighted,\n      scale: props.scale,\n      subject: s,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    });\n  });\n}\n\nfunction Evaluation(props) {\n  return props.subject.evaluators.map(function (e) {\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, props.subject.subjectName), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, e.evaluatorName), React.createElement(Scores, {\n      scores: e.scores,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), props.scale[0].valueName ? React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, getAverage(e.scores, props.scale, props.weighted)) : null);\n  });\n}\n\nfunction getAverage(scores, scale, weighted) {\n  var score;\n\n  if (weighted) {\n    score = calculateWeightedAverage(scores);\n  } else {\n    score = calculateUnweightedAverage(scores);\n  }\n\n  return score + \" - \" + mapAverageScoreToValueName(scale, Math.round(score));\n}\n\nfunction calculateUnweightedAverage(scores) {\n  var totalScore = 0;\n  var numberOfCriteria = 0;\n  scores.forEach(function (s) {\n    totalScore = totalScore + parseInt(s.score);\n    numberOfCriteria++;\n  });\n  return Math.round(totalScore / numberOfCriteria * 100000) / 100000;\n}\n\nfunction calculateWeightedAverage(scores) {\n  var totalScore = 0;\n  scores.forEach(function (s) {\n    totalScore = totalScore + s.score * (s.weight / 100);\n  });\n  return Math.round(totalScore * 100000) / 100000;\n}\n\nfunction mapAverageScoreToValueName(scale, averageScore) {\n  var description = scale.find(function (s) {\n    return s.valueNumber === Math.floor(averageScore);\n  });\n  return description.valueName;\n}\n\nfunction Scores(props) {\n  return props.scores.map(function (s) {\n    return React.createElement(React.Fragment, null, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, s.valueName ? s.valueName : s.score));\n  });\n}\n\nvar CreateAssignment =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateAssignment, _Component);\n\n  function CreateAssignment(props) {\n    var _this;\n\n    _classCallCheck(this, CreateAssignment);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateAssignment).call(this, props));\n    _this.state = {\n      measure: null\n    };\n    return _this;\n  }\n\n  _createClass(CreateAssignment, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      Axios.get('/measureReport/measureReport/' + this.props.match.params.measureId).then(function (res) {\n        console.log(res.data);\n\n        _this2.setState({\n          measure: res.data.measure\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.measure === null) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, \"loading...\");\n      } else if (this.state.measure.subjectList.length === 0) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, \"There is no evaluation data for this measure.\");\n      } else {\n        return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, this.state.measure.measureName), this.state.measure.measureDescription !== \"null\" ? React.createElement(\"details\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, React.createElement(\"summary\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, \"Additional description:\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, this.state.measure.measureDescription)) : null, React.createElement(\"table\", {\n          className: \"table table-bordered\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, React.createElement(\"thead\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          id: \"criteria\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          scope: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, \"Subject Name\"), React.createElement(\"th\", {\n          scope: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, \"Evaluator\"), React.createElement(CriteriaTitles, {\n          criteria: this.state.measure.subjectList[0].evaluators[0].scores,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }), React.createElement(\"th\", {\n          scope: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, \"Overall Score\"), React.createElement(\"th\", {\n          scope: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, \"Average Score\"))), React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, React.createElement(Row, {\n          subjectList: this.state.measure.subjectList,\n          weighted: this.state.measure.weighted,\n          scale: this.state.measure.scale,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }))));\n      }\n    }\n  }]);\n\n  return CreateAssignment;\n}(Component);\n\nexport { CreateAssignment as default };","map":{"version":3,"sources":["/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/measureReport.js"],"names":["React","Component","Axios","CriteriaTitles","props","criteria","map","c","criteriaTitle","Row","subjectList","s","weighted","scale","Evaluation","subject","evaluators","e","subjectName","evaluatorName","scores","valueName","getAverage","score","calculateWeightedAverage","calculateUnweightedAverage","mapAverageScoreToValueName","Math","round","totalScore","numberOfCriteria","forEach","parseInt","weight","averageScore","description","find","valueNumber","floor","Scores","CreateAssignment","state","measure","get","match","params","measureId","then","res","console","log","data","setState","length","measureName","measureDescription"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Axios from 'axios';\n\nfunction CriteriaTitles(props)\n{\n    return props.criteria.map(c => {\n        return <th key={c.criteriaTitle} scope=\"col\">{c.criteriaTitle}</th>\n    })\n}\n\nfunction Row(props)\n{\n    return props.subjectList.map(s => {\n        return <Evaluation weighted={props.weighted} scale={props.scale} subject={s} />\n    })\n}\n\nfunction Evaluation(props)\n{\n    return props.subject.evaluators.map(e => {\n        return (\n            <tr>\n                <th scope=\"row\">{props.subject.subjectName}</th>\n                <td>{e.evaluatorName}</td>\n                <Scores scores={e.scores} />\n                {props.scale[0].valueName ? \n                    <td>{getAverage(e.scores, props.scale, props.weighted)}</td>\n                : null }\n           </tr>\n        )\n    })\n}\n\nfunction getAverage(scores, scale, weighted)\n{\n    let score;\n    if(weighted)\n    {\n        score = calculateWeightedAverage(scores);\n    }\n    else\n    {\n        score = calculateUnweightedAverage(scores);\n    }\n\n    return score + \" - \" + mapAverageScoreToValueName(scale, Math.round(score));\n}\n\nfunction calculateUnweightedAverage(scores)\n{\n    let totalScore = 0;\n    let numberOfCriteria = 0;\n    scores.forEach(s => {\n            totalScore = totalScore + parseInt(s.score);\n            numberOfCriteria++;\n    });\n    return Math.round((totalScore / numberOfCriteria) * 100000) / 100000;\n}\n\nfunction calculateWeightedAverage(scores)\n{\n    let totalScore = 0;\n    scores.forEach(s => {\n        totalScore = totalScore + (s.score * (s.weight / 100))\n    });\n    \n    return Math.round(totalScore * 100000) / 100000;\n}\n\nfunction mapAverageScoreToValueName(scale, averageScore)\n{\n    let description = scale.find(s => s.valueNumber === Math.floor(averageScore));\n    return description.valueName;\n}\n\nfunction Scores(props)\n{\n    return props.scores.map(s => {\n        return (\n            <>\n                <td>{s.valueName ? s.valueName : s.score}</td>\n            </>\n        )\n    })\n}\n\nexport default class CreateAssignment extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state={\n            measure: null\n        }\n    }\n\n    componentDidMount()\n    {\n        Axios.get('/measureReport/measureReport/' + this.props.match.params.measureId)\n            .then(res => {\n                console.log(res.data);\n                this.setState({\n                    measure: res.data.measure\n                })\n            })\n    }\n\n    render()\n    {\n        if (this.state.measure === null)\n        {\n            return <p>loading...</p>\n        }\n        else if (this.state.measure.subjectList.length === 0)\n        {\n            return <p>There is no evaluation data for this measure.</p>\n        }\n        else\n        {\n            return (\n                <>\n                    <h1>{this.state.measure.measureName}</h1>\n                    {this.state.measure.measureDescription !== \"null\" ? \n                        <details>\n                            <summary>Additional description:</summary>\n                            <p>{this.state.measure.measureDescription}</p>\n                        </details>\n                    : null}\n                    <table className=\"table table-bordered\">\n                        <thead>\n                            <tr id=\"criteria\"> \n                                <th scope=\"col\">Subject Name</th>\n                                <th scope=\"col\">Evaluator</th>\n                                <CriteriaTitles criteria={this.state.measure.subjectList[0].evaluators[0].scores} />\n                                <th scope=\"col\">Overall Score</th>\n                                <th scope=\"col\">Average Score</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <Row \n                                subjectList={this.state.measure.subjectList} \n                                weighted={this.state.measure.weighted}\n                                scale={this.state.measure.scale}/>\n                        </tbody>\n                    </table>\n                </>\n            )\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}