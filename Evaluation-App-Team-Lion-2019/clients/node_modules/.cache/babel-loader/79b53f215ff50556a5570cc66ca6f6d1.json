{"ast":null,"code":"import _classCallCheck from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/Assignment/myAssignments.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport AddSubjects from './addSubjects';\nimport './myAssignments.css';\nimport Loader from 'react-loader-spinner';\nimport { isNullOrUndefined } from 'util';\n\nfunction ListDisplay(props) {\n  var type = props.finished ? \"Complete\" : \"Incomplete\";\n  var list = props.assignments.map(function (a) {\n    return React.createElement(\"div\", {\n      className: \"m-3 p-3 border rounded\",\n      key: a.assignmentId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Outcome name: \" + a.outcomeName), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Outcome description: \" + a.outcomeDescription), React.createElement(\"p\", {\n      className: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Measure name: \" + a.measureName), a.subjects[0] && a.subjects[0].subjectId !== null ? React.createElement(React.Fragment, null, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary mt-2 mb-2\",\n      id: a.rubricId + \"/\" + a.assignmentId,\n      onClick: props.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Evaluate \" + a.toolName), React.createElement(\"details\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"summary\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Subjects:\"), React.createElement(\"table\", {\n      className: \"table table-bordered p-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Id\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Graded?\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Remove Subject\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(SubjectList, {\n      assignmentId: a.assignmentId,\n      subjects: a.subjects,\n      removeSubject: props.removeSubject,\n      type: type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }))))) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"There are no subjects in this assignments yet. Add subjects to evaluate.\"), React.createElement(AddSubjects, {\n      assignmentId: a.assignmentId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }));\n  });\n\n  if (props.assignments.length > 0) {\n    var id = props.finished ? \"complete\" : \"incomplete\";\n    return React.createElement(\"div\", {\n      id: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, type + \" Assignments\"), list);\n  } else {\n    return null;\n  }\n}\n\nfunction SubjectList(props) {\n  return props.subjects.map(function (s) {\n    return React.createElement(\"tr\", {\n      key: s.subjectId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"p-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, s.subjectName), React.createElement(\"td\", {\n      className: \"p-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, s.subjectId), React.createElement(\"td\", {\n      className: \"p-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, s.scores[0].score === null ? \"No\" : \"Yes\"), React.createElement(\"td\", {\n      className: \"p-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-sm btn-danger\",\n      id: s.subjectId + \"/\" + props.type,\n      name: props.assignmentId,\n      onClick: props.removeSubject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"X\")));\n  });\n}\n\nvar RubricList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RubricList, _Component);\n\n  function RubricList(props) {\n    var _this;\n\n    _classCallCheck(this, RubricList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RubricList).call(this, props));\n    _this.handleEvaluateClick = _this.handleEvaluateClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.removeSubject = _this.removeSubject.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      assignments: null\n    };\n    return _this;\n  }\n\n  _createClass(RubricList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('/assignments/myAssignments/' + localStorage.getItem(\"email\") + \"/\" + localStorage.getItem(\"Cycle_Id\")).then(function (res) {\n        _this2.setState({\n          assignments: res.data.assignments\n        });\n\n        console.log(res.data.assignments);\n      });\n    }\n  }, {\n    key: \"removeSubject\",\n    value: function removeSubject(e) {\n      var subjectId_type = e.target.id.split(\"/\");\n      var assignmentId = e.target.name;\n      var tempAssignments = this.state.assignments;\n      var assignmentIndex;\n\n      if (subjectId_type === \"Complete\") {\n        assignmentIndex = tempAssignments.compelete.findIndex(function (a) {\n          return a.assignmentId === assignmentId;\n        });\n      } else {\n        assignmentIndex = tempAssignments.incompelete.findIndex(function (a) {\n          return a.assignmentId === assignmentId;\n        });\n      }\n\n      var subjectIndex = tempAssignments[assignmentIndex].subjects.findIndex(function (s) {\n        return s.subjectId === subjectId;\n      });\n      tempAssignments[assignmentIndex].subjects.splice(subjectIndex, 1);\n      this.setState({\n        assignments: tempAssignments\n      });\n      var data = {\n        subjectId: subjectId,\n        assignmentId: assignmentId\n      };\n      axios.post('/assignments/deleteSubject', data).then(function (res) {\n        if (!res.data.deleted) {\n          alert(\"Subject not deleted.\");\n        }\n      });\n    }\n  }, {\n    key: \"handleEvaluateClick\",\n    value: function handleEvaluateClick(e) {\n      if (e.target.id.includes('null')) {\n        this.props.history.push(\"/evaluateTest/\" + e.target.id);\n      } else {\n        this.props.history.push(\"/gradeRubric/\" + e.target.id);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.assignments === null) {\n        return React.createElement(Loader, {\n          type: \"Oval\",\n          color: \"black\",\n          height: \"100\",\n          width: \"100\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, \"My Assignments\"), React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, this.state.assignments !== [] ? React.createElement(React.Fragment, null, React.createElement(\"div\", {\n          className: \"col-sm-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, React.createElement(ListDisplay, {\n          finished: false,\n          assignments: this.state.assignments.incomplete,\n          onClick: this.handleEvaluateClick,\n          removeSubject: this.removeSubject,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"col-sm-6\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, React.createElement(ListDisplay, {\n          finished: true,\n          assignments: this.state.assignments.complete,\n          onClick: this.handleEvaluateClick,\n          removeSubject: this.removeSubject,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }), \" \")) : React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, \"You have no assignments.\")));\n      }\n    }\n  }]);\n\n  return RubricList;\n}(Component);\n\nexport { RubricList as default };","map":{"version":3,"sources":["/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/Assignment/myAssignments.js"],"names":["React","Component","axios","AddSubjects","Loader","isNullOrUndefined","ListDisplay","props","type","finished","list","assignments","map","a","assignmentId","outcomeName","outcomeDescription","measureName","subjects","subjectId","rubricId","onClick","toolName","removeSubject","length","id","SubjectList","s","subjectName","scores","score","RubricList","handleEvaluateClick","bind","state","get","localStorage","getItem","then","res","setState","data","console","log","e","subjectId_type","target","split","name","tempAssignments","assignmentIndex","compelete","findIndex","incompelete","subjectIndex","splice","post","deleted","alert","includes","history","push","incomplete","complete"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from \"axios\";\nimport AddSubjects from './addSubjects';\nimport './myAssignments.css';\nimport Loader from 'react-loader-spinner';\nimport { isNullOrUndefined } from 'util';\n\nfunction ListDisplay(props)\n{\n    let type = (props.finished ? \"Complete\" : \"Incomplete\");\n\n    let list = props.assignments.map(a => {\n        return (\n            <div className=\"m-3 p-3 border rounded\" key={a.assignmentId}>\n                <p className=\"h5\">{\"Outcome name: \" + a.outcomeName}</p>\n                <div>{\"Outcome description: \" + a.outcomeDescription}</div>\n                <p className=\"h5\">{\"Measure name: \" + a.measureName}</p>\n                {a.subjects[0] && a.subjects[0].subjectId !== null ? \n                    <>\n                        <button \n                            type=\"button\" \n                            className=\"btn btn-primary mt-2 mb-2\" \n                            id={a.rubricId + \"/\" + a.assignmentId}\n                            onClick={props.onClick}>\n                            {\"Evaluate \" + a.toolName}\n                        </button>\n                        <details>\n                            <summary>Subjects:</summary>\n                            <table className=\"table table-bordered p-3\">\n                                <thead>\n                                    <tr>\n                                        <th>Name</th>\n                                        <th>Id</th> \n                                        <th>Graded?</th>\n                                        <th>Remove Subject</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <SubjectList \n                                        assignmentId={a.assignmentId} \n                                        subjects={a.subjects}\n                                        removeSubject={props.removeSubject} \n                                        type={type}\n                                    />\n                                </tbody>\n                            </table>\n                        </details>\n                    </>\n                : <p>There are no subjects in this assignments yet. Add subjects to evaluate.</p> }\n                <AddSubjects assignmentId={a.assignmentId} />\n            </div>\n        )\n    });\n\n    if(props.assignments.length > 0)\n    {\n        let id = (props.finished ? \"complete\" : \"incomplete\")\n        \n        return (\n            <div id={id}>\n                <h2>{type + \" Assignments\"}</h2>\n                {list}\n            </div>\n        )\n    }\n    else\n    {\n        return null;\n    }\n}\n\nfunction SubjectList(props)\n{\n    return props.subjects.map(s => {\n        \n        return (\n            <tr key={s.subjectId}>\n                <td className=\"p-2\">{s.subjectName}</td>\n                <td className=\"p-2\">{s.subjectId}</td>\n                <td className=\"p-2\">{s.scores[0].score === null ? \"No\" : \"Yes\"}</td>\n                <td className=\"p-2\">\n                    <button \n                        className=\"btn btn-sm btn-danger\"\n                        id={s.subjectId + \"/\" + props.type}\n                        name={props.assignmentId}\n                        onClick={props.removeSubject}>\n                        X\n                    </button>\n                </td>\n            </tr>\n        )\n    })\n}\n\nexport default class RubricList extends Component \n{\n    constructor(props)\n    {\n        super(props);\n        this.handleEvaluateClick = this.handleEvaluateClick.bind(this);\n        this.removeSubject = this.removeSubject.bind(this);\n        this.state = {\n            assignments: null\n        }\n    }\n\n    componentDidMount()\n    {\n        axios.get('/assignments/myAssignments/' + localStorage.getItem(\"email\") + \"/\" + localStorage.getItem(\"Cycle_Id\"))\n            .then(res => {\n                this.setState({\n                    assignments: res.data.assignments\n                })\n                console.log(res.data.assignments);\n            })\n    }\n\n    removeSubject(e)\n    {\n        let subjectId_type = e.target.id.split(\"/\");\n        let assignmentId = e.target.name;\n        let tempAssignments = this.state.assignments;\n        let assignmentIndex;\n        if (subjectId_type === \"Complete\")\n        {\n            assignmentIndex = tempAssignments.compelete.findIndex(a => a.assignmentId === assignmentId);\n        }\n        else\n        {\n            assignmentIndex = tempAssignments.incompelete.findIndex(a => a.assignmentId === assignmentId);\n        }\n        \n        let subjectIndex = tempAssignments[assignmentIndex].subjects.findIndex(s => s.subjectId === subjectId);\n\n        tempAssignments[assignmentIndex].subjects.splice(subjectIndex, 1);\n\n        this.setState({\n            assignments: tempAssignments\n        })\n\n        let data = {\n            subjectId: subjectId,\n            assignmentId: assignmentId\n        }\n\n        axios.post('/assignments/deleteSubject', data)\n            .then(res => {\n                if (!res.data.deleted)\n                {\n                    alert(\"Subject not deleted.\");\n                }\n            })\n    }\n\n    handleEvaluateClick(e)\n    {\n        if (e.target.id.includes('null'))\n        {\n            this.props.history.push(\"/evaluateTest/\" + e.target.id);\n        }\n        else\n        {\n            this.props.history.push(\"/gradeRubric/\" + e.target.id);\n        }\n    }\n\n    render()\n    {\n        if (this.state.assignments === null)\n        {\n            return <Loader \n                type=\"Oval\"\n                color=\"black\"\n                height=\"100\"\t\n                width=\"100\"\n            />\n        }\n        else\n        {\n            return(\n                <div>\n                    <h1>My Assignments</h1>\n                    <div className=\"row\">\n                        {this.state.assignments !== [] ? \n                            <>\n                                {/* show incomplete assignments */}\n                                <div className=\"col-sm-6\">\n                                <ListDisplay\n                                    finished={false} \n                                    assignments={this.state.assignments.incomplete} \n                                    onClick={this.handleEvaluateClick}\n                                    removeSubject={this.removeSubject} \n                                />\n                                </div>\n                                {/* show complete assignments */}\n                                <div className=\"col-sm-6\">\n                                <ListDisplay\n                                    finished={true} \n                                    assignments={this.state.assignments.complete} \n                                    onClick={this.handleEvaluateClick}\n                                    removeSubject={this.removeSubject} \n                                /> </div>\n                            </>\n                            : <p>You have no assignments.</p>\n                        }\n                     </div>\n                </div>\n            );\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}