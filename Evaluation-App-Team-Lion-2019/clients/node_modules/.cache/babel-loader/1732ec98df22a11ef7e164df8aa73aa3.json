{"ast":null,"code":"import Axios from 'axios';\nimport { GET_CRITERIA, GET_TOP_ROW, GET_DATA, SET_TOP_ROW, GET_ERRORS } from './types';\nexport var getCriteria = function getCriteria() {\n  return function (dispatch) {\n    Axios.get(\"http://localhost:5000/rubric/getCriteria/\".concat(localStorage.title)).then(function (res) {\n      dispatch({\n        type: GET_CRITERIA,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: GET_CRITERIA,\n        payload: err\n      });\n    });\n  };\n};\nexport var getTopRow = function getTopRow() {\n  return function (dispatch) {\n    Axios.get(\"http://localhost:5000/rubric/getTopRow/\".concat(localStorage.title)).then(function (res) {\n      dispatch({\n        type: GET_TOP_ROW,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: GET_TOP_ROW,\n        payload: err\n      });\n    });\n  };\n};\nexport var getData = function getData() {\n  return function (dispatch) {\n    Axios.get(\"http://localhost:5000/rubric/getRow/\".concat(localStorage.title)).then(function (res) {\n      dispatch({\n        type: GET_DATA,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: GET_DATA,\n        payload: err\n      });\n    });\n  };\n};\nexport var setTopRow = function setTopRow(id, description) {\n  return function (dispatch) {\n    Axios.post(\"http://localhost:5000/rubric/setTopRow/\".concat(localStorage.title), {\n      row: id,\n      value: description\n    }).then(function (res) {\n      dispatch(getTopRow());\n    }).catch(function (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.data\n      });\n    });\n  };\n};\nexport var setCriteria = function setCriteria(id, description) {\n  return function (dispatch) {\n    Axios.post(\"http://localhost:5000/rubric/setCriteria/\".concat(localStorage.title), {\n      row: id,\n      value: description\n    }).then(function (res) {\n      dispatch(getCriteria());\n    }).catch(function (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.data\n      });\n    });\n  };\n};\nexport var setData = function setData(id, description, criteria) {\n  return function (dispatch) {\n    Axios.post(\"http://localhost:5000/rubric/setData/\".concat(localStorage.title), {\n      row: id,\n      value: description\n    }).then(function (res) {\n      dispatch(getData());\n    }).catch(function (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.data\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/actions/rubric.js"],"names":["Axios","GET_CRITERIA","GET_TOP_ROW","GET_DATA","SET_TOP_ROW","GET_ERRORS","getCriteria","dispatch","get","localStorage","title","then","res","type","payload","data","catch","err","getTopRow","getData","setTopRow","id","description","post","row","value","setCriteria","setData","criteria"],"mappings":"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","sourcesContent":["import Axios from 'axios';\n\nimport { GET_CRITERIA, GET_TOP_ROW, GET_DATA, SET_TOP_ROW, GET_ERRORS} from './types';\n\nexport const getCriteria = () => dispatch => {\n    Axios.get(`http://localhost:5000/rubric/getCriteria/${localStorage.title}`)\n            .then(res => {\n                dispatch({\n                    type: GET_CRITERIA,\n                    payload: res.data\n                })\n            })\n            .catch(err =>{\n                dispatch({\n                    type: GET_CRITERIA,\n                    payload: err\n                })\n            })\n\n                \n                \n}\n\n\nexport const getTopRow = () => dispatch =>{\n    Axios.get(`http://localhost:5000/rubric/getTopRow/${localStorage.title}`)\n        .then(res => {\n            dispatch({\n                type: GET_TOP_ROW,\n                payload: res.data\n            })\n        })\n        .catch(err =>{\n            dispatch({\n                type: GET_TOP_ROW,\n                payload: err\n            })\n        })\n\n\n}\n\n\nexport const getData = () => dispatch => {\n    Axios.get(`http://localhost:5000/rubric/getRow/${localStorage.title}`)\n            .then(res => {\n                dispatch({\n                    type: GET_DATA,\n                    payload: res.data\n                })\n            })\n            .catch(err =>{\n                dispatch({\n                    type: GET_DATA,\n                    payload: err\n                })\n            })\n\n}\n\nexport const setTopRow = (id, description) => dispatch => {\n   \n    Axios.post(`http://localhost:5000/rubric/setTopRow/${localStorage.title}`, {\n        row: id,\n        value: description\n    })\n        .then(res =>{\n            dispatch(getTopRow())\n           \n        })\n        .catch(err =>{\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.data\n            })\n        })\n}\n\n\nexport const setCriteria = (id, description) => dispatch => {\n   \n    Axios.post(`http://localhost:5000/rubric/setCriteria/${localStorage.title}`, {\n        row: id,\n        value: description\n    })\n        .then(res =>{\n            dispatch(getCriteria())\n           \n        })\n        .catch(err =>{\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.data\n            })\n        })\n\n   \n}\n\nexport const setData = (id, description, criteria) => dispatch => {\n   \n    Axios.post(`http://localhost:5000/rubric/setData/${localStorage.title}`, {\n        row: id,\n        value: description\n    })\n        .then(res =>{\n            dispatch(getData())\n           \n        })\n        .catch(err =>{\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.data\n            })\n        })\n}"]},"metadata":{},"sourceType":"module"}