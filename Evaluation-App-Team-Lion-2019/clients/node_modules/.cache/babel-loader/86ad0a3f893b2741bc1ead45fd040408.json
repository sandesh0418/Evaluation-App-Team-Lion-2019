{"ast":null,"code":"import _classCallCheck from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/Rubric/rubricView.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport '../../../stylesheets/rubricView.css';\n\nfunction TopRowGradeScale(props) {\n  return props.oneCriteria.descriptions.map(function (currentDescription) {\n    return React.createElement(\"th\", {\n      scope: \"col\",\n      key: currentDescription.value_number,\n      as: \"textarea\",\n      \"aria-label\": \"With textarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, currentDescription.value_name === \"\" ? \"Undefined value name.\" : currentDescription.value_name);\n  });\n}\n\nfunction CriteriaRow(props) {\n  return props.criteria.map(function (currentCriteria, i) {\n    return React.createElement(\"tr\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, currentCriteria.criteria_title === \"\" ? \"Undefined Critieria\" : currentCriteria.criteria_title), React.createElement(CriteriaDescription, {\n      criteriaDescriptions: currentCriteria.descriptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), props.gradeMode ? React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(CriteriaGradeInput, {\n      currentCriteria: currentCriteria,\n      gradeScale: props.gradeScale,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    })) : null);\n  });\n}\n\nfunction CriteriaDescription(props) {\n  return props.criteriaDescriptions.map(function (currentDescription) {\n    return React.createElement(\"td\", {\n      key: currentDescription.value_number,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, currentDescription.value_description);\n  });\n}\n\nfunction CriteriaGradeInput(props) {\n  return React.createElement(\"select\", {\n    className: \"form-control\",\n    id: props.currentCriteria.criteria_title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    disabled: true,\n    value: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \" -- select an option -- \"), props.gradeScale);\n}\n\nvar SubjectSelector = function SubjectSelector(props) {\n  return React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"mr-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Select Subject:\"), React.createElement(\"select\", {\n    className: \"form-control width-200\",\n    value: props.value,\n    onChange: props.onChange,\n    onClick: props.onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(SubjectList, {\n    subjectList: props.subjectList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })));\n};\n\nvar SubjectList = function SubjectList(props) {\n  return props.subjectList.map(function (s) {\n    return React.createElement(\"option\", {\n      key: s.subjectId,\n      value: s.subjectId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, s.subjectName);\n  });\n};\n\nvar ViewRubric =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ViewRubric, _Component);\n\n  function ViewRubric(props) {\n    var _this;\n\n    _classCallCheck(this, ViewRubric);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ViewRubric).call(this, props));\n    _this.onChangeSubjectId = _this.onChangeSubjectId.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSaveGradeClick = _this.handleSaveGradeClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleAverageScoreClick = _this.handleAverageScoreClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      rubricTitle: '',\n      Rubric_Id: '',\n      scale: '',\n      rubric: {\n        criteria: [{\n          descriptions: []\n        }]\n      },\n      gradeMode: false,\n      measureId: '',\n      subjectId: '',\n      averageScore: 1,\n      calcAverage: 2,\n      subjectList: []\n    };\n    return _this;\n  }\n\n  _createClass(ViewRubric, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setView();\n      this.getData();\n    }\n  }, {\n    key: \"setView\",\n    value: function setView() {\n      if (window.location.pathname.includes('/gradeRubric/')) {\n        this.setState({\n          gradeMode: true\n        });\n      }\n    }\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      var _this2 = this;\n\n      axios.get('/rubric/getViewRubric/' + this.props.match.params.rubric + \"/\" + localStorage.getItem(\"Cycle_Id\")).then(function (res) {\n        _this2.setState({\n          rubricTitle: res.data.rubric.rubric_title,\n          Rubric_Id: res.data.rubric.Rubric_Id,\n          rubric: res.data.rubric\n        });\n      });\n\n      if (window.location.pathname.includes('/gradeRubric/')) {\n        axios.get('/assignments/subjectList/' + this.props.match.params.assignment).then(function (res) {\n          _this2.setState({\n            subjectList: res.data.subjectList,\n            subjectId: res.data.subjectList[0].subjectId\n          });\n        });\n        axios.get('/assignments/assignmentMeasure/' + this.props.match.params.assignment).then(function (res) {\n          _this2.setState({\n            measureId: res.data.measure.measureId\n          });\n        });\n      }\n    }\n  }, {\n    key: \"handleSaveGradeClick\",\n    value: function handleSaveGradeClick() {\n      var scores = this.state.rubric.criteria.map(function (currentCriteria) {\n        return {\n          criteriaTitle: currentCriteria.criteria_title,\n          value: document.getElementById(currentCriteria.criteria_title).value\n        };\n      });\n      var subjectScore = {\n        measureId: this.state.measureId,\n        userEmail: localStorage.getItem('email'),\n        subjectId: this.state.subjectId,\n        scores: scores\n      };\n      axios.post('/scoreSubmission/rubricScore', subjectScore).then(function (res) {\n        alert(\"The score has been saved.\");\n      });\n    }\n  }, {\n    key: \"handleAverageScoreClick\",\n    value: function handleAverageScoreClick(e) {\n      this.setState({\n        calcAverage: e.target.value\n      });\n      var totalScore = 0;\n      var numberOfCriteria = 0;\n      this.state.rubric.criteria.forEach(function (currentCriteria) {\n        totalScore = totalScore + parseInt(document.getElementById(currentCriteria.criteria_title).value);\n        numberOfCriteria++;\n      });\n      var average = (totalScore / numberOfCriteria).toFixed(e.target.value);\n      this.setState({\n        averageScore: average\n      });\n    }\n  }, {\n    key: \"onChangeSubjectId\",\n    value: function onChangeSubjectId(e) {\n      this.setState({\n        subjectId: e.target.value\n      });\n    }\n  }, {\n    key: \"onChangeScale\",\n    value: function onChangeScale(e) {\n      this.setState({\n        scale: e.target.value\n      });\n    }\n  }, {\n    key: \"EditRubric\",\n    value: function EditRubric(e) {\n      localStorage.removeItem(\"Rubric_Id\");\n      localStorage.setItem(\"Rubric_Id\", e.target.id);\n      window.location.replace('/createRubric');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var saveGradeButton;\n      var rubricAverage;\n      var editRubricButton;\n\n      if (this.state.gradeMode) {\n        saveGradeButton = React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary\",\n          onClick: this.handleSaveGradeClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, \"Save Grade\");\n        rubricAverage = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          className: \"pr-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }, \"Calculate Average\"), React.createElement(\"select\", {\n          type: \"button\",\n          className: \"btn btn-secondary btn-sm\",\n          onClick: this.handleAverageScoreClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: \"0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }, \"No Decimal\"), React.createElement(\"option\", {\n          value: \"1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }, \"One Decimal\"), React.createElement(\"option\", {\n          value: \"2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }, \"Two Decimals\"), React.createElement(\"option\", {\n          value: \"3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, \"Three Decimals\")), React.createElement(\"span\", {\n          className: \"pl-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, \"The average score is: \", this.state.averageScore));\n      } else {\n        editRubricButton = React.createElement(\"div\", {\n          className: \"col s12\",\n          style: {\n            paddingLeft: \"11.250px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"#\",\n          style: {\n            width: \"150px\",\n            borderRadius: \"3px\",\n            letterSpacing: \"1.5px\",\n            marginTop: \"1rem\",\n            padding: \"15px\"\n          },\n          id: this.state.Rubric_Id,\n          onClick: this.EditRubric,\n          className: \"btn btn-large waves-effect waves-light hoverable blue accent-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }, \"Edit\"));\n      }\n\n      var gradeScale = this.state.rubric.criteria[0].descriptions.map(function (currentDescription) {\n        return React.createElement(\"option\", {\n          key: currentDescription.value_number,\n          value: currentDescription.value_number,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        }, currentDescription.value_name);\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \"Rubric\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"mr-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, this.state.gradeMode ? \"Grade\" : null, \" \", this.state.rubric.rubric_title), this.state.gradeMode ? React.createElement(SubjectSelector, {\n        subjectList: this.state.subjectList,\n        onChange: this.onChangeSubjectId,\n        value: this.state.subjectId,\n        className: \"bg-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }) : null), React.createElement(\"table\", {\n        className: \"table table-bordered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"col\",\n        className: \"outcome-width\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"Criteria\"), React.createElement(TopRowGradeScale, {\n        oneCriteria: this.state.rubric.criteria[0],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }), this.state.gradeMode ? React.createElement(\"th\", {\n        scope: \"col\",\n        width: \"150px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"Score\") : null)), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(CriteriaRow, {\n        gradeMode: this.state.gradeMode,\n        criteria: this.state.rubric.criteria,\n        weighted: this.state.rubric.weighted,\n        gradeScale: gradeScale,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }))), rubricAverage, saveGradeButton, editRubricButton);\n    }\n  }]);\n\n  return ViewRubric;\n}(Component);\n\nexport { ViewRubric as default };","map":{"version":3,"sources":["/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/Rubric/rubricView.js"],"names":["React","Component","axios","TopRowGradeScale","props","oneCriteria","descriptions","map","currentDescription","value_number","value_name","CriteriaRow","criteria","currentCriteria","i","criteria_title","gradeMode","gradeScale","CriteriaDescription","criteriaDescriptions","value_description","CriteriaGradeInput","SubjectSelector","value","onChange","subjectList","SubjectList","s","subjectId","subjectName","ViewRubric","onChangeSubjectId","bind","handleSaveGradeClick","handleAverageScoreClick","state","rubricTitle","Rubric_Id","scale","rubric","measureId","averageScore","calcAverage","setView","getData","window","location","pathname","includes","setState","get","match","params","localStorage","getItem","then","res","data","rubric_title","assignment","measure","scores","criteriaTitle","document","getElementById","subjectScore","userEmail","post","alert","e","target","totalScore","numberOfCriteria","forEach","parseInt","average","toFixed","removeItem","setItem","id","replace","saveGradeButton","rubricAverage","editRubricButton","paddingLeft","width","borderRadius","letterSpacing","marginTop","padding","EditRubric","weighted"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from \"axios\";\nimport '../../../stylesheets/rubricView.css';\n\n\nfunction TopRowGradeScale(props)\n{\n    return props.oneCriteria.descriptions.map(function(currentDescription)\n    {\n        return <th scope=\"col\" \n                    key={currentDescription.value_number}\n                    as=\"textarea\"\n                    aria-label=\"With textarea\">\n                    {currentDescription.value_name === \"\" ? \"Undefined value name.\" : currentDescription.value_name}\n                </th>\n    });\n}\n\nfunction CriteriaRow(props)\n{\n    return props.criteria.map(function(currentCriteria, i)\n    {\n        return (\n            <tr key={i}>\n                <th scope=\"row\">{currentCriteria.criteria_title === \"\" ? \"Undefined Critieria\" : currentCriteria.criteria_title}</th>\n                <CriteriaDescription criteriaDescriptions={currentCriteria.descriptions} />\n                {props.gradeMode?  <td><CriteriaGradeInput currentCriteria={currentCriteria} gradeScale={props.gradeScale} /></td> : null}\n            </tr>\n            );\n    });\n}\n\nfunction CriteriaDescription(props)\n{\n    return props.criteriaDescriptions.map(function(currentDescription)\n    {\n        return <td key={currentDescription.value_number}>{currentDescription.value_description}</td>\n    });\n}\n\nfunction CriteriaGradeInput(props)\n{\n    return (\n        <select className=\"form-control\" id={props.currentCriteria.criteria_title} >\n            <option disabled value> -- select an option -- </option>\n            {props.gradeScale}\n        </select>\n    )\n}\n\nconst SubjectSelector = props => {\n    return (\n        <div className=\"form-group\">\n            <label className=\"mr-2\">Select Subject:</label>\n            <select className=\"form-control width-200\" value={props.value} onChange={props.onChange} onClick={props.onChange}>\n                <SubjectList subjectList={props.subjectList} />\n            </select>\n        </div>\n    )\n}\n\nconst SubjectList = props => {\n    return props.subjectList.map(s => {\n        return <option key={s.subjectId} value={s.subjectId}>{s.subjectName}</option>\n    })\n}\n\nexport default class ViewRubric extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.onChangeSubjectId = this.onChangeSubjectId.bind(this);\n        this.handleSaveGradeClick = this.handleSaveGradeClick.bind(this);\n        this.handleAverageScoreClick = this.handleAverageScoreClick.bind(this);\n       \n        this.state = {\n            rubricTitle: '',\n            Rubric_Id: '',\n            scale: '',\n            rubric: {\n                criteria:[{descriptions : []}]\n            },\n            gradeMode: false,\n            measureId: '',\n            subjectId: '',\n            averageScore: 1,\n            calcAverage: 2,\n            subjectList: []\n        }\n    }\n\n    componentDidMount()\n    {\n        \n        this.setView();\n        this.getData();\n    }\n\n    setView()\n    {\n        if (window.location.pathname.includes('/gradeRubric/'))\n        {\n            this.setState({\n                gradeMode: true\n            })\n        }\n    }\n\n    getData()\n    {\n        axios.get('/rubric/getViewRubric/'+this.props.match.params.rubric + \"/\" + localStorage.getItem(\"Cycle_Id\"))\n            .then(res => {\n                this.setState({\n                    rubricTitle: res.data.rubric.rubric_title,\n                    Rubric_Id: res.data.rubric.Rubric_Id,\n                    rubric: res.data.rubric\n                })\n                \n            })\n\n        if(window.location.pathname.includes('/gradeRubric/'))\n        {\n            axios.get('/assignments/subjectList/'+this.props.match.params.assignment)\n            .then(res => {\n                this.setState({\n                    subjectList: res.data.subjectList,\n                    subjectId: res.data.subjectList[0].subjectId\n                })\n            })\n            axios.get('/assignments/assignmentMeasure/' + this.props.match.params.assignment)\n                .then(res => {\n                    this.setState({\n                        measureId: res.data.measure.measureId\n                    })\n                })\n        }\n    }\n\n    handleSaveGradeClick()\n    {\n        let scores = this.state.rubric.criteria.map(function(currentCriteria)\n        {\n            return {criteriaTitle: currentCriteria.criteria_title,\n                    value: document.getElementById(currentCriteria.criteria_title).value};\n        })\n\n        let subjectScore = {measureId: this.state.measureId,\n                            userEmail: localStorage.getItem('email'),\n                            subjectId: this.state.subjectId,\n                            scores: scores};\n\n        axios.post('/scoreSubmission/rubricScore', subjectScore)\n        .then(res => {\n            alert(\"The score has been saved.\");\n        });\n    }\n\n    handleAverageScoreClick(e)\n    {\n        this.setState({\n            calcAverage: e.target.value \n        })\n        let totalScore = 0;\n        let numberOfCriteria = 0;\n        this.state.rubric.criteria.forEach(function(currentCriteria)\n        {\n                totalScore = totalScore + parseInt(document.getElementById(currentCriteria.criteria_title).value);\n                numberOfCriteria++;\n        });\n        let average = (totalScore / numberOfCriteria).toFixed(e.target.value);\n\n        this.setState({\n            averageScore: average\n        })\n    }\n\n    onChangeSubjectId(e)\n    {\n        this.setState({\n            subjectId: e.target.value\n        });\n    }\n\n    onChangeScale(e){\n        this.setState({scale: e.target.value})\n    }\n\n    EditRubric(e){\n        localStorage.removeItem(\"Rubric_Id\");\n        localStorage.setItem(\"Rubric_Id\", e.target.id);\n        window.location.replace('/createRubric');\n    }\n\n    render()\n    {\n        let saveGradeButton;\n        let rubricAverage;\n        let editRubricButton;\n\n        if (this.state.gradeMode)\n        {\n            saveGradeButton = <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleSaveGradeClick}>Save Grade</button>\n\n            rubricAverage = <div>\n                <label className=\"pr-1\">Calculate Average</label>\n                <select type=\"button\" className=\"btn btn-secondary btn-sm\" onClick={this.handleAverageScoreClick}>\n                    <option value=\"0\">No Decimal</option>\n                    <option value=\"1\">One Decimal</option>\n                    <option value=\"2\">Two Decimals</option>\n                    <option value=\"3\">Three Decimals</option>\n                </select>\n                <span className=\"pl-1\">The average score is: {this.state.averageScore}</span>\n            </div>\n        }\n        else\n        {\n            editRubricButton = <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <a href=\"#\"\n                style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\",\n                    padding: \"15px\"\n                }}\n                id ={this.state.Rubric_Id}\n                onClick={this.EditRubric}\n\n                className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                >\n                Edit \n                </a>\n            </div>\n        }\n\n        let gradeScale = this.state.rubric.criteria[0].descriptions.map(function(currentDescription)\n        {\n            return <option key={currentDescription.value_number} value={currentDescription.value_number}>{currentDescription.value_name}</option>\n        })\n\n        return (\n            <div>\n                <h1>Rubric</h1>\n                <div>\n                    <h2 className=\"mr-4\">{this.state.gradeMode ? \"Grade\" : null} {this.state.rubric.rubric_title}</h2>\n                    {this.state.gradeMode ? \n                        <SubjectSelector \n                            subjectList={this.state.subjectList} \n                            onChange={this.onChangeSubjectId}\n                            value={this.state.subjectId}\n                            className=\"bg-danger\" />\n                        : null}\n                </div>\n                \n                <table className=\"table table-bordered\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\" className=\"outcome-width\">Criteria</th>\n                            <TopRowGradeScale oneCriteria={this.state.rubric.criteria[0]} />\n                            {this.state.gradeMode ? <th scope=\"col\" width=\"150px\">Score</th> : null}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <CriteriaRow \n                            gradeMode={this.state.gradeMode} \n                            criteria={this.state.rubric.criteria} \n                            weighted={this.state.rubric.weighted}\n                            gradeScale={gradeScale} \n                        />\n                    </tbody>\n                    \n                </table>\n                {rubricAverage}\n                {saveGradeButton}\n                {editRubricButton}\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}