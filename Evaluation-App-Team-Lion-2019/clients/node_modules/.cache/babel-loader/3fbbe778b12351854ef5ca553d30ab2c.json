{"ast":null,"code":"import _classCallCheck from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/createAssignment.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\"; //dummy data\n\nvar out1mea1 = {\n  Measure_ID: 1,\n  Description: ''\n};\nvar out1 = {\n  Outcome_ID: 1,\n  Description: '',\n  measures: [out1mea1]\n};\nvar dummyOutcomeList = [out1];\nvar eval3 = {\n  email: '',\n  firstName: '',\n  lastName: ''\n};\nvar evalList = [eval3];\n\nfunction SelectOutcome(props) {\n  return props.outcomeList.map(function (outcome, index) {\n    return React.createElement(\"option\", {\n      key: outcome.Outcome_ID,\n      value: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, outcome.Description);\n  });\n}\n\nfunction SelectMeasure(props) {\n  return props.measureList.map(function (measure) {\n    return React.createElement(\"option\", {\n      key: measure.Measure_ID,\n      value: measure.Measure_ID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, measure.Description);\n  });\n}\n\nfunction SelectEvaluator(props) {\n  return props.evaluatorList.map(function (e) {\n    return React.createElement(\"option\", {\n      key: e.email,\n      value: e.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, e.firstName + ' ' + e.lastName);\n  });\n}\n\nfunction getExtension(filename) {\n  var parts = filename.split('.');\n  return parts[parts.length - 1];\n}\n\nvar CreateAssignment =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateAssignment, _Component);\n\n  function CreateAssignment(props) {\n    var _this;\n\n    _classCallCheck(this, CreateAssignment);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateAssignment).call(this, props));\n    _this.handleSelectOutcome = _this.handleSelectOutcome.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSelectMeasure = _this.handleSelectMeasure.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSelectEvaluator = _this.handleSelectEvaluator.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changeFile = _this.changeFile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.fileInput = React.createRef();\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      outcomeList: dummyOutcomeList,\n      evaluatorList: evalList,\n      selectedOutcomeIndex: 0,\n      selectedMeasure: undefined,\n      selectedEvaluator: '',\n      showFileAlert: false\n    };\n    return _this;\n  }\n\n  _createClass(CreateAssignment, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('http://localhost:5000/assignments/outcomesAndMeasures').then(function (res) {\n        _this2.setState({\n          outcomeList: res.data.outcomeList,\n          selectedMeasure: _this2.state.outcomeList[0].measures[0].Measure_ID\n        });\n      });\n      axios.get('http://localhost:5000/evaluators/evaluatorList').then(function (res) {\n        console.log(res.data);\n\n        _this2.setState({\n          evaluatorList: res.data.evaluatorList,\n          selectedEvaluator: res.data.evaluatorList[0].email\n        });\n      });\n    }\n  }, {\n    key: \"handleSelectOutcome\",\n    value: function handleSelectOutcome(e) {\n      this.setState({\n        selectedOutcomeIndex: e.target.value,\n        selectedMeasure: this.state.outcomeList[e.target.value].measures[0].Measure_ID\n      });\n    }\n  }, {\n    key: \"handleSelectMeasure\",\n    value: function handleSelectMeasure(e) {\n      this.setState({\n        selectedMeasure: e.target.value\n      });\n    }\n  }, {\n    key: \"handleSelectEvaluator\",\n    value: function handleSelectEvaluator(e) {\n      this.setState({\n        selectedEvaluator: e.target.value\n      });\n    }\n  }, {\n    key: \"changeFile\",\n    value: function changeFile(e) {\n      if (!(this.fileInput.current.files[0].type == \"text/csv\")) {\n        this.setState({\n          showFileAlert: true\n        });\n      } else {\n        this.setState({\n          showFileAlert: false\n        });\n      }\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault();\n      var data = new FormData();\n      data.set('studentList', this.fileInput.current.files[0]);\n      console.log(data.get('studentList'));\n      var assignment = {\n        Measure_ID: this.state.selectedMeasure,\n        User_Email: this.state.selectedEvaluator,\n        studentList: this.fileInput.current.files[0]\n        /*\n        axios.post('http://localhost:5000/assignments/createAssignment', assignment)\n            .then(res =>  {\n                console.log(res.data);\n            });\n        */\n\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Create Assignment\"), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Select Outcome: \"), React.createElement(\"select\", {\n        className: \"form-control\",\n        value: this.state.selectedOutcomeIndex,\n        onChange: this.handleSelectOutcome,\n        onClick: this.handleSelectOutcome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(SelectOutcome, {\n        outcomeList: this.state.outcomeList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Select Measure: \"), React.createElement(\"select\", {\n        className: \"form-control\",\n        value: this.state.selectedMeasure,\n        onChange: this.handleSelectMeasure,\n        onClick: this.handleSelectMeasure,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(SelectMeasure, {\n        onChange: true,\n        measureList: this.state.outcomeList[this.state.selectedOutcomeIndex].measures,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Select Evaluator: \"), React.createElement(\"select\", {\n        className: \"form-control\",\n        value: this.state.selectedEvaluator,\n        onChange: this.handleSelectEvaluator,\n        onClick: this.handleSelectEvaluator,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(SelectEvaluator, {\n        evaluatorList: this.state.evaluatorList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Select List of Subjects as .csv file: \"), React.createElement(\"input\", {\n        type: \"file\",\n        className: \"form-control-file\",\n        ref: this.fileInput,\n        onChange: this.changeFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), this.state.showFileAlert ? React.createElement(\"p\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Invalid File\") : null), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"submit\",\n        className: \"btn btn-primary\",\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CreateAssignment;\n}(Component);\n\nexport { CreateAssignment as default };","map":{"version":3,"sources":["/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/createAssignment.js"],"names":["React","Component","axios","out1mea1","Measure_ID","Description","out1","Outcome_ID","measures","dummyOutcomeList","eval3","email","firstName","lastName","evalList","SelectOutcome","props","outcomeList","map","outcome","index","SelectMeasure","measureList","measure","SelectEvaluator","evaluatorList","e","getExtension","filename","parts","split","length","CreateAssignment","handleSelectOutcome","bind","handleSelectMeasure","handleSelectEvaluator","changeFile","fileInput","createRef","onSubmit","state","selectedOutcomeIndex","selectedMeasure","undefined","selectedEvaluator","showFileAlert","get","then","res","setState","data","console","log","target","value","current","files","type","preventDefault","FormData","set","assignment","User_Email","studentList"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from \"axios\";\n\n//dummy data\nvar out1mea1 = {\n    Measure_ID: 1,\n    Description: ''\n}\n\nvar out1 = {\n    Outcome_ID: 1,\n    Description: '',\n    measures: [out1mea1]\n}\n\nvar dummyOutcomeList = [out1];\n\nvar eval3 = {\n    email: '',\n    firstName: '',\n    lastName: ''\n}\n\nvar evalList = [eval3];\n\nfunction SelectOutcome(props)\n{\n    return props.outcomeList.map((outcome, index) => {\n        return <option key={outcome.Outcome_ID} value={index}>{outcome.Description}</option>\n    })\n}\n\nfunction SelectMeasure(props)\n{\n    return props.measureList.map(measure => {\n        return <option key={measure.Measure_ID} value={measure.Measure_ID}>{measure.Description}</option>\n    })\n}\n\nfunction SelectEvaluator(props)\n{\n    return props.evaluatorList.map(e => {\n        return <option key={e.email} value={e.email}>{e.firstName + ' ' + e.lastName}</option>\n    })\n}\n\nfunction getExtension(filename) {\n    let parts = filename.split('.');\n    return parts[parts.length - 1];\n}\n\nexport default class CreateAssignment extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.handleSelectOutcome = this.handleSelectOutcome.bind(this);\n        this.handleSelectMeasure = this.handleSelectMeasure.bind(this);\n        this.handleSelectEvaluator = this.handleSelectEvaluator.bind(this);\n        this.changeFile = this.changeFile.bind(this);\n        this.fileInput = React.createRef();\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            outcomeList: dummyOutcomeList,\n            evaluatorList: evalList,\n            selectedOutcomeIndex: 0,\n            selectedMeasure: undefined,\n            selectedEvaluator: '',\n            showFileAlert: false\n        }\n    }\n\n    componentDidMount()\n    {\n        axios.get('http://localhost:5000/assignments/outcomesAndMeasures')\n            .then(res => {\n                this.setState({\n                    outcomeList: res.data.outcomeList,\n                    selectedMeasure: this.state.outcomeList[0].measures[0].Measure_ID,\n                })\n            })\n        axios.get('http://localhost:5000/evaluators/evaluatorList')\n        .then(res => {\n            console.log(res.data);\n            this.setState({\n                evaluatorList: res.data.evaluatorList,\n                selectedEvaluator: res.data.evaluatorList[0].email\n            })\n        })\n    }\n\n    handleSelectOutcome(e)\n    {\n        this.setState({\n            selectedOutcomeIndex: e.target.value,\n            selectedMeasure: this.state.outcomeList[e.target.value].measures[0].Measure_ID\n        })\n    }\n\n    handleSelectMeasure(e)\n    {\n        this.setState({\n            selectedMeasure: e.target.value\n        })\n    }\n\n    handleSelectEvaluator(e)\n    {\n        this.setState({\n            selectedEvaluator: e.target.value\n        })\n    }\n\n    changeFile(e)\n    {\n        if (!(this.fileInput.current.files[0].type == \"text/csv\"))\n        {\n            this.setState({\n                showFileAlert: true\n            })\n        }\n        else\n        {\n            this.setState({\n                showFileAlert: false\n            })\n        }\n    }\n\n    onSubmit(e)\n    {\n        e.preventDefault();\n\n        let data = new FormData();\n        data.set('studentList', this.fileInput.current.files[0])\n        console.log(data.get('studentList'));\n\n        let assignment = {\n            Measure_ID: this.state.selectedMeasure,\n            User_Email: this.state.selectedEvaluator,\n            studentList: this.fileInput.current.files[0]\n        }\n\n        /*\n        axios.post('http://localhost:5000/assignments/createAssignment', assignment)\n            .then(res =>  {\n                console.log(res.data);\n            });\n        */\n\n    }\n\n    render()\n    {\n        return(\n            <form onSubmit={this.onSubmit}>\n                <h1>Create Assignment</h1>\n                <div className=\"form-group\">\n                    <label>Select Outcome: </label>\n                    <select className=\"form-control\" value={this.state.selectedOutcomeIndex} \n                            onChange={this.handleSelectOutcome} onClick={this.handleSelectOutcome}>\n                        <SelectOutcome outcomeList={this.state.outcomeList} />\n                    </select>\n                </div>\n                <div className=\"form-group\">\n                    <label>Select Measure: </label>\n                    <select className=\"form-control\" value={this.state.selectedMeasure}\n                            onChange={this.handleSelectMeasure} onClick={this.handleSelectMeasure}>\n                        <SelectMeasure onChange measureList={this.state.outcomeList[this.state.selectedOutcomeIndex].measures} />\n                    </select>\n                </div>\n                <div className=\"form-group\">\n                    <label>Select Evaluator: </label>\n                    <select className=\"form-control\" value={this.state.selectedEvaluator}\n                            onChange={this.handleSelectEvaluator} onClick={this.handleSelectEvaluator}>\n                        <SelectEvaluator evaluatorList={this.state.evaluatorList} />\n                    </select>\n                </div>\n                <div className=\"form-group\">\n                    <label>Select List of Subjects as .csv file: </label>\n                    <input type=\"file\" className=\"form-control-file\" ref={this.fileInput} onChange={this.changeFile} />\n                    {this.state.showFileAlert ? <p className=\"text-danger\">Invalid File</p>: null}\n                </div>\n                <input type=\"submit\" value=\"submit\" className=\"btn btn-primary\" onClick={this.onSubmit} />\n            </form>\n        )\n    }\n\n}\n\n"]},"metadata":{},"sourceType":"module"}