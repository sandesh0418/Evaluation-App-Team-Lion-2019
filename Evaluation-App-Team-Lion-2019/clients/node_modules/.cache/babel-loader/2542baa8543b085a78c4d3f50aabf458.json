{"ast":null,"code":"import _defineProperty from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/Assignment/createAssignment.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"../../../stylesheets/createAssignment.css\"; //dummy data\n\nvar dummyOutcomeList = [{\n  Outcome_ID: 1,\n  Description: \"\",\n  measures: [{\n    Measure_ID: 1,\n    Description: \"\"\n  }]\n}];\nvar evalList = [{\n  email: \"\",\n  firstName: \"\",\n  lastName: \"\"\n}];\n\nfunction SelectOutcome(props) {\n  return props.outcomeList.map(function (outcome, index) {\n    return React.createElement(\"option\", {\n      key: outcome.Outcome_ID,\n      value: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, outcome.Outcome_Name);\n  });\n}\n\nfunction SelectMeasure(props) {\n  return props.measureList.map(function (measure) {\n    return React.createElement(\"option\", {\n      key: measure.Measure_ID,\n      value: measure.Measure_ID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, measure.Measure_Name);\n  });\n}\n\nfunction SelectEvaluator(props) {\n  return props.evaluatorList.map(function (e) {\n    return React.createElement(\"option\", {\n      key: e.email,\n      value: e.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, e.firstName + \" \" + e.lastName);\n  });\n}\n\nfunction ManualStudentEntry(props) {\n  return props.formData.map(function (d, index) {\n    return React.createElement(\"div\", {\n      key: index,\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Full Name:\"), React.createElement(\"input\", {\n      className: \"form-control\",\n      id: index,\n      name: \"subjectName\",\n      value: props.formData[index].subjectName,\n      onChange: props.onChange,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Unique Identifier:\"), React.createElement(\"input\", {\n      className: \"form-control\",\n      id: index,\n      name: \"subjectId\",\n      value: props.formData[index].subjectId,\n      onChange: props.onChange,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })));\n  });\n}\n\nfunction manualStudentEntryToString(list) {\n  var studentList = \"\";\n\n  for (var i = 0; i < list.length; i++) {\n    if (i === list.length - 1) {\n      studentList += list[i].subjectName + \",\" + list[i].subjectId;\n    } else {\n      studentList += list[i].subjectName + \",\" + list[i].subjectId + \"\\n\";\n    }\n  }\n\n  return studentList;\n}\n\nvar CreateAssignment =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateAssignment, _Component);\n\n  function CreateAssignment(props) {\n    var _this;\n\n    _classCallCheck(this, CreateAssignment);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateAssignment).call(this, props));\n    _this.handleSelectOutcome = _this.handleSelectOutcome.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSelectMeasure = _this.handleSelectMeasure.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateManualStudentEntry = _this.updateManualStudentEntry.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addStudent = _this.addStudent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changeFile = _this.changeFile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.fileInput = React.createRef();\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      outcomeList: dummyOutcomeList,\n      evaluatorList: evalList,\n      selectedOutcomeIndex: 0,\n      selectedMeasure: undefined,\n      selectedEvaluator: \"\",\n      showFileAlert: false,\n      manualStudentEntry: []\n    };\n    return _this;\n  }\n\n  _createClass(CreateAssignment, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"/api/assignments/outcomesAndMeasures/\" + localStorage.getItem(\"Cycle_Id\")).then(function (res) {\n        _this2.setState({\n          outcomeList: res.data.outcomeList,\n          selectedMeasure: res.data.outcomeList[0].measures[0].Measure_ID\n        });\n      });\n      axios.get(\"/api/evaluators/evaluatorList/\" + localStorage.getItem(\"dept_Id\")).then(function (res) {\n        _this2.setState({\n          evaluatorList: res.data.evaluatorList,\n          selectedOutcomeIndex: 0,\n          selectedEvaluator: res.data.evaluatorList[0].email\n        });\n      });\n    }\n  }, {\n    key: \"handleSelectOutcome\",\n    value: function handleSelectOutcome(e) {\n      this.setState({\n        selectedOutcomeIndex: e.target.value,\n        selectedMeasure: this.state.outcomeList[e.target.value].measures[0].Measure_ID\n      });\n    }\n  }, {\n    key: \"handleSelectMeasure\",\n    value: function handleSelectMeasure(e) {\n      this.setState({\n        selectedMeasure: e.target.value\n      });\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"changeFile\",\n    value: function changeFile(e) {\n      if (!(this.fileInput.current.files[0].type === \"text/csv\")) {\n        this.setState({\n          showFileAlert: true\n        });\n      } else {\n        this.setState({\n          showFileAlert: false\n        });\n      }\n    }\n  }, {\n    key: \"updateManualStudentEntry\",\n    value: function updateManualStudentEntry(e) {\n      var index = e.target.id;\n      var tempManualEntry = this.state.manualStudentEntry;\n\n      if (e.target.name === \"subjectName\") {\n        tempManualEntry[index].subjectName = e.target.value;\n      } else if (e.target.name === \"subjectId\") {\n        tempManualEntry[index].subjectId = e.target.value;\n      }\n\n      this.setState({\n        manualStudentEntry: tempManualEntry\n      });\n    }\n  }, {\n    key: \"addStudent\",\n    value: function addStudent(e) {\n      var tempManualEntry = this.state.manualStudentEntry;\n      tempManualEntry.push({\n        subjectName: \"\",\n        subjectId: \"\"\n      });\n      this.setState({\n        manualStudentEntry: tempManualEntry\n      });\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      var _this3 = this;\n\n      e.preventDefault();\n\n      if (this.fileInput.current.files[0]) {\n        var fileReader = new FileReader();\n\n        fileReader.onloadend = function (e) {\n          var assignment = {\n            Measure_ID: _this3.state.selectedMeasure,\n            User_Email: _this3.state.selectedEvaluator,\n            studentList: fileReader.result + (_this3.state.manualStudentEntry.length === 0 ? \"\" : \"\\n\" + manualStudentEntryToString(_this3.state.manualStudentEntry))\n          };\n          axios.post(\"/api/assignments/createAssignment\", assignment).then(function (res) {\n            if (res.data.status) {\n              alert(res.data.message);\n\n              _this3.setState({\n                selectedMeasure: _this3.state.outcomeList[0].measures[0].Measure_ID,\n                selectedEvaluator: _this3.state.evaluatorList[0].email\n              });\n            }\n          });\n        };\n\n        fileReader.readAsText(this.fileInput.current.files[0]);\n      } else {\n        var assignment = {\n          Measure_ID: this.state.selectedMeasure,\n          User_Email: this.state.selectedEvaluator,\n          studentList: \"Name,ID\\n\" + manualStudentEntryToString(this.state.manualStudentEntry)\n        };\n        axios.post(\"/api/assignments/createAssignment\", assignment).then(function (res) {\n          if (res.data.status) {\n            alert(res.data.message);\n\n            _this3.setState({\n              selectedMeasure: _this3.state.outcomeList[0].measures[0].Measure_ID,\n              selectedEvaluator: _this3.state.evaluatorList[0].email\n            });\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"regcontent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"Create Assignment\"), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \"Select Outcome: \"), React.createElement(\"select\", {\n        className: \"form-control\",\n        value: this.state.selectedOutcomeIndex,\n        onChange: this.handleSelectOutcome,\n        onClick: this.handleSelectOutcome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(SelectOutcome, {\n        outcomeList: this.state.outcomeList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"Select Measure: \"), React.createElement(\"select\", {\n        className: \"form-control\",\n        value: this.state.selectedMeasure,\n        onChange: this.handleSelectMeasure,\n        onClick: this.handleSelectMeasure,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(SelectMeasure, {\n        onChange: true,\n        measureList: this.state.outcomeList[this.state.selectedOutcomeIndex].measures,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, \"Select Evaluator: \"), React.createElement(\"select\", {\n        className: \"form-control\",\n        value: this.state.selectedEvaluator,\n        name: \"selectedEvaluator\",\n        onChange: this.handleInputChange,\n        onClick: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(SelectEvaluator, {\n        evaluatorList: this.state.evaluatorList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        class: \"fas fa-file-upload\",\n        id: \"upload-sign\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        id: \"important_lebel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, \"Upload list of subjects as .csv file:\", \" \"), React.createElement(\"input\", {\n        type: \"file\",\n        className: \"form-control-file\",\n        ref: this.fileInput,\n        onChange: this.changeFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }), this.state.showFileAlert ? React.createElement(\"p\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, \"Invalid File\") : null), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(ManualStudentEntry, {\n        formData: this.state.manualStudentEntry,\n        onChange: this.updateManualStudentEntry,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-secondary mb-4\",\n        id: \"bu_tton\",\n        type: \"button\",\n        onClick: this.addStudent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, \"Add Subject Manually\")), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"submit\",\n        className: \"btn btn-primary\",\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return CreateAssignment;\n}(Component);\n\nexport { CreateAssignment as default };","map":{"version":3,"sources":["/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/Assignment/createAssignment.js"],"names":["React","Component","axios","dummyOutcomeList","Outcome_ID","Description","measures","Measure_ID","evalList","email","firstName","lastName","SelectOutcome","props","outcomeList","map","outcome","index","Outcome_Name","SelectMeasure","measureList","measure","Measure_Name","SelectEvaluator","evaluatorList","e","ManualStudentEntry","formData","d","subjectName","onChange","subjectId","manualStudentEntryToString","list","studentList","i","length","CreateAssignment","handleSelectOutcome","bind","handleSelectMeasure","handleInputChange","updateManualStudentEntry","addStudent","changeFile","fileInput","createRef","onSubmit","state","selectedOutcomeIndex","selectedMeasure","undefined","selectedEvaluator","showFileAlert","manualStudentEntry","get","localStorage","getItem","then","res","setState","data","target","value","name","current","files","type","id","tempManualEntry","push","preventDefault","fileReader","FileReader","onloadend","assignment","User_Email","result","post","status","alert","message","readAsText"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"../../../stylesheets/createAssignment.css\";\n\n//dummy data\nvar dummyOutcomeList = [\n  {\n    Outcome_ID: 1,\n    Description: \"\",\n    measures: [{ Measure_ID: 1, Description: \"\" }]\n  }\n];\nvar evalList = [{ email: \"\", firstName: \"\", lastName: \"\" }];\n\nfunction SelectOutcome(props) {\n  return props.outcomeList.map((outcome, index) => {\n    return (\n      <option key={outcome.Outcome_ID} value={index}>\n        {outcome.Outcome_Name}\n      </option>\n    );\n  });\n}\n\nfunction SelectMeasure(props) {\n  return props.measureList.map(measure => {\n    return (\n      <option key={measure.Measure_ID} value={measure.Measure_ID}>\n        {measure.Measure_Name}\n      </option>\n    );\n  });\n}\n\nfunction SelectEvaluator(props) {\n  return props.evaluatorList.map(e => {\n    return (\n      <option key={e.email} value={e.email}>\n        {e.firstName + \" \" + e.lastName}\n      </option>\n    );\n  });\n}\n\nfunction ManualStudentEntry(props) {\n  return props.formData.map((d, index) => {\n    return (\n      <div key={index} className=\"row\">\n        <div className=\"col-5\">\n          <span>Full Name:</span>\n          <input\n            className=\"form-control\"\n            id={index}\n            name=\"subjectName\"\n            value={props.formData[index].subjectName}\n            onChange={props.onChange}\n            type=\"text\"\n          />\n        </div>\n        <div className=\"col-5\">\n          <span>Unique Identifier:</span>\n          <input\n            className=\"form-control\"\n            id={index}\n            name=\"subjectId\"\n            value={props.formData[index].subjectId}\n            onChange={props.onChange}\n            type=\"text\"\n          />\n        </div>\n      </div>\n    );\n  });\n}\n\nfunction manualStudentEntryToString(list) {\n  let studentList = \"\";\n\n  for (let i = 0; i < list.length; i++) {\n    if (i === list.length - 1) {\n      studentList += list[i].subjectName + \",\" + list[i].subjectId;\n    } else {\n      studentList += list[i].subjectName + \",\" + list[i].subjectId + \"\\n\";\n    }\n  }\n\n  return studentList;\n}\n\nexport default class CreateAssignment extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSelectOutcome = this.handleSelectOutcome.bind(this);\n    this.handleSelectMeasure = this.handleSelectMeasure.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.updateManualStudentEntry = this.updateManualStudentEntry.bind(this);\n    this.addStudent = this.addStudent.bind(this);\n    this.changeFile = this.changeFile.bind(this);\n    this.fileInput = React.createRef();\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      outcomeList: dummyOutcomeList,\n      evaluatorList: evalList,\n      selectedOutcomeIndex: 0,\n      selectedMeasure: undefined,\n      selectedEvaluator: \"\",\n      showFileAlert: false,\n      manualStudentEntry: []\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(\n        \"/api/assignments/outcomesAndMeasures/\" + localStorage.getItem(\"Cycle_Id\")\n      )\n      .then(res => {\n        this.setState({\n          outcomeList: res.data.outcomeList,\n          selectedMeasure: res.data.outcomeList[0].measures[0].Measure_ID\n        });\n      });\n    axios\n      .get(\"/api/evaluators/evaluatorList/\" + localStorage.getItem(\"dept_Id\"))\n      .then(res => {\n        this.setState({\n          evaluatorList: res.data.evaluatorList,\n          selectedOutcomeIndex: 0,\n          selectedEvaluator: res.data.evaluatorList[0].email\n        });\n      });\n  }\n\n  handleSelectOutcome(e) {\n    this.setState({\n      selectedOutcomeIndex: e.target.value,\n      selectedMeasure: this.state.outcomeList[e.target.value].measures[0]\n        .Measure_ID\n    });\n  }\n\n  handleSelectMeasure(e) {\n    this.setState({\n      selectedMeasure: e.target.value\n    });\n  }\n\n  handleInputChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  changeFile(e) {\n    if (!(this.fileInput.current.files[0].type === \"text/csv\")) {\n      this.setState({\n        showFileAlert: true\n      });\n    } else {\n      this.setState({\n        showFileAlert: false\n      });\n    }\n  }\n\n  updateManualStudentEntry(e) {\n    let index = e.target.id;\n    let tempManualEntry = this.state.manualStudentEntry;\n\n    if (e.target.name === \"subjectName\") {\n      tempManualEntry[index].subjectName = e.target.value;\n    } else if (e.target.name === \"subjectId\") {\n      tempManualEntry[index].subjectId = e.target.value;\n    }\n\n    this.setState({\n      manualStudentEntry: tempManualEntry\n    });\n  }\n\n  addStudent(e) {\n    let tempManualEntry = this.state.manualStudentEntry;\n    tempManualEntry.push({\n      subjectName: \"\",\n      subjectId: \"\"\n    });\n\n    this.setState({\n      manualStudentEntry: tempManualEntry\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    if (this.fileInput.current.files[0]) {\n      let fileReader = new FileReader();\n      fileReader.onloadend = e => {\n        let assignment = {\n          Measure_ID: this.state.selectedMeasure,\n          User_Email: this.state.selectedEvaluator,\n          studentList:\n            fileReader.result +\n            (this.state.manualStudentEntry.length === 0\n              ? \"\"\n              : \"\\n\" +\n                manualStudentEntryToString(this.state.manualStudentEntry))\n        };\n\n        axios.post(\"/api/assignments/createAssignment\", assignment).then(res => {\n          if (res.data.status) {\n            alert(res.data.message);\n            this.setState({\n              selectedMeasure: this.state.outcomeList[0].measures[0].Measure_ID,\n              selectedEvaluator: this.state.evaluatorList[0].email\n            });\n          }\n        });\n      };\n      fileReader.readAsText(this.fileInput.current.files[0]);\n    } else {\n      let assignment = {\n        Measure_ID: this.state.selectedMeasure,\n        User_Email: this.state.selectedEvaluator,\n        studentList:\n          \"Name,ID\\n\" +\n          manualStudentEntryToString(this.state.manualStudentEntry)\n      };\n\n      axios.post(\"/api/assignments/createAssignment\", assignment).then(res => {\n        if (res.data.status) {\n          alert(res.data.message);\n          this.setState({\n            selectedMeasure: this.state.outcomeList[0].measures[0].Measure_ID,\n            selectedEvaluator: this.state.evaluatorList[0].email\n          });\n        }\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"regcontent\">\n        <form onSubmit={this.onSubmit}>\n          <h1>Create Assignment</h1>\n          <div className=\"form-group\">\n            <label>Select Outcome: </label>\n            <select\n              className=\"form-control\"\n              value={this.state.selectedOutcomeIndex}\n              onChange={this.handleSelectOutcome}\n              onClick={this.handleSelectOutcome}\n            >\n              <SelectOutcome outcomeList={this.state.outcomeList} />\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label>Select Measure: </label>\n            <select\n              className=\"form-control\"\n              value={this.state.selectedMeasure}\n              onChange={this.handleSelectMeasure}\n              onClick={this.handleSelectMeasure}\n            >\n              <SelectMeasure\n                onChange\n                measureList={\n                  this.state.outcomeList[this.state.selectedOutcomeIndex]\n                    .measures\n                }\n              />\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label>Select Evaluator: </label>\n            <select\n              className=\"form-control\"\n              value={this.state.selectedEvaluator}\n              name=\"selectedEvaluator\"\n              onChange={this.handleInputChange}\n              onClick={this.handleInputChange}\n            >\n              <SelectEvaluator evaluatorList={this.state.evaluatorList} />\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <i class=\"fas fa-file-upload\" id=\"upload-sign\" />\n            <label id=\"important_lebel\">\n              Upload list of subjects as .csv file:{\" \"}\n            </label>\n            <input\n              type=\"file\"\n              className=\"form-control-file\"\n              ref={this.fileInput}\n              onChange={this.changeFile}\n            />\n            {this.state.showFileAlert ? (\n              <p className=\"text-danger\">Invalid File</p>\n            ) : null}\n          </div>\n          <div className=\"form-group\">\n            <ManualStudentEntry\n              formData={this.state.manualStudentEntry}\n              onChange={this.updateManualStudentEntry}\n            />\n          </div>\n          <div>\n            <button\n              className=\"btn btn-secondary mb-4\"\n              id=\"bu_tton\"\n              type=\"button\"\n              onClick={this.addStudent}\n            >\n              Add Subject Manually\n            </button>\n          </div>\n          <input\n            type=\"submit\"\n            value=\"submit\"\n            className=\"btn btn-primary\"\n            onClick={this.onSubmit}\n          />\n        </form>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}