{"ast":null,"code":"import _defineProperty from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/createAssignment.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\"; //dummy data\n\nvar dummyOutcomeList = [{\n  Outcome_ID: 1,\n  Description: '',\n  measures: [{\n    Measure_ID: 1,\n    Description: ''\n  }]\n}];\nvar evalList = [{\n  email: '',\n  firstName: '',\n  lastName: ''\n}];\n\nfunction SelectOutcome(props) {\n  return props.outcomeList.map(function (outcome, index) {\n    return React.createElement(\"option\", {\n      key: outcome.Outcome_ID,\n      value: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, outcome.Description);\n  });\n}\n\nfunction SelectMeasure(props) {\n  return props.measureList.map(function (measure) {\n    return React.createElement(\"option\", {\n      key: measure.Measure_ID,\n      value: measure.Measure_ID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, measure.Measure_ID);\n  });\n}\n\nfunction SelectEvaluator(props) {\n  return props.evaluatorList.map(function (e) {\n    return React.createElement(\"option\", {\n      key: e.email,\n      value: e.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, e.firstName + ' ' + e.lastName);\n  });\n}\n\nfunction ManualStudentEntry(props) {\n  return props.formData.map(function (d) {\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Full Name\"), React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Unique Identifier\"), React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })));\n  });\n}\n\nvar CreateAssignment =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateAssignment, _Component);\n\n  function CreateAssignment(props) {\n    var _this;\n\n    _classCallCheck(this, CreateAssignment);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateAssignment).call(this, props));\n    _this.handleSelectOutcome = _this.handleSelectOutcome.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSelectMeasure = _this.handleSelectMeasure.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addStudent = _this.addStudent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changeFile = _this.changeFile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.fileInput = React.createRef();\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      outcomeList: dummyOutcomeList,\n      evaluatorList: evalList,\n      selectedOutcomeIndex: 0,\n      selectedMeasure: undefined,\n      selectedEvaluator: '',\n      showFileAlert: false,\n      manualStudentEntry: []\n    };\n    return _this;\n  }\n\n  _createClass(CreateAssignment, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('http://localhost:5000/assignments/outcomesAndMeasures').then(function (res) {\n        _this2.setState({\n          outcomeList: res.data.outcomeList,\n          selectedMeasure: res.data.outcomeList[0].measures[0].Measure_ID\n        });\n\n        console.log(_this2.state);\n      });\n      axios.get('http://localhost:5000/evaluators/evaluatorList').then(function (res) {\n        _this2.setState({\n          evaluatorList: res.data.evaluatorList,\n          selectedOutcomeIndex: 0,\n          selectedEvaluator: res.data.evaluatorList[0].email\n        });\n      });\n    }\n  }, {\n    key: \"handleSelectOutcome\",\n    value: function handleSelectOutcome(e) {\n      this.setState({\n        selectedOutcomeIndex: e.target.value,\n        selectedMeasure: this.state.outcomeList[e.target.value].measures[0].Measure_ID\n      });\n    }\n  }, {\n    key: \"handleSelectMeasure\",\n    value: function handleSelectMeasure(e) {\n      this.setState({\n        selectedMeasure: e.target.value\n      });\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"changeFile\",\n    value: function changeFile(e) {\n      if (!(this.fileInput.current.files[0].type == \"text/csv\")) {\n        this.setState({\n          showFileAlert: true\n        });\n      } else {\n        this.setState({\n          showFileAlert: false\n        });\n      }\n    }\n  }, {\n    key: \"addStudent\",\n    value: function addStudent(e) {\n      var tempManualEntry = this.state.manualStudentEntry;\n      tempManualEntry.push({\n        subjectName: '',\n        subjectId: ''\n      });\n      this.setState({\n        manualStudentEntry: tempManualEntry\n      });\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      var _this3 = this;\n\n      e.preventDefault();\n\n      if (this.fileInput.current.files[0]) {\n        var fileReader = new FileReader();\n\n        fileReader.onloadend = function (e) {\n          var assignment = {\n            Measure_ID: _this3.state.selectedMeasure,\n            User_Email: _this3.state.selectedEvaluator,\n            studentList: fileReader.result + \"\\n\" + _this3.state.manualStudentEntry\n          };\n          axios.post('http://localhost:5000/assignments/createAssignment', assignment).then(function (res) {\n            if (res.data.status) {\n              alert(res.data.message);\n\n              _this3.setState({\n                selectedMeasure: _this3.state.outcomeList[0].measures[0].Measure_ID,\n                selectedEvaluator: _this3.state.evaluatorList[0].email\n              });\n            }\n          });\n        };\n\n        fileReader.readAsText(this.fileInput.current.files[0]);\n      } else {\n        var assignment = {\n          Measure_ID: this.state.selectedMeasure,\n          User_Email: this.state.selectedEvaluator,\n          studentList: \"Name,ID\\n\" + this.state.manualStudentEntry\n        };\n        axios.post('http://localhost:5000/assignments/createAssignment', assignment).then(function (res) {\n          if (res.data.status) {\n            alert(res.data.message);\n\n            _this3.setState({\n              selectedMeasure: _this3.state.outcomeList[0].measures[0].Measure_ID,\n              selectedEvaluator: _this3.state.evaluatorList[0].email\n            });\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"Create Assignment\"), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"Select Outcome: \"), React.createElement(\"select\", {\n        className: \"form-control\",\n        value: this.state.selectedOutcomeIndex,\n        onChange: this.handleSelectOutcome,\n        onClick: this.handleSelectOutcome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(SelectOutcome, {\n        outcomeList: this.state.outcomeList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"Select Measure: \"), React.createElement(\"select\", {\n        className: \"form-control\",\n        value: this.state.selectedMeasure,\n        onChange: this.handleSelectMeasure,\n        onClick: this.handleSelectMeasure,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(SelectMeasure, {\n        onChange: true,\n        measureList: this.state.outcomeList[this.state.selectedOutcomeIndex].measures,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"Select Evaluator: \"), React.createElement(\"select\", {\n        className: \"form-control\",\n        value: this.state.selectedEvaluator,\n        name: \"selectedEvaluator\",\n        onChange: this.handleInputChange,\n        onClick: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(SelectEvaluator, {\n        evaluatorList: this.state.evaluatorList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"Select List of Subjects as .csv file: \"), React.createElement(\"input\", {\n        type: \"file\",\n        className: \"form-control-file\",\n        ref: this.fileInput,\n        onChange: this.changeFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }), this.state.showFileAlert ? React.createElement(\"p\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"Invalid File\") : null), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"Enter students manually.\"), React.createElement(ManualStudentEntry, {\n        formData: this.state.manualStudentEntry,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: this.addStudent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"Add Student Manually\")), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"submit\",\n        className: \"btn btn-primary\",\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CreateAssignment;\n}(Component);\n\nexport { CreateAssignment as default };","map":{"version":3,"sources":["/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/createAssignment.js"],"names":["React","Component","axios","dummyOutcomeList","Outcome_ID","Description","measures","Measure_ID","evalList","email","firstName","lastName","SelectOutcome","props","outcomeList","map","outcome","index","SelectMeasure","measureList","measure","SelectEvaluator","evaluatorList","e","ManualStudentEntry","formData","d","CreateAssignment","handleSelectOutcome","bind","handleSelectMeasure","handleInputChange","addStudent","changeFile","fileInput","createRef","onSubmit","state","selectedOutcomeIndex","selectedMeasure","undefined","selectedEvaluator","showFileAlert","manualStudentEntry","get","then","res","setState","data","console","log","target","value","name","current","files","type","tempManualEntry","push","subjectName","subjectId","preventDefault","fileReader","FileReader","onloadend","assignment","User_Email","studentList","result","post","status","alert","message","readAsText"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from \"axios\";\n\n//dummy data\nvar dummyOutcomeList = [{ Outcome_ID: 1, Description: '', measures: [{ Measure_ID: 1, Description: ''}]}];\nvar evalList = [{ email: '', firstName: '', lastName: ''}];\n\nfunction SelectOutcome(props)\n{\n    return props.outcomeList.map((outcome, index) => {\n        return <option key={outcome.Outcome_ID} value={index}>{outcome.Description}</option>\n    })\n}\n\nfunction SelectMeasure(props)\n{\n    return props.measureList.map(measure => {\n        return <option key={measure.Measure_ID} value={measure.Measure_ID}>{measure.Measure_ID}</option>\n    })\n}\n\nfunction SelectEvaluator(props)\n{\n    return props.evaluatorList.map(e => {\n        return <option key={e.email} value={e.email}>{e.firstName + ' ' + e.lastName}</option>\n    })\n}\n\nfunction ManualStudentEntry(props)\n{\n    return props.formData.map(d => {\n        return (\n            <div className=\"row\">\n                <div className=\"col-sm\">\n                    <span>Full Name</span>\n                    <input className=\"form-control\" type=\"text\" />\n                </div>\n                <div className=\"col-sm\">\n                    <span>Unique Identifier</span>\n                    <input className=\"form-control\" type=\"text\" />\n                </div>\n            </div>\n        )\n    })\n}\n\nexport default class CreateAssignment extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.handleSelectOutcome = this.handleSelectOutcome.bind(this);\n        this.handleSelectMeasure = this.handleSelectMeasure.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.addStudent = this.addStudent.bind(this);\n        this.changeFile = this.changeFile.bind(this);\n        this.fileInput = React.createRef();\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            outcomeList: dummyOutcomeList,\n            evaluatorList: evalList,\n            selectedOutcomeIndex: 0,\n            selectedMeasure: undefined,\n            selectedEvaluator: '',\n            showFileAlert: false,\n            manualStudentEntry: []\n        }\n    }\n\n    componentDidMount()\n    {\n        axios.get('http://localhost:5000/assignments/outcomesAndMeasures')\n            .then(res => {\n                this.setState({\n                    outcomeList: res.data.outcomeList,\n                    selectedMeasure: res.data.outcomeList[0].measures[0].Measure_ID,\n                })\n                console.log(this.state);\n            })\n        axios.get('http://localhost:5000/evaluators/evaluatorList')\n        .then(res => {\n            this.setState({\n                evaluatorList: res.data.evaluatorList,\n                selectedOutcomeIndex: 0,\n                selectedEvaluator: res.data.evaluatorList[0].email\n            })\n        })\n    }\n\n    handleSelectOutcome(e)\n    {\n        this.setState({\n            selectedOutcomeIndex: e.target.value,\n            selectedMeasure: this.state.outcomeList[e.target.value].measures[0].Measure_ID\n        })\n    }\n\n    handleSelectMeasure(e)\n    {\n        this.setState({\n            selectedMeasure: e.target.value\n        })\n    }\n\n    handleInputChange(e)\n    {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    changeFile(e)\n    {\n        if (!(this.fileInput.current.files[0].type == \"text/csv\"))\n        {\n            this.setState({\n                showFileAlert: true\n            })\n        }\n        else\n        {\n            this.setState({\n                showFileAlert: false\n            })\n        }\n    }\n\n    addStudent(e)\n    {\n        let tempManualEntry = this.state.manualStudentEntry;\n        tempManualEntry.push({\n            subjectName: '',\n            subjectId: ''\n        })\n\n        this.setState({\n            manualStudentEntry: tempManualEntry\n        })\n    }\n\n    onSubmit(e)\n    {\n        e.preventDefault();\n\n        if (this.fileInput.current.files[0])\n        {\n            let fileReader = new FileReader();\n            fileReader.onloadend = e => {\n                let assignment = {\n                    Measure_ID: this.state.selectedMeasure,\n                    User_Email: this.state.selectedEvaluator,\n                    studentList: fileReader.result + \"\\n\" + this.state.manualStudentEntry\n                }\n                \n                axios.post('http://localhost:5000/assignments/createAssignment', assignment)\n                    .then(res =>  {\n                        if (res.data.status)\n                        {\n                            alert(res.data.message);\n                            this.setState({\n                                selectedMeasure: this.state.outcomeList[0].measures[0].Measure_ID,\n                                selectedEvaluator: this.state.evaluatorList[0].email\n                            })\n                        }\n                    });\n            }\n            fileReader.readAsText(this.fileInput.current.files[0]);\n        }\n        else\n        {\n            let assignment = {\n                Measure_ID: this.state.selectedMeasure,\n                User_Email: this.state.selectedEvaluator,\n                studentList: \"Name,ID\\n\" + this.state.manualStudentEntry\n            }\n            \n            axios.post('http://localhost:5000/assignments/createAssignment', assignment)\n                .then(res =>  {\n                    if (res.data.status)\n                    {\n                        alert(res.data.message);\n                        this.setState({\n                            selectedMeasure: this.state.outcomeList[0].measures[0].Measure_ID,\n                            selectedEvaluator: this.state.evaluatorList[0].email\n                        })\n                    }\n                });\n        }\n    }\n\n    render()\n    {\n        return(\n            <form onSubmit={this.onSubmit}>\n                <h1>Create Assignment</h1>\n                <div className=\"form-group\">\n                    <label>Select Outcome: </label>\n                    <select className=\"form-control\" value={this.state.selectedOutcomeIndex} \n                            onChange={this.handleSelectOutcome} onClick={this.handleSelectOutcome}>\n                        <SelectOutcome outcomeList={this.state.outcomeList} />\n                    </select>\n                </div>\n                <div className=\"form-group\">\n                    <label>Select Measure: </label>\n                    <select className=\"form-control\" value={this.state.selectedMeasure}\n                            onChange={this.handleSelectMeasure} onClick={this.handleSelectMeasure}>\n                        <SelectMeasure onChange measureList={this.state.outcomeList[this.state.selectedOutcomeIndex].measures} />\n                    </select>\n                </div>\n                <div className=\"form-group\">\n                    <label>Select Evaluator: </label>\n                    <select className=\"form-control\" value={this.state.selectedEvaluator} name=\"selectedEvaluator\"\n                            onChange={this.handleInputChange} onClick={this.handleInputChange}>\n                        <SelectEvaluator evaluatorList={this.state.evaluatorList} />\n                    </select>\n                </div>\n                <div className=\"form-group\">\n                    <label>Select List of Subjects as .csv file: </label>\n                    <input type=\"file\" className=\"form-control-file\" ref={this.fileInput} onChange={this.changeFile} />\n                    {this.state.showFileAlert ? <p className=\"text-danger\">Invalid File</p>: null}\n                </div>\n                <div className=\"form-group\">\n                    <p className=\"h5\">Enter students manually.</p>\n                    <ManualStudentEntry formData={this.state.manualStudentEntry} />\n                    <button className=\"btn btn-secondary\" onClick={this.addStudent}>Add Student Manually</button>\n                </div>\n                <input type=\"submit\" value=\"submit\" className=\"btn btn-primary\" onClick={this.onSubmit} />\n            </form>\n        )\n    }\n\n}\n\n"]},"metadata":{},"sourceType":"module"}