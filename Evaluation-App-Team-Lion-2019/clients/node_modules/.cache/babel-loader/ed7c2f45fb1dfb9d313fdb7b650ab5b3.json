{"ast":null,"code":"import _classCallCheck from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/viewEvaluator.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { GetAllEvaluator } from '../../actions/evaluator';\nimport { connect } from \"react-redux\";\n\nvar ViewEvaluator =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ViewEvaluator, _Component);\n\n  function ViewEvaluator(props) {\n    _classCallCheck(this, ViewEvaluator);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ViewEvaluator).call(this, props));\n  }\n\n  _createClass(ViewEvaluator, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.GetAllEvaluator();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var evaluator = this.props.evaluator;\n      var display = '';\n\n      if (evaluator.evaluator) {\n        display = evaluator.evaluator.map(function (singleEvaluator, index) {\n          return React.createElement(\"div\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            class: \"row\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            class: \"col-sm-6\",\n            style: {\n              margin: \"auto\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            class: \"card\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            class: \"card-body\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }, React.createElement(\"h5\", {\n            class: \"card-title\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }, \"Name: \", singleEvaluator.firstName, \" \", singleEvaluator.lastName), React.createElement(\"p\", {\n            class: \"card-text\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }, \"Email: \", singleEvaluator.email))))));\n        });\n      } else {\n        console.log(\"Loading\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"jumbotron\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, display);\n    }\n  }]);\n\n  return ViewEvaluator;\n}(Component);\n\nViewEvaluator.propTypes = {\n  GetAllEvaluator: PropTypes.func.isRequired,\n  evaluator: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    evaluator: state.evaluator\n  };\n};\n\nexport default connect(mapStateToProps, {\n  GetAllEvaluator: GetAllEvaluator\n})(ViewEvaluator);","map":{"version":3,"sources":["/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/viewEvaluator.js"],"names":["React","Component","PropTypes","GetAllEvaluator","connect","ViewEvaluator","props","evaluator","display","map","singleEvaluator","index","margin","firstName","lastName","email","console","log","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAGA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAEMC,a;;;;;AAEF,yBAAYC,KAAZ,EAAkB;AAAA;;AAAA,sFACRA,KADQ;AAGjB;;;;yCAEmB;AAChB,WAAKA,KAAL,CAAWH,eAAX;AACH;;;6BAKD;AAAA,UACYI,SADZ,GAC0B,KAAKD,KAD/B,CACYC,SADZ;AAEI,UAAIC,OAAO,GAAG,EAAd;;AAEA,UAAGD,SAAS,CAACA,SAAb,EAAuB;AACnBC,QAAAA,OAAO,GAAGD,SAAS,CAACA,SAAV,CAAoBE,GAApB,CAAwB,UAACC,eAAD,EAAkBC,KAAlB;AAAA,iBAC9B;AAAK,YAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACA;AAAK,YAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACA;AAAK,YAAA,KAAK,EAAC,UAAX;AAAsB,YAAA,KAAK,EAAE;AAACC,cAAAA,MAAM,EAAE;AAAT,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAK,YAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAK,YAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAI,YAAA,KAAK,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA8BF,eAAe,CAACG,SAA9C,OAA0DH,eAAe,CAACI,QAA1E,CADF,EAEE;AAAG,YAAA,KAAK,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA6BJ,eAAe,CAACK,KAA7C,CAFF,CADF,CADF,CADA,CADA,CAD8B;AAAA,SAAxB,CAAV;AAgBH,OAjBD,MAkBI;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH;;AAED,aACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAECT,OAFD,CADJ;AAMH;;;;EA9CuBP,S;;AAiD5BI,aAAa,CAACa,SAAd,GAA0B;AACtBf,EAAAA,eAAe,EAAED,SAAS,CAACiB,IAAV,CAAeC,UADV;AAEtBb,EAAAA,SAAS,EAAEL,SAAS,CAACmB,MAAV,CAAiBD;AAFN,CAA1B;;AAKA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BhB,IAAAA,SAAS,EAAEgB,KAAK,CAAChB;AADa,GAAL;AAAA,CAA7B;;AAGA,eAAeH,OAAO,CAACkB,eAAD,EAAkB;AAACnB,EAAAA,eAAe,EAAfA;AAAD,CAAlB,CAAP,CAA4CE,aAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\n\n\nimport PropTypes from 'prop-types';\nimport { GetAllEvaluator } from '../../actions/evaluator';\nimport { connect } from \"react-redux\";\n\nclass ViewEvaluator extends Component\n{\n    constructor(props){\n        super(props);\n        \n    }\n\n    componentWillMount(){\n        this.props.GetAllEvaluator();\n    }\n\n    render()\n    \n\n    {\n        const { evaluator } = this.props;\n        var display = '';\n        \n        if(evaluator.evaluator){\n            display = evaluator.evaluator.map((singleEvaluator, index) =>(\n                <div key={index} >\n                <div class=\"row\">\n                <div class=\"col-sm-6\" style={{margin: \"auto\"}}>\n                  <div class=\"card\">\n                    <div class=\"card-body\">\n                      <h5 class=\"card-title\">Name: {singleEvaluator.firstName} {singleEvaluator.lastName}</h5>\n                      <p class=\"card-text\">Email: {singleEvaluator.email}</p>\n                      \n                    </div>\n                  </div>\n                </div>\n                \n              </div>\n              </div>\n            ))\n        }\n        else{\n            console.log(\"Loading\");\n        }\n\n        return(\n            <div className=\"jumbotron\" >\n                \n            {display}\n            </div>\n        );\n    }\n}\n\nViewEvaluator.propTypes = {\n    GetAllEvaluator: PropTypes.func.isRequired,\n    evaluator: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    evaluator: state.evaluator\n})\nexport default connect(mapStateToProps, {GetAllEvaluator})(ViewEvaluator);\n\n"]},"metadata":{},"sourceType":"module"}