{"ast":null,"code":"import _classCallCheck from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/viewSummary/viewSummary.js\";\nimport React, { Component } from 'react';\nimport './viewSummary.css';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Alert } from 'reactstrap';\nimport PropTypes from 'prop-types';\nvar dummyMeasure = {\n  Description: '',\n  Percent_to_reach_target: 0,\n  Target_Score: 0\n};\nvar dummyOutcome = {\n  Outcome_ID: 3,\n  Description: 'outcome 3',\n  measures: [dummyMeasure]\n};\nvar dummySummary = {\n  title: \"Assessment 2019\",\n  outcomes: [dummyOutcome]\n};\n\nvar ProgramSummaryBody = function ProgramSummaryBody(props) {\n  return props.state.programSummary.outcomes.map(function (currentOutcome, i) {\n    return React.createElement(Outcome, {\n      outcome: currentOutcome,\n      state: props.state,\n      key: currentOutcome.Outcome_ID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    });\n  });\n};\n\nvar Outcome = function Outcome(props) {\n  return React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, props.outcome.Description), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Measures, {\n    measures: props.outcome.measures,\n    state: props.state,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })));\n};\n\nfunction Measures(props) {\n  return props.measures.map(function (currentMeasure, i) {\n    return React.createElement(\"div\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, currentMeasure.Description), props.state.reportMode ? React.createElement(Statistics, {\n      state: props.state,\n      measure: currentMeasure,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }) : null, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  });\n}\n\nfunction Statistics(props) {\n  var target;\n  target = props.measure.Percent_to_reach_target * 100;\n  console.log(target);\n  var achieved = (props.measure.metTarget / props.measure.totalEvaluated * 100).toFixed(2);\n  console.log(achieved);\n  var colorToBe;\n\n  if (achieved > target) {\n    colorToBe = \"success\";\n  } else if (achieved < target) {\n    colorToBe = \"danger\";\n  } else {\n    colorToBe = \"warning\";\n  }\n\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, props.measure.totalEvaluated !== 0 ? React.createElement(Alert, {\n    color: colorToBe,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"mr-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Measure statistics: \", (props.measure.metTarget / props.measure.totalEvaluated * 100).toFixed(2), \"% of evaluations have met the target score of \", props.measure.Target_Score, \".\")) : null, React.createElement(Alert, {\n    color: \"info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \" \", props.measure.totalEvaluated, \" subjects have been evaluated.\"));\n}\n\nvar ViewSummary =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ViewSummary, _Component);\n\n  function ViewSummary(props) {\n    var _this;\n\n    _classCallCheck(this, ViewSummary);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ViewSummary).call(this, props));\n    _this.setView = _this.setView.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      reportMode: false,\n      programSummary: dummySummary,\n      total: 0,\n      metTarget: 0\n    };\n    return _this;\n  }\n\n  _createClass(ViewSummary, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //console.log(\"Inside componentDidMount\");\n      this.setView();\n    }\n  }, {\n    key: \"setView\",\n    value: function setView() {\n      // console.log(\"Inside setView\");\n      if (window.location.pathname === \"/summaryReport\") {\n        this.getSummaryWithStatistics();\n        this.setState({\n          reportMode: true\n        });\n      } else {\n        this.getSummary();\n      }\n    }\n  }, {\n    key: \"getSummaryWithStatistics\",\n    value: function getSummaryWithStatistics() {\n      var _this2 = this;\n\n      axios.get('http://localhost:5000/summaryReport/measureStatistics').then(function (res) {\n        //console.log(res.data);\n        _this2.setState({\n          programSummary: res.data.programSummary\n        });\n      });\n    }\n  }, {\n    key: \"getSummary\",\n    value: function getSummary() {\n      var _this3 = this;\n\n      axios.get('http://localhost:5000/summaryReport/getSummary').then(function (res) {\n        //console.log(res.data);\n        _this3.setState({\n          programSummary: res.data.programSummary\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, this.state.programSummary.title), React.createElement(\"table\", {\n        className: \"table table-bordered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"col\",\n        className: \"outcome-width\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Learning Outcomes\"), React.createElement(\"th\", {\n        scope: \"col\",\n        className: \"measure-width\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Measures of Performace\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(ProgramSummaryBody, {\n        state: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }))), React.createElement(Link, {\n        to: \"/editProgramSummary\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Edit Program Summary\"));\n    }\n  }]);\n\n  return ViewSummary;\n}(Component);\n\nexport { ViewSummary as default };\nAlert.propTypes = {\n  className: PropTypes.string,\n  closeClassName: PropTypes.string,\n  color: PropTypes.string,\n  // default: 'success'\n  isOpen: PropTypes.bool,\n  // default: true\n  toggle: PropTypes.func,\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]) //fade: PropTypes.bool, // default: true\n  // Controls the transition of the alert fading in and out\n  // See Fade for more details\n  //transition: PropTypes.shape(Fade.propTypes),\n\n};","map":{"version":3,"sources":["/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/viewSummary/viewSummary.js"],"names":["React","Component","axios","Link","Alert","PropTypes","dummyMeasure","Description","Percent_to_reach_target","Target_Score","dummyOutcome","Outcome_ID","measures","dummySummary","title","outcomes","ProgramSummaryBody","props","state","programSummary","map","currentOutcome","i","Outcome","outcome","Measures","currentMeasure","reportMode","Statistics","target","measure","console","log","achieved","metTarget","totalEvaluated","toFixed","colorToBe","ViewSummary","setView","bind","total","window","location","pathname","getSummaryWithStatistics","setState","getSummary","get","then","res","data","propTypes","className","string","closeClassName","color","isOpen","bool","toggle","func","tag","oneOfType"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './viewSummary.css';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Alert } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nvar dummyMeasure = {\n    Description: '',\n    Percent_to_reach_target: 0,\n    Target_Score: 0\n}\n\nvar dummyOutcome = {\n    Outcome_ID: 3,\n    Description: 'outcome 3',\n    measures: [dummyMeasure]\n}\n\nvar dummySummary = {\n    title: \"Assessment 2019\",\n    outcomes: [dummyOutcome]\n};\n\nconst ProgramSummaryBody = props =>\n{\n    return props.state.programSummary.outcomes.map(function(currentOutcome, i){\n        return <Outcome outcome={currentOutcome} state={props.state} key={currentOutcome.Outcome_ID} />;\n    });\n}\n\nconst Outcome = props => (\n    <tr>\n        <th scope=\"row\">{props.outcome.Description}</th>\n        <td><Measures measures={props.outcome.measures} state={props.state}  /></td>\n    </tr>\n)\n\nfunction Measures(props)\n{\n    return props.measures.map(function(currentMeasure, i){\n        return (\n            <div key={i}>\n                <p>{currentMeasure.Description}</p>\n                {props.state.reportMode ? <Statistics state={props.state} measure={currentMeasure} /> : null}\n                <hr/>\n            </div>\n            \n        )\n    });\n}\n\nfunction Statistics(props)\n{\n    \n    var target ;\n    target = props.measure.Percent_to_reach_target*100;\n    console.log(target);\n    var achieved = ((props.measure.metTarget / props.measure.totalEvaluated) * 100).toFixed(2);\n    console.log(achieved);\n    let colorToBe;\n    if (achieved > target){\n        colorToBe = \"success\";\n    }\n    else if(achieved < target){\n        colorToBe =\"danger\";\n    }\n    else {\n        colorToBe=\"warning\";\n    }\n    return <p>\n            {props.measure.totalEvaluated !== 0 ? \n                <Alert color={colorToBe}>\n                <span className=\"mr-4\">Measure statistics: {((props.measure.metTarget / props.measure.totalEvaluated) * 100).toFixed(2)}% of \n                evaluations have met the target score of {props.measure.Target_Score}.</span></Alert> : null}\n            <Alert color=\"info\"> {props.measure.totalEvaluated} subjects have been evaluated.</Alert>\n            </p>\n}\n\nexport default class ViewSummary extends Component \n{\n    \n    constructor(props){\n        super(props);\n        this.setView = this.setView.bind(this);\n        this.state = {\n            reportMode: false,\n            programSummary: dummySummary,\n            total: 0,\n            metTarget: 0\n        };\n    }\n\n    componentDidMount()\n    {\n        //console.log(\"Inside componentDidMount\");\n        this.setView();\n    }\n\n    setView()\n    {\n       // console.log(\"Inside setView\");\n        if (window.location.pathname===\"/summaryReport\")\n        {\n            this.getSummaryWithStatistics();\n            this.setState({\n                reportMode: true\n            });\n        }\n        else\n        {\n            this.getSummary();\n        }\n    }\n\n    getSummaryWithStatistics()\n    {\n        axios.get('http://localhost:5000/summaryReport/measureStatistics')\n            .then(res => {\n                //console.log(res.data);\n                this.setState({\n                    programSummary: res.data.programSummary\n                })\n            })\n    }\n\n    getSummary()\n    {\n        axios.get('http://localhost:5000/summaryReport/getSummary')\n            .then(res => {\n                //console.log(res.data);\n                this.setState({\n                    programSummary: res.data.programSummary\n                })\n            })\n    }\n\n    render()\n    {\n        return (\n            <div>\n                <h1>{this.state.programSummary.title}</h1>\n            \n                <table className=\"table table-bordered\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\" className=\"outcome-width\">Learning Outcomes</th>\n                            <th scope=\"col\" className=\"measure-width\">Measures of Performace</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <ProgramSummaryBody state={this.state} />\n                    </tbody>\n                </table>\n                <Link to=\"/editProgramSummary\" className=\"btn btn-primary\">Edit Program Summary</Link>\n            </div>\n        );\n    }\n}\n\nAlert.propTypes = {\n    className: PropTypes.string,\n    closeClassName: PropTypes.string,\n    color: PropTypes.string, // default: 'success'\n    isOpen: PropTypes.bool,  // default: true\n    toggle: PropTypes.func,\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n    //fade: PropTypes.bool, // default: true\n    // Controls the transition of the alert fading in and out\n    // See Fade for more details\n    //transition: PropTypes.shape(Fade.propTypes),\n  }"]},"metadata":{},"sourceType":"module"}