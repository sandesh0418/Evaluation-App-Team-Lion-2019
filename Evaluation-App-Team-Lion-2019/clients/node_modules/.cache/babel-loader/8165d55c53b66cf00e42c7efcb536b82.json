{"ast":null,"code":"import _defineProperty from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/viewSummary/viewSummary.js\";\nimport React, { Component } from 'react';\nimport './viewSummary.css';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Alert } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport Loader from 'react-loader-spinner';\nvar dummyMeasure = {\n  Description: '',\n  Percent_to_reach_target: 0,\n  Target_Score: 0\n};\nvar dummyOutcome = {\n  Outcome_ID: 3,\n  Outcome_Name: '',\n  Description: '',\n  measures: [dummyMeasure]\n};\nvar dummySummary = {\n  title: \"Assessment 2019\",\n  outcomes: [dummyOutcome]\n};\n\nvar ProgramSummaryBody = function ProgramSummaryBody(props) {\n  if (props.state.programSummary !== undefined) {\n    return props.state.programSummary.outcomes.map(function (currentOutcome, i) {\n      return React.createElement(Outcome, {\n        outcome: currentOutcome,\n        state: props.state,\n        key: currentOutcome.Outcome_ID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      });\n    });\n  } else {\n    return null;\n  }\n};\n\nvar Outcome = function Outcome(props) {\n  return React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    className: \"p-2\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, props.outcome.Outcome_Name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, props.outcome.Description)), React.createElement(\"td\", {\n    className: \"p-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Measures, {\n    measures: props.outcome.measures,\n    state: props.state,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })));\n};\n\nfunction Measures(props) {\n  return props.measures.map(function (currentMeasure, i) {\n    return React.createElement(\"div\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"bold mr-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, currentMeasure.Measure_Name)), React.createElement(\"a\", {\n      href: \"/measureReport/\" + currentMeasure.Measure_ID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"At least \" + currentMeasure.Percent_to_reach_target * 100 + \"% of subjects score a \" + (currentMeasure.Value_Name ? \"'\" + currentMeasure.Value_Name + \"'\" : currentMeasure.Target_Score * 100 + \"%\") + \" or higher on \" + currentMeasure.Tool_Name + \".\"), currentMeasure.Description ? React.createElement(\"details\", {\n      className: \"ml-3 mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"summary\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Additional description: \"), React.createElement(\"p\", {\n      className: \"ml-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, currentMeasure.Description)) : null, props.state.reportMode ? React.createElement(Statistics, {\n      state: props.state,\n      measure: currentMeasure,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }) : null, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }));\n  });\n}\n\nfunction Statistics(props) {\n  var target;\n  target = props.measure.Percent_to_reach_target * 100;\n  console.log(target);\n  var achieved = (props.measure.metTarget / props.measure.totalEvaluated * 100).toFixed(2);\n  console.log(achieved);\n  var colorToBe;\n\n  if (achieved > target) {\n    colorToBe = \"success\";\n  } else if (achieved < target) {\n    colorToBe = \"danger\";\n  } else {\n    colorToBe = \"warning\";\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, props.measure.totalEvaluated !== 0 ? React.createElement(Alert, {\n    color: colorToBe,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"mr-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"Measure statistics: \", (props.measure.metTarget / props.measure.totalEvaluated * 100).toFixed(2), \"% of evaluations have met the target score of \", props.measure.Value_Name ? \"'\" + props.measure.Value_Name + \"'\" : props.measure.Target_Score * 100 + \"%\", \".\")) : null, React.createElement(Alert, {\n    color: \"info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \" \", props.measure.totalEvaluated, \" subjects have been evaluated.\"));\n}\n\nvar ViewSummary =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ViewSummary, _Component);\n\n  function ViewSummary(props) {\n    var _this;\n\n    _classCallCheck(this, ViewSummary);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ViewSummary).call(this, props));\n    _this.setView = _this.setView.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      reportMode: false,\n      programSummary: dummySummary,\n      total: 0,\n      metTarget: 0\n    };\n    return _this;\n  }\n\n  _createClass(ViewSummary, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //console.log(\"Inside componentDidMount\");\n      this.setView();\n    }\n  }, {\n    key: \"setView\",\n    value: function setView() {\n      // console.log(\"Inside setView\");\n      if (window.location.pathname === \"/summaryReport\") {\n        this.getSummaryWithStatistics();\n        this.setState({\n          reportMode: true\n        });\n      } else {\n        this.getSummary();\n      }\n    }\n  }, {\n    key: \"getSummaryWithStatistics\",\n    value: function getSummaryWithStatistics() {\n      var _this2 = this;\n\n      axios.get('/summaryReport/measureStatistics/' + localStorage.getItem(\"Cycle_Id\")).then(function (res) {\n        //console.log(res.data);\n        _this2.setState({\n          programSummary: res.data.programSummary\n        });\n      });\n    }\n  }, {\n    key: \"getSummary\",\n    value: function getSummary() {\n      var _this3 = this;\n\n      console.log(localStorage.getItem(\"Cycle_Id\"));\n      axios.get('/summaryReport/getSummary/' + localStorage.getItem(\"Cycle_Id\")).then(function (res) {\n        console.log(res.data);\n\n        _this3.setState({\n          programSummary: res.data.programSummary\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _React$createElement, _React$createElement2;\n\n      var programSum = '';\n\n      if (this.state.programSummary) {\n        programSum = this.state.programSummary.title;\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, programSum), React.createElement(\"table\", {\n        className: \"table table-bordered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"th\", (_React$createElement = {\n        className: \"p-2\",\n        scope: \"col\"\n      }, _defineProperty(_React$createElement, \"className\", \"outcome-width\"), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement), \"Learning Outcomes\"), React.createElement(\"th\", (_React$createElement2 = {\n        className: \"p-2\",\n        scope: \"col\"\n      }, _defineProperty(_React$createElement2, \"className\", \"measure-width\"), _defineProperty(_React$createElement2, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      }), _defineProperty(_React$createElement2, \"__self\", this), _React$createElement2), \"Measures of Performace\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(ProgramSummaryBody, {\n        state: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }))), React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \" \", React.createElement(\"a\", {\n        href: \"/editProgramSummary\",\n        style: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Edit Program Summary\"))));\n    }\n  }]);\n\n  return ViewSummary;\n}(Component);\n\nexport { ViewSummary as default };\nAlert.propTypes = {\n  className: PropTypes.string,\n  closeClassName: PropTypes.string,\n  color: PropTypes.string,\n  // default: 'success'\n  isOpen: PropTypes.bool,\n  // default: true\n  toggle: PropTypes.func,\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]) //fade: PropTypes.bool, // default: true\n  // Controls the transition of the alert fading in and out\n  // See Fade for more details\n  //transition: PropTypes.shape(Fade.propTypes),\n\n};","map":{"version":3,"sources":["/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/viewSummary/viewSummary.js"],"names":["React","Component","axios","Link","Alert","PropTypes","Loader","dummyMeasure","Description","Percent_to_reach_target","Target_Score","dummyOutcome","Outcome_ID","Outcome_Name","measures","dummySummary","title","outcomes","ProgramSummaryBody","props","state","programSummary","undefined","map","currentOutcome","i","Outcome","outcome","Measures","currentMeasure","Measure_Name","Measure_ID","Value_Name","Tool_Name","reportMode","Statistics","target","measure","console","log","achieved","metTarget","totalEvaluated","toFixed","colorToBe","ViewSummary","setView","bind","total","window","location","pathname","getSummaryWithStatistics","setState","getSummary","get","localStorage","getItem","then","res","data","programSum","color","propTypes","className","string","closeClassName","isOpen","bool","toggle","func","tag","oneOfType"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './viewSummary.css';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Alert } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport Loader from 'react-loader-spinner';\n\n\nvar dummyMeasure = {\n    Description: '',\n    Percent_to_reach_target: 0,\n    Target_Score: 0\n}\n\nvar dummyOutcome = {\n    Outcome_ID: 3,\n    Outcome_Name: '',\n    Description: '',\n    measures: [dummyMeasure]\n}\n\nvar dummySummary = {\n    title: \"Assessment 2019\",\n    outcomes: [dummyOutcome]\n};\n\nconst ProgramSummaryBody = props =>\n{\n    if(props.state.programSummary !== undefined)\n    {\n        return props.state.programSummary.outcomes.map(function(currentOutcome, i){\n            return <Outcome outcome={currentOutcome} state={props.state} key={currentOutcome.Outcome_ID} />;\n        });\n    }\n    else\n    {\n        return null;\n    }\n}\n\nconst Outcome = props => (\n    <tr>\n        <th className=\"p-2\" scope=\"row\">\n            <p className=\"h4\">{props.outcome.Outcome_Name}</p>\n            <p>{props.outcome.Description}</p>\n        </th>\n        <td className=\"p-2\"><Measures measures={props.outcome.measures} state={props.state}  /></td>\n    </tr>\n)\n\nfunction Measures(props)\n{\n    return props.measures.map(function(currentMeasure, i){\n        return (\n            <div key={i}>\n                <span className=\"bold mr-3\"><strong>{currentMeasure.Measure_Name}</strong></span>\n                <a href={\"/measureReport/\" + currentMeasure.Measure_ID}>\n                    {\"At least \" + (currentMeasure.Percent_to_reach_target * 100) + \"% of subjects score a \" + \n                    (currentMeasure.Value_Name ? \"'\" + currentMeasure.Value_Name + \"'\" : \n                    (currentMeasure.Target_Score * 100) + \"%\") +\" or higher on \" + currentMeasure.Tool_Name + \".\"}\n                </a>\n                {currentMeasure.Description ?  \n                    <details className=\"ml-3 mb-3\">\n                        <summary>Additional description: </summary>\n                        <p className=\"ml-3\">{currentMeasure.Description}</p>\n                    </details>\n                    : null}\n                {props.state.reportMode ? <Statistics state={props.state} measure={currentMeasure} /> : null}\n                <hr/>\n            </div>\n            \n        )\n    });\n}\n\nfunction Statistics(props)\n{\n    \n    var target ;\n    target = props.measure.Percent_to_reach_target*100;\n    console.log(target);\n    var achieved = ((props.measure.metTarget / props.measure.totalEvaluated) * 100).toFixed(2);\n    console.log(achieved);\n    let colorToBe;\n    if (achieved > target){\n        colorToBe = \"success\";\n    }\n    else if(achieved < target){\n        colorToBe =\"danger\";\n    }\n    else {\n        colorToBe=\"warning\";\n    }\n    return <div>\n            {props.measure.totalEvaluated !== 0 ? \n                <Alert color={colorToBe}>\n                <span className=\"mr-4\">Measure statistics: {((props.measure.metTarget / props.measure.totalEvaluated) * 100).toFixed(2)}% of \n                evaluations have met the target score of {(props.measure.Value_Name ? \"'\" + props.measure.Value_Name + \"'\" : \n                    (props.measure.Target_Score * 100) + \"%\")}.</span></Alert> : null}\n            <Alert color=\"info\"> {props.measure.totalEvaluated} subjects have been evaluated.</Alert>\n            </div>\n}\n\nexport default class ViewSummary extends Component \n{\n    \n    constructor(props){\n        super(props);\n        this.setView = this.setView.bind(this);\n        this.state = {\n            reportMode: false,\n            programSummary: dummySummary,\n            total: 0,\n            metTarget: 0\n        };\n    }\n\n    componentDidMount()\n    {\n        //console.log(\"Inside componentDidMount\");\n        this.setView();\n    }\n\n    setView()\n    {\n       // console.log(\"Inside setView\");\n        if (window.location.pathname===\"/summaryReport\")\n        {\n            this.getSummaryWithStatistics();\n            this.setState({\n                reportMode: true\n            });\n        }\n        else\n        {\n            this.getSummary();\n        }\n    }\n\n    getSummaryWithStatistics()\n    {\n        axios.get('/summaryReport/measureStatistics/' + localStorage.getItem(\"Cycle_Id\"))\n            .then(res => {\n                //console.log(res.data);\n                this.setState({\n                    programSummary: res.data.programSummary\n                })\n            })\n    }\n\n    getSummary()\n    {\n        console.log(localStorage.getItem(\"Cycle_Id\"));\n        axios.get('/summaryReport/getSummary/' + localStorage.getItem(\"Cycle_Id\"))\n            .then(res => {\n                console.log(res.data);\n                this.setState({\n                    programSummary: res.data.programSummary\n                })\n            })\n    }\n\n    render()\n    {\n        var programSum= '';\n       \n        \n        if(this.state.programSummary){\n                programSum = this.state.programSummary.title;\n                \n            \n                \n        }\n        \n\n        return (\n\n            <div>\n               <div>\n                <h1>{programSum}</h1>\n            \n                <table className=\"table table-bordered\">\n                    <thead>\n                        <tr>\n                            <th className=\"p-2\" scope=\"col\" className=\"outcome-width\">Learning Outcomes</th>\n                            <th className=\"p-2\" scope=\"col\" className=\"measure-width\">Measures of Performace</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <ProgramSummaryBody state={this.state} />\n                    </tbody>\n                </table>\n                <button className=\"btn btn-primary\" > <a href=\"/editProgramSummary\"  style={{color: \"white\"}}>Edit Program Summary</a></button>\n                </div>\n            </div>\n        );\n    }\n}\n\nAlert.propTypes = {\n    className: PropTypes.string,\n    closeClassName: PropTypes.string,\n    color: PropTypes.string, // default: 'success'\n    isOpen: PropTypes.bool,  // default: true\n    toggle: PropTypes.func,\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n    //fade: PropTypes.bool, // default: true\n    // Controls the transition of the alert fading in and out\n    // See Fade for more details\n    //transition: PropTypes.shape(Fade.propTypes),\n  }"]},"metadata":{},"sourceType":"module"}