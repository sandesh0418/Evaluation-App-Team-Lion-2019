{"ast":null,"code":"import _classCallCheck from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/evaluateTest.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\n\nvar StubjectList = function StubjectList(props) {\n  return props.subjectList.map(function (s) {\n    return React.createElement(\"div\", {\n      className: \"row no-gutters\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, s.subjectName + \":\")), React.createElement(\"div\", {\n      className: \"col-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: s.subjectId,\n      type: \"number\",\n      min: \"0\",\n      max: \"100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    })));\n  });\n};\n\nvar EvaluateTest =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EvaluateTest, _Component);\n\n  function EvaluateTest(props) {\n    var _this;\n\n    _classCallCheck(this, EvaluateTest);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EvaluateTest).call(this, props));\n    _this.submitScores = _this.submitScores.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      subjectList: [],\n      subjectId: null,\n      measure: null\n    };\n    return _this;\n  }\n\n  _createClass(EvaluateTest, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(this.props.match.params.assignment);\n      axios.get('http://localhost:5000/assignments/subjectList/' + this.props.match.params.assignment).then(function (res) {\n        _this2.setState({\n          subjectList: res.data.subjectList,\n          subjectId: res.data.subjectList[0]\n        });\n      });\n      axios.get('http://localhost:5000/assignments/assignmentMeasure/' + this.props.match.params.assignment).then(function (res) {\n        _this2.setState({\n          measure: res.data.measure\n        });\n      });\n    }\n  }, {\n    key: \"submitScores\",\n    value: function submitScores(e) {\n      e.preventDefault();\n      var scores = [];\n      this.state.subjectList.forEach(function (s) {\n        var newScore = {\n          subjectId: s.subjectId,\n          score: document.getElementById(s.subjectId).value\n        };\n        scores.push(newScore);\n      });\n      var scoreData = {\n        measureId: this.state.measure.measureId,\n        userEmail: localStorage.getItem(\"email\"),\n        criteriaTitle: \"Test\",\n        scores: scores\n      };\n      axios.post('http://localhost:5000/scoreSubmission/testScore', scoreData).then(function (res) {\n        console.log(res.data);\n\n        if (inserted) {\n          alert(\"The score has been saved.\");\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Enter Scores\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, this.state.measure ? \"for measure: \" + this.state.measure.description : null), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Enter scores a percent of 100. Example: if 85%, then enter 85.\"), React.createElement(\"form\", {\n        onSubmit: this.submitScores,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(StubjectList, {\n        subjectList: this.state.subjectList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"btn btn-primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return EvaluateTest;\n}(Component);\n\nexport { EvaluateTest as default };","map":{"version":3,"sources":["/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/evaluateTest.js"],"names":["React","Component","axios","StubjectList","props","subjectList","map","s","subjectName","subjectId","EvaluateTest","submitScores","bind","state","measure","console","log","match","params","assignment","get","then","res","setState","data","e","preventDefault","scores","forEach","newScore","score","document","getElementById","value","push","scoreData","measureId","userEmail","localStorage","getItem","criteriaTitle","post","inserted","alert","description"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from \"axios\";\n\nconst StubjectList = props => {\n    return props.subjectList.map(s => {\n        return (\n            <div className=\"row no-gutters\">\n                <div className=\"col-2\">\n                    <span>{s.subjectName + \":\"}</span>\n                </div>\n                <div className=\"col-1\">\n                    <input id={s.subjectId} type=\"number\" min=\"0\" max=\"100\" />\n                </div>\n            </div>\n        )\n    })\n}\n\nexport default class EvaluateTest extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.submitScores = this.submitScores.bind(this);\n        this.state = {\n            subjectList: [],\n            subjectId: null,\n            measure: null\n        }\n    }\n\n    componentDidMount()\n    {\n        console.log(this.props.match.params.assignment);\n        axios.get('http://localhost:5000/assignments/subjectList/'+this.props.match.params.assignment)\n            .then(res => {\n                this.setState({\n                    subjectList: res.data.subjectList,\n                    subjectId: res.data.subjectList[0]\n                })\n            })\n        axios.get('http://localhost:5000/assignments/assignmentMeasure/' + this.props.match.params.assignment)\n            .then(res => {\n                this.setState({\n                    measure: res.data.measure\n                })\n            })\n    }\n\n    submitScores(e)\n    {\n        e.preventDefault();\n        let scores = [];\n        this.state.subjectList.forEach(s => {\n            let newScore = {\n                subjectId: s.subjectId,\n                score: document.getElementById(s.subjectId).value\n            }\n            scores.push(newScore);\n        })\n\n        let scoreData = {\n            measureId: this.state.measure.measureId,\n            userEmail: localStorage.getItem(\"email\"),\n            criteriaTitle: \"Test\",\n            scores: scores\n        }\n\n        axios.post('http://localhost:5000/scoreSubmission/testScore', scoreData)\n            .then(res => {\n                console.log(res.data);\n                if (inserted)\n                {\n                    alert(\"The score has been saved.\");\n                }\n            });\n    }\n\n    render()\n    {\n        return (\n            <>\n                <h1>Enter Scores</h1>\n                <p>{this.state.measure ? \"for measure: \" + this.state.measure.description : null}</p>\n                <p>Enter scores a percent of 100. Example: if 85%, then enter 85.</p>\n                <form onSubmit={this.submitScores}>\n                    <StubjectList subjectList={this.state.subjectList} />\n                    <input className=\"btn btn-primary\" type=\"submit\" />\n                </form>\n            </>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}