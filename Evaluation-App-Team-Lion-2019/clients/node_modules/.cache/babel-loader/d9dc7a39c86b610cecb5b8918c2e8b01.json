{"ast":null,"code":"import Axios from 'axios';\nimport { NEW_CYCLE, GET_ERRORS, GET_ALL_CYCLES } from './types';\nexport var CreateNewCycle = function CreateNewCycle(obj) {\n  return function (dispatch) {\n    Axios.post(\"http://localhost:5000/cycle/\", obj).then(function (res) {\n      dispatch({\n        type: NEW_CYCLE,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err\n      });\n    });\n  };\n};\nexport var GetAllCycle = function GetAllCycle() {\n  return function (dispatch) {\n    Axios.get(\"http://localhost:5000/cycle/getCycles\").then(function (res) {\n      dispatch({\n        type: GET_ALL_CYCLES,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/actions/cycle.js"],"names":["Axios","NEW_CYCLE","GET_ERRORS","GET_ALL_CYCLES","CreateNewCycle","obj","dispatch","post","then","res","type","payload","data","catch","err","GetAllCycle","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,cAAhC,QAAsD,SAAtD;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,GAAD;AAAA,SAAS,UAAAC,QAAQ,EAAG;AAC9CN,IAAAA,KAAK,CAACO,IAAN,iCACAF,GADA,EAECG,IAFD,CAEM,UAAAC,GAAG,EAAI;AACTH,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAET,SADD;AAELU,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAFR,OAAD,CAAR;AAIH,KAPD,EAQCC,KARD,CAQO,UAAAC,GAAG,EAAG;AACTR,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAER,UADD;AAELS,QAAAA,OAAO,EAAEG;AAFJ,OAAD,CAAR;AAIH,KAbD;AAcH,GAf6B;AAAA,CAAvB;AAiBP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAM,UAAAT,QAAQ,EAAI;AACzCN,IAAAA,KAAK,CAACgB,GAAN,CAAU,uCAAV,EACKR,IADL,CACU,UAAAC,GAAG,EAAI;AACTH,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAEP,cADD;AAELQ,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAFR,OAAD,CAAR;AAIH,KANL,EAOKC,KAPL,CAOW,UAAAC,GAAG,EAAI;AACVR,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAER,UADD;AAELS,QAAAA,OAAO,EAACG;AAFH,OAAD,CAAR;AAIH,KAZL;AAaH,GAd0B;AAAA,CAApB","sourcesContent":["import Axios from 'axios';\n\nimport { NEW_CYCLE, GET_ERRORS, GET_ALL_CYCLES } from './types';\n\nexport const CreateNewCycle = (obj) => dispatch =>{\n    Axios.post(`http://localhost:5000/cycle/`,\n    obj )\n    .then(res => {\n        dispatch({\n            type: NEW_CYCLE,\n            payload: res.data\n        })\n    })\n    .catch(err =>{\n        dispatch({\n            type: GET_ERRORS,\n            payload: err\n        })\n    })\n}\n\nexport const GetAllCycle = () => dispatch => {\n    Axios.get(\"http://localhost:5000/cycle/getCycles\")\n        .then(res => {\n            dispatch({\n                type: GET_ALL_CYCLES,\n                payload: res.data\n            })\n        })\n        .catch(err => {\n            dispatch({\n                type: GET_ERRORS,\n                payload:err\n            })\n        })\n}"]},"metadata":{},"sourceType":"module"}