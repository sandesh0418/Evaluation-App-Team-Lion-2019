{"ast":null,"code":"import _defineProperty from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/editProgramSummary/editProgramSummary.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport uuid from 'uuid/v1';\nimport AddRubricMeasurePopup from './addRubricMeasurePopup';\nimport AddTestMeasurePopup from './addTestMeasurePopup';\nimport Loader from 'react-loader-spinner';\n\nvar OutcomeList = function OutcomeList(props) {\n  if (props.outcomes) {\n    return props.outcomes.map(function (currentOutcome) {\n      return React.createElement(Outcome, {\n        key: currentOutcome.Outcome_ID,\n        outcome: currentOutcome,\n        handleOutcomeChange: props.handleOutcomeChange,\n        handleDeleteOutcome: props.handleDeleteOutcome,\n        handleOutcomeNameChange: props.handleOutcomeNameChange,\n        handleAddRubricMeasure: props.handleAddRubricMeasure,\n        handleAddTestMeasure: props.handleAddTestMeasure,\n        handleDeleteMeasure: props.handleDeleteMeasure,\n        selectCourseList: props.selectCourseList,\n        addCourse: props.addCourse,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      });\n    });\n  } else {\n    return null;\n  }\n};\n\nvar Outcome = function Outcome(props) {\n  return React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col border p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: props.outcome.Outcome_ID,\n    value: props.outcome.Outcome_Name,\n    onChange: props.handleOutcomeNameChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"textarea\", {\n    className: \"form-control mb-3\",\n    rows: \"7\",\n    name: props.outcome.Outcome_ID,\n    value: props.outcome.Description,\n    onChange: props.handleOutcomeChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"btn btn-danger\",\n    id: props.outcome.Outcome_ID,\n    onClick: props.handleDeleteOutcome,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Delete Outcome\")), React.createElement(\"div\", {\n    className: \"col-8 border p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, props.outcome.measures[0] ? React.createElement(Measures, {\n    measures: props.outcome.measures,\n    outcomeId: props.outcome.Outcome_ID,\n    handleDeleteMeasure: props.handleDeleteMeasure,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }) : null, React.createElement(DropdownButton, {\n    id: \"dropdown-basic-button\",\n    className: \"mb-3\",\n    title: \"Add Measure\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Dropdown.Item, {\n    onSelect: props.handleAddTestMeasure,\n    eventKey: props.outcome.Outcome_ID,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Add Test Measure\"), React.createElement(Dropdown.Item, {\n    onSelect: props.handleAddRubricMeasure,\n    eventKey: props.outcome.Outcome_ID,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Add Rubric Measure\")), React.createElement(\"details\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"summary\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Outcome's Curriculum Elements\"), React.createElement(OutcomeCurriculum, {\n    courses: props.outcome.courses,\n    outcomeId: props.outcome.Outcome_ID,\n    selectCourseList: props.selectCourseList,\n    addCourse: props.addCourse,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }))));\n};\n\nvar Measures = function Measures(props) {\n  return props.measures.map(function (measure) {\n    return React.createElement(\"div\", {\n      key: measure.Measure_ID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-sm btn-danger mr-2\",\n      name: props.outcomeId,\n      id: measure.Measure_ID,\n      onClick: props.handleDeleteMeasure,\n      title: \"delete measure\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"X\"), React.createElement(\"span\", {\n      className: \"bold mr-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, measure.Measure_Name)), \"At least \" + measure.Percent_to_reach_target * 100 + \"% of subjects score \" + (measure.Value_Name ? \"'\" + measure.Value_Name + \"'\" : measure.Target_Score * 100 + \"%\") + \" or higher on \" + measure.Tool_Name + \".\"), measure.Description ? React.createElement(\"details\", {\n      className: \"ml-3 mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"summary\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Additional description: \"), React.createElement(\"p\", {\n      className: \"ml-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, measure.Description)) : null);\n  });\n};\n\nvar OutcomeCurriculum = function OutcomeCurriculum(props) {\n  var allIds = props.selectCourseList.map(function (c) {\n    return c.courseId;\n  });\n  var usedIds = props.courses.map(function (c) {\n    return c.courseId;\n  });\n  var selectableIds = allIds.filter(function (c) {\n    return !usedIds.includes(c);\n  });\n  var selectableCourses = props.selectCourseList.filter(function (c) {\n    return selectableIds.includes(c.courseId);\n  });\n  var selectCourseList = selectableCourses.map(function (c) {\n    return React.createElement(\"option\", {\n      value: c.courseId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, c.departmentCode + \" \" + c.courseCode + \" \" + c.name);\n  });\n  var outcomeCourses = props.courses.map(function (c, i) {\n    return React.createElement(\"div\", {\n      key: i,\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, c.courseId !== \"\" ? c.departmentCode + \" \" + c.courseCode + \" \" + c.name : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"It works\")\n    /* <select className=\"form-control\">\n        {selectCourseList}\n    </select> */\n    ), React.createElement(\"div\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      min: \"0\",\n      max: \"99\",\n      value: c.relevantHours,\n      title: \"Enter the number of hours in this course relevant to this outcome.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger\",\n      onClick: props.deleteCourseMapping,\n      id: props.outcomeId,\n      name: c.courseId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Delete Element\")));\n  });\n  return React.createElement(\"div\", {\n    className: \"mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, outcomeCourses, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    onClick: props.addCourse,\n    id: props.outcomeId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"Add another course\"));\n};\n\nvar EditProgramSummary =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditProgramSummary, _Component);\n\n  function EditProgramSummary(props) {\n    var _this;\n\n    _classCallCheck(this, EditProgramSummary);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditProgramSummary).call(this, props));\n    _this.handleAddRubricMeasure = _this.handleAddRubricMeasure.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleAddTestMeasure = _this.handleAddTestMeasure.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleOutcomeChange = _this.handleOutcomeChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleOutcomeNameChange = _this.handleOutcomeNameChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleAddOutcome = _this.handleAddOutcome.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addNewMeasure = _this.addNewMeasure.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDeleteMeasure = _this.handleDeleteMeasure.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDeleteOutcome = _this.handleDeleteOutcome.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.closePopup = _this.closePopup.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addCourse = _this.addCourse.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSave = _this.handleSave.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      programSummary: null,\n      curriculum: null,\n      showAddRubricMeasurePopup: false,\n      showAddTestMeasurePopup: false,\n      outcomeIdOfNewMeasure: \"hello\",\n      deletedOutcomeIds: [],\n      deletedMeasureIds: [],\n      //The following values are passed to and manipulated in the addRubricMeasurePopups.\n      rubrics: null,\n      toolName: null,\n      measureName: 'Measure #',\n      //The following values are passed to both the addRubricMeasure and addTestMeasurePopups\n      description: null,\n      targetScore: 0,\n      percentToReachTarget: 0\n    };\n    return _this;\n  }\n\n  _createClass(EditProgramSummary, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('/summaryReport/getSummary/' + localStorage.getItem(\"Cycle_Id\")).then(function (res) {\n        _this2.setState({\n          programSummary: res.data.programSummary\n        });\n      });\n      axios.get('/rubric/getListWithScale/' + localStorage.getItem(\"Cycle_Id\")).then(function (res) {\n        if (res.data.status) {\n          _this2.setState({\n            rubrics: res.data.rubrics,\n            toolName: res.data.rubrics[0].Rubric_Title ? res.data.rubrics[0].Rubric_Title : null\n          });\n        }\n      });\n      axios.get('/curriculum/getCurriculum/' + localStorage.getItem(\"Cycle_Id\")).then(function (res) {\n        console.log(res.data.curriculum);\n\n        _this2.setState({\n          curriculum: res.data.curriculum\n        });\n      });\n    }\n  }, {\n    key: \"handleAddOutcome\",\n    value: function handleAddOutcome() {\n      var tempSummary = this.state.programSummary;\n      var newId = uuid();\n      tempSummary.outcomes.push({\n        Outcome_ID: newId,\n        Outcome_Name: \"Outcome #\",\n        Description: \"Enter outcome description.\",\n        measures: []\n      });\n      this.setState({\n        programSummary: tempSummary\n      });\n    }\n  }, {\n    key: \"handleDeleteOutcome\",\n    value: function handleDeleteOutcome(e) {\n      var tempSummary = this.state.programSummary;\n      var outcomeIndex = tempSummary.outcomes.findIndex(function (o) {\n        return o.Outcome_ID === e.target.id;\n      });\n      tempSummary.outcomes.splice(outcomeIndex, 1);\n      var tempDeletedOutcomeIds = this.state.deletedOutcomeIds;\n      tempDeletedOutcomeIds.push(e.target.id);\n      this.setState({\n        programSummary: tempSummary,\n        deletedOutcomeIds: tempDeletedOutcomeIds\n      });\n    }\n  }, {\n    key: \"handleOutcomeChange\",\n    value: function handleOutcomeChange(e) {\n      var newDescription = e.target.value;\n      var id = e.target.name;\n      var index = this.state.programSummary.outcomes.findIndex(function (o) {\n        return o.Outcome_ID === id;\n      });\n      var tempSummary = this.state.programSummary;\n      tempSummary.outcomes[index].Description = newDescription;\n      this.setState({\n        programSummary: tempSummary\n      });\n    }\n  }, {\n    key: \"handleOutcomeNameChange\",\n    value: function handleOutcomeNameChange(e) {\n      var index = this.state.programSummary.outcomes.findIndex(function (o) {\n        return o.Outcome_ID === e.target.name;\n      });\n      var tempSummary = this.state.programSummary;\n      tempSummary.outcomes[index].Outcome_Name = e.target.value;\n      this.setState({\n        programSummary: tempSummary\n      });\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"handleAddTestMeasure\",\n    value: function handleAddTestMeasure(e) {\n      this.setState({\n        showAddTestMeasurePopup: true,\n        targetScore: 0,\n        toolName: \"Test\",\n        outcomeIdOfNewMeasure: e\n      });\n    }\n  }, {\n    key: \"handleAddRubricMeasure\",\n    value: function handleAddRubricMeasure(e) {\n      if (this.state.rubrics) {\n        this.setState({\n          showAddRubricMeasurePopup: true,\n          outcomeIdOfNewMeasure: e,\n          targetScore: this.state.rubrics[0].scale[0].Value_Number,\n          toolName: this.state.rubrics[0].Rubric_Title\n        });\n      } else {\n        alert(\"There are no rubrics associated with the current cycle. \\n\\nMigrate or create rubrics before making \" + \"rubric measures.\");\n      }\n    }\n  }, {\n    key: \"handleDeleteMeasure\",\n    value: function handleDeleteMeasure(e) {\n      var tempSummary = this.state.programSummary;\n      var outcomeIndex = tempSummary.outcomes.findIndex(function (o) {\n        return o.Outcome_ID === e.target.name;\n      });\n      var measureIndex = tempSummary.outcomes[outcomeIndex].measures.findIndex(function (m) {\n        return m.Measure_ID === e.target.id;\n      });\n      tempSummary.outcomes[outcomeIndex].measures.splice(measureIndex, 1);\n      var tempDeletedMeasureIds = this.state.deletedMeasureIds;\n      tempDeletedMeasureIds.push(e.target.id);\n      this.setState({\n        programSummary: tempSummary,\n        deletedMeasureIds: tempDeletedMeasureIds\n      });\n    }\n  }, {\n    key: \"closePopup\",\n    value: function closePopup(e) {\n      this.setState({\n        showAddRubricMeasurePopup: false,\n        showAddTestMeasurePopup: false,\n        targetScore: 0,\n        toolName: \"\"\n      });\n    }\n  }, {\n    key: \"addNewMeasure\",\n    value: function addNewMeasure(e) {\n      var _this3 = this;\n\n      var newId = uuid();\n      var rubricIndex = this.state.rubrics.findIndex(function (r) {\n        return r.Rubric_Title === _this3.state.toolName;\n      });\n      var valueName = null;\n      var targetScore = this.state.targetScore;\n\n      if (rubricIndex > -1) {\n        valueName = this.state.rubrics[rubricIndex].scale[this.state.targetScore - 1].Value_Name;\n      } else {\n        targetScore = targetScore / 100;\n      }\n\n      var newMeasure = {\n        Measure_ID: newId,\n        Measure_Name: this.state.measureName,\n        Description: this.state.description ? this.state.description : null,\n        Percent_to_reach_target: this.state.percentToReachTarget / 100,\n        Value_Name: valueName,\n        Target_Score: targetScore,\n        Tool_Name: this.state.toolName\n      };\n      var index = this.state.programSummary.outcomes.findIndex(function (o) {\n        return o.Outcome_ID === _this3.state.outcomeIdOfNewMeasure;\n      });\n      var tempSummary = this.state.programSummary;\n      tempSummary.outcomes[index].measures.push(newMeasure);\n      this.setState({\n        programSummary: tempSummary,\n        showAddRubricMeasurePopup: false,\n        showAddTestMeasurePopup: false,\n        measureName: 'Measure #',\n        toolName: \"\",\n        description: null,\n        targetScore: 0,\n        percentToReachTarget: 0\n      });\n    }\n  }, {\n    key: \"addCourse\",\n    value: function addCourse(e) {\n      var tempSummary = this.state.programSummary;\n      var outcomeIndex = tempSummary.outcomes.findIndex(function (o) {\n        return o.Outcome_ID === e.target.id;\n      });\n      tempSummary.outcomes[outcomeIndex].courses.push({\n        departmentCode: \"\",\n        courseCode: \"\",\n        name: \"\",\n        relevantHours: 0,\n        courseId: \"\"\n      });\n      this.setState({\n        programSummary: tempSummary\n      });\n    }\n  }, {\n    key: \"handleSave\",\n    value: function handleSave() {\n      axios.post('/editProgramSummary/editProgramSummary', this.state.programSummary).then(function (res) {\n        window.location.replace(\"/viewSummary\");\n      });\n\n      if (this.state.deletedOutcomeIds.length > 0) {\n        axios.post('/editProgramSummary/deleteOutcomes', this.state.deletedOutcomeIds).then(function (res) {});\n      }\n\n      if (this.state.deletedMeasureIds.length > 0) {\n        axios.post('/editProgramSummary/deleteMeasures', this.state.deletedMeasureIds).then(function (res) {});\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.programSummary === null || this.state.curriculum === null || this.state.rubrics === null) {\n        return React.createElement(Loader, {\n          type: \"Oval\",\n          color: \"black\",\n          height: \"100\",\n          width: \"100\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 442\n          },\n          __self: this\n        });\n      } else {\n        var outcomes = '';\n\n        if (this.state.programSummary) {\n          outcomes = this.state.programSummary.outcomes;\n        }\n\n        var selectCourseList = this.state.curriculum.map(function (c) {\n          return React.createElement(\"option\", {\n            value: c.courseId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 458\n            },\n            __self: this\n          }, c.departmentCode + \" \" + c.courseCode + \" \" + c.name);\n        });\n        return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 463\n          },\n          __self: this\n        }, \"Edit Program Summary\"), React.createElement(OutcomeList, {\n          outcomes: outcomes,\n          handleOutcomeNameChange: this.handleOutcomeNameChange,\n          handleDeleteOutcome: this.handleDeleteOutcome,\n          handleOutcomeChange: this.handleOutcomeChange,\n          handleAddRubricMeasure: this.handleAddRubricMeasure,\n          handleAddTestMeasure: this.handleAddTestMeasure,\n          handleDeleteMeasure: this.handleDeleteMeasure,\n          selectCourseList: this.state.curriculum,\n          addCourse: this.addCourse,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 464\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          className: \"btn btn-primary mb-4\",\n          onClick: this.handleAddOutcome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 475\n          },\n          __self: this\n        }, \"Add Outcome\"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 476\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-success mb-4\",\n          onClick: this.handleSave,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 476\n          },\n          __self: this\n        }, \"Save Changes\")), this.state.showAddRubricMeasurePopup ? React.createElement(AddRubricMeasurePopup, {\n          closePopup: this.closePopup,\n          submit: this.addNewMeasure,\n          rubrics: this.state.rubrics,\n          handleInputChange: this.handleInputChange,\n          rubric: this.state.toolName,\n          measureName: this.state.measureName,\n          description: this.state.description,\n          targetScore: this.state.targetScore,\n          percentToReachTarget: this.state.percentToReachTarget,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 477\n          },\n          __self: this\n        }) : null, this.state.showAddTestMeasurePopup ? React.createElement(AddTestMeasurePopup, {\n          closePopup: this.closePopup,\n          submit: this.addNewMeasure,\n          handleInputChange: this.handleInputChange,\n          testName: this.state.toolName,\n          measureName: this.state.measureName,\n          description: this.state.description,\n          targetScore: this.state.targetScore,\n          percentToReachTarget: this.state.percentToReachTarget,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 488\n          },\n          __self: this\n        }) : null);\n      }\n    }\n  }]);\n\n  return EditProgramSummary;\n}(Component);\n\nexport { EditProgramSummary as default };","map":{"version":3,"sources":["/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/editProgramSummary/editProgramSummary.js"],"names":["React","Component","axios","Dropdown","DropdownButton","uuid","AddRubricMeasurePopup","AddTestMeasurePopup","Loader","OutcomeList","props","outcomes","map","currentOutcome","Outcome_ID","handleOutcomeChange","handleDeleteOutcome","handleOutcomeNameChange","handleAddRubricMeasure","handleAddTestMeasure","handleDeleteMeasure","selectCourseList","addCourse","Outcome","outcome","Outcome_Name","Description","measures","courses","Measures","measure","Measure_ID","outcomeId","Measure_Name","Percent_to_reach_target","Value_Name","Target_Score","Tool_Name","OutcomeCurriculum","allIds","c","courseId","usedIds","selectableIds","filter","includes","selectableCourses","departmentCode","courseCode","name","outcomeCourses","i","relevantHours","deleteCourseMapping","EditProgramSummary","bind","handleInputChange","handleAddOutcome","addNewMeasure","closePopup","handleSave","state","programSummary","curriculum","showAddRubricMeasurePopup","showAddTestMeasurePopup","outcomeIdOfNewMeasure","deletedOutcomeIds","deletedMeasureIds","rubrics","toolName","measureName","description","targetScore","percentToReachTarget","get","localStorage","getItem","then","res","setState","data","status","Rubric_Title","console","log","tempSummary","newId","push","e","outcomeIndex","findIndex","o","target","id","splice","tempDeletedOutcomeIds","newDescription","value","index","scale","Value_Number","alert","measureIndex","m","tempDeletedMeasureIds","rubricIndex","r","valueName","newMeasure","post","window","location","replace","length"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport uuid from 'uuid/v1';\nimport AddRubricMeasurePopup from './addRubricMeasurePopup';\nimport AddTestMeasurePopup from './addTestMeasurePopup';\nimport Loader from 'react-loader-spinner';\n\nconst OutcomeList = props => {\n\n    if(props.outcomes){\n        return props.outcomes.map(function(currentOutcome) {\n            return <Outcome \n                        key={currentOutcome.Outcome_ID} \n                        outcome={currentOutcome} \n                        handleOutcomeChange={props.handleOutcomeChange}\n                        handleDeleteOutcome={props.handleDeleteOutcome}\n                        handleOutcomeNameChange={props.handleOutcomeNameChange}\n                        handleAddRubricMeasure={props.handleAddRubricMeasure}\n                        handleAddTestMeasure={props.handleAddTestMeasure}\n                        handleDeleteMeasure={props.handleDeleteMeasure}\n                        selectCourseList={props.selectCourseList}\n                        addCourse={props.addCourse}\n                    />\n        })\n    }\n    else{\n        return null;\n    }\n}\n\nconst Outcome = props => {\n    return (\n        <div className=\"row\">\n            <div className=\"col border p-3\">\n                <input \n                    className=\"form-control\"\n                    type=\"text\" \n                    name={props.outcome.Outcome_ID}\n                    value={props.outcome.Outcome_Name} \n                    onChange={props.handleOutcomeNameChange}\n                />\n                <textarea \n                    className=\"form-control mb-3\" \n                    rows=\"7\"\n                    name={props.outcome.Outcome_ID} \n                    value={props.outcome.Description} \n                    onChange={props.handleOutcomeChange} \n                />\n                <button \n                    className=\"btn btn-danger\"\n                    id={props.outcome.Outcome_ID}\n                    onClick={props.handleDeleteOutcome}>\n                    Delete Outcome\n                </button>\n            </div>\n            <div className=\"col-8 border p-3\">\n                {props.outcome.measures[0] ? \n                    <Measures \n                        measures={props.outcome.measures} \n                        outcomeId={props.outcome.Outcome_ID}\n                        handleDeleteMeasure={props.handleDeleteMeasure} /> \n                    : null}\n                <DropdownButton id=\"dropdown-basic-button\" className=\"mb-3\" title=\"Add Measure\">\n                    <Dropdown.Item \n                        onSelect={props.handleAddTestMeasure}\n                        eventKey={props.outcome.Outcome_ID}>\n                        Add Test Measure\n                    </Dropdown.Item>\n                    <Dropdown.Item \n                        onSelect={props.handleAddRubricMeasure}\n                        eventKey={props.outcome.Outcome_ID}>\n                        Add Rubric Measure\n                    </Dropdown.Item>\n                </DropdownButton>\n                <details>\n                    <summary>Outcome's Curriculum Elements</summary>\n                    <OutcomeCurriculum \n                        courses={props.outcome.courses} \n                        outcomeId={props.outcome.Outcome_ID}\n                        selectCourseList={props.selectCourseList}\n                        addCourse={props.addCourse}/>\n                </details>\n            </div>\n        </div>\n    )\n}\n\nconst Measures = props => {\n    return props.measures.map(measure => {\n        return (\n            <div key={measure.Measure_ID}>\n                <p>\n                    <button \n                        className=\"btn btn-sm btn-danger mr-2\"\n                        name={props.outcomeId}\n                        id={measure.Measure_ID}\n                        onClick={props.handleDeleteMeasure}\n                        title=\"delete measure\">\n                    X\n                    </button>\n                    <span className=\"bold mr-3\"><strong>{measure.Measure_Name}</strong></span>\n                    {\"At least \" + (measure.Percent_to_reach_target * 100) + \"% of subjects score \" + \n                    (measure.Value_Name ? \"'\" + measure.Value_Name + \"'\" : \n                    (measure.Target_Score * 100) + \"%\") +\" or higher on \" + measure.Tool_Name + \".\"}\n                 </p>\n                {measure.Description ? \n                    <details className=\"ml-3 mb-3\">\n                        <summary>Additional description: </summary>\n                        <p className=\"ml-3\">{measure.Description}</p>\n                    </details> \n                    : null}\n            </div>\n        )\n    })\n}\n\nconst OutcomeCurriculum = props => {\n    let allIds = props.selectCourseList.map(c => {\n        return c.courseId;\n    })\n\n    let usedIds = props.courses.map(c => {\n        return c.courseId;\n    })\n\n    let selectableIds = allIds.filter(c => {\n        return !usedIds.includes(c);\n    })\n\n    let selectableCourses = props.selectCourseList.filter(c => {\n        return selectableIds.includes(c.courseId);\n    })\n    \n    let selectCourseList = selectableCourses.map(c => {\n        return <option value={c.courseId}>{c.departmentCode + \" \" + c.courseCode + \" \" + c.name}</option>\n    })\n\n    let outcomeCourses = props.courses.map((c, i) => {\n        return (\n            <div key={i} className=\"row\">\n                <div className=\"col-3\">\n                    {c.courseId !== \"\" ?\n                        c.departmentCode + \" \" + c.courseCode + \" \" + c.name\n                    : \n                    <p>It works</p>\n                    /* <select className=\"form-control\">\n                        {selectCourseList}\n                    </select> */}\n                </div>\n                <div className=\"col-2\">\n                    <input type=\"number\" min=\"0\" max=\"99\" value={c.relevantHours}\n                        title=\"Enter the number of hours in this course relevant to this outcome.\" />\n                </div>\n                <div className=\"col\">\n                    <button type=\"button\" className=\"btn btn-danger\" onClick={props.deleteCourseMapping}\n                        id={props.outcomeId} name={c.courseId}>\n                        Delete Element\n                    </button>\n                </div>\n            </div>\n        )\n    })\n\n    return (\n        <div className=\"mt-3\">\n            {outcomeCourses}\n            <button type=\"button\" className=\"btn btn-primary\" onClick={props.addCourse}\n                id={props.outcomeId}>\n                Add another course\n            </button>\n        </div>\n    )\n}\n\nexport default class EditProgramSummary extends Component\n{\n\n    constructor(props)\n    {\n        super(props);\n        this.handleAddRubricMeasure = this.handleAddRubricMeasure.bind(this);\n        this.handleAddTestMeasure = this.handleAddTestMeasure.bind(this);\n        this.handleOutcomeChange = this.handleOutcomeChange.bind(this);\n        this.handleOutcomeNameChange = this.handleOutcomeNameChange.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleAddOutcome = this.handleAddOutcome.bind(this);\n        this.addNewMeasure = this.addNewMeasure.bind(this);  \n        this.handleDeleteMeasure = this.handleDeleteMeasure.bind(this);\n        this.handleDeleteOutcome = this.handleDeleteOutcome.bind(this);\n        this.closePopup = this.closePopup.bind(this);\n        this.addCourse = this.addCourse.bind(this);\n        this.handleSave = this.handleSave.bind(this);\n        this.state = {\n            programSummary: null,\n            curriculum: null,\n            showAddRubricMeasurePopup: false,\n            showAddTestMeasurePopup: false,\n            outcomeIdOfNewMeasure: \"hello\",\n            deletedOutcomeIds: [],\n            deletedMeasureIds: [],\n            //The following values are passed to and manipulated in the addRubricMeasurePopups.\n            rubrics: null,\n            toolName: null,\n            measureName: 'Measure #',\n            //The following values are passed to both the addRubricMeasure and addTestMeasurePopups\n            description: null,\n            targetScore: 0,\n            percentToReachTarget: 0\n        }\n    }\n\n    componentDidMount()\n    {\n        \n        axios.get('/summaryReport/getSummary/' + localStorage.getItem(\"Cycle_Id\"))\n            .then(res => {\n                this.setState({\n                    programSummary: res.data.programSummary\n                })\n        })\n        axios.get('/rubric/getListWithScale/' + localStorage.getItem(\"Cycle_Id\"))\n            .then(res => {\n                if(res.data.status)\n                {\n                    this.setState({\n                        rubrics: res.data.rubrics,\n                        toolName: (res.data.rubrics[0].Rubric_Title ? res.data.rubrics[0].Rubric_Title : null)\n                    })\n                }\n        })\n        axios.get('/curriculum/getCurriculum/' + localStorage.getItem(\"Cycle_Id\"))\n            .then(res => {\n                console.log(res.data.curriculum);\n                this.setState({\n                    curriculum: res.data.curriculum\n                })\n            })\n    }\n\n    handleAddOutcome()\n    {\n        let tempSummary = this.state.programSummary;\n        let newId = uuid();\n        tempSummary.outcomes.push({\n            Outcome_ID: newId,\n            Outcome_Name: \"Outcome #\",\n            Description: \"Enter outcome description.\",\n            measures: []\n        })\n\n        this.setState({\n            programSummary: tempSummary\n        })\n    }\n\n    handleDeleteOutcome(e)\n    {\n        let tempSummary = this.state.programSummary\n        let outcomeIndex = tempSummary.outcomes.findIndex(o => o.Outcome_ID === e.target.id);\n        tempSummary.outcomes.splice(outcomeIndex, 1);\n\n        let tempDeletedOutcomeIds = this.state.deletedOutcomeIds;\n        tempDeletedOutcomeIds.push(e.target.id);\n\n        this.setState({\n            programSummary: tempSummary,\n            deletedOutcomeIds: tempDeletedOutcomeIds\n        })\n    }\n\n    handleOutcomeChange(e)\n    {\n        let newDescription = e.target.value;\n        let id = e.target.name;\n        let index = this.state.programSummary.outcomes.findIndex(o => o.Outcome_ID === id);\n        let tempSummary = this.state.programSummary;\n        tempSummary.outcomes[index].Description = newDescription;\n\n        this.setState({\n            programSummary: tempSummary\n        })\n    }\n\n    handleOutcomeNameChange(e)\n    {\n        let index = this.state.programSummary.outcomes.findIndex(o => o.Outcome_ID === e.target.name);\n        let tempSummary = this.state.programSummary;\n        tempSummary.outcomes[index].Outcome_Name = e.target.value;\n\n        this.setState({\n            programSummary: tempSummary\n        })\n    }\n\n    handleInputChange(e)\n    {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleAddTestMeasure(e)\n    {\n        this.setState({\n            showAddTestMeasurePopup: true,\n            targetScore: 0,\n            toolName: \"Test\",\n            outcomeIdOfNewMeasure: e\n        })\n    }\n\n    handleAddRubricMeasure(e)\n    {\n        if (this.state.rubrics)\n        {\n            this.setState({\n                showAddRubricMeasurePopup: true,\n                outcomeIdOfNewMeasure: e,\n                targetScore: this.state.rubrics[0].scale[0].Value_Number,\n                toolName: this.state.rubrics[0].Rubric_Title\n            })\n        }\n        else\n        {\n            alert(\"There are no rubrics associated with the current cycle. \\n\\nMigrate or create rubrics before making \" +\n            \"rubric measures.\");\n        }\n    }\n\n    handleDeleteMeasure(e)\n    {\n        let tempSummary = this.state.programSummary;\n        let outcomeIndex = tempSummary.outcomes.findIndex(o => o.Outcome_ID === e.target.name);\n        let measureIndex = tempSummary.outcomes[outcomeIndex].measures.findIndex(m => m.Measure_ID === e.target.id);\n        tempSummary.outcomes[outcomeIndex].measures.splice(measureIndex, 1);\n\n        let tempDeletedMeasureIds = this.state.deletedMeasureIds;\n        tempDeletedMeasureIds.push(e.target.id);\n\n        this.setState({\n            programSummary: tempSummary,\n            deletedMeasureIds: tempDeletedMeasureIds\n        })\n    }\n\n    closePopup(e)\n    {\n        this.setState({\n            showAddRubricMeasurePopup: false,\n            showAddTestMeasurePopup: false,\n            targetScore: 0,\n            toolName: \"\",\n        })\n    }\n\n    addNewMeasure(e)\n    {\n        let newId = uuid();\n\n        let rubricIndex = this.state.rubrics.findIndex(r => r.Rubric_Title === this.state.toolName);\n        let valueName = null;\n        let targetScore = this.state.targetScore;\n\n        if (rubricIndex > -1)\n        {\n            valueName = this.state.rubrics[rubricIndex].scale[this.state.targetScore - 1].Value_Name;\n        }\n        else\n        {\n            targetScore = targetScore / 100;\n        }\n\n        let newMeasure = {\n            Measure_ID: newId,\n            Measure_Name: this.state.measureName,\n            Description: (this.state.description ? this.state.description : null),\n            Percent_to_reach_target: (this.state.percentToReachTarget / 100),\n            Value_Name: valueName,\n            Target_Score: targetScore,\n            Tool_Name: this.state.toolName\n        }\n\n        let index = this.state.programSummary.outcomes.findIndex(o => o.Outcome_ID === this.state.outcomeIdOfNewMeasure);\n        let tempSummary = this.state.programSummary;\n        tempSummary.outcomes[index].measures.push(newMeasure);\n        this.setState({\n            programSummary: tempSummary,\n            showAddRubricMeasurePopup: false,\n            showAddTestMeasurePopup: false,\n            measureName: 'Measure #',\n            toolName: \"\",\n            description: null,\n            targetScore: 0,\n            percentToReachTarget: 0\n        })\n    }\n\n    addCourse(e)\n    {\n        let tempSummary = this.state.programSummary;\n        let outcomeIndex = tempSummary.outcomes.findIndex(o => o.Outcome_ID === e.target.id);\n\n        tempSummary.outcomes[outcomeIndex].courses.push({\n            departmentCode: \"\",\n            courseCode: \"\",\n            name: \"\",\n            relevantHours: 0,\n            courseId: \"\"\n        })\n\n        this.setState({\n            programSummary: tempSummary\n        })\n    }\n    \n    handleSave()\n    {\n        axios.post('/editProgramSummary/editProgramSummary', this.state.programSummary)\n            .then(res => {\n                window.location.replace(\"/viewSummary\");\n            })\n\n        if (this.state.deletedOutcomeIds.length > 0)\n        {\n            axios.post('/editProgramSummary/deleteOutcomes', this.state.deletedOutcomeIds)\n                .then(res => {})\n        }\n\n        if (this.state.deletedMeasureIds.length > 0)\n        {\n            axios.post('/editProgramSummary/deleteMeasures', this.state.deletedMeasureIds)\n                .then(res => {})\n        }\n    }\n\n    render()\n    {\n        if (this.state.programSummary === null || this.state.curriculum === null || this.state.rubrics === null)\n        {\n            return <Loader \n                type=\"Oval\"\n                color=\"black\"\n                height=\"100\"\t\n                width=\"100\"\n            />\n        }\n        else\n        {\n            var outcomes = '';\n        \n            if(this.state.programSummary){\n                outcomes=this.state.programSummary.outcomes \n            }\n\n            let selectCourseList = this.state.curriculum.map(c => {\n                return <option value={c.courseId}>{c.departmentCode + \" \" + c.courseCode + \" \" + c.name}</option>\n            })\n        \n            return (\n                <>\n                <h1>Edit Program Summary</h1>\n                <OutcomeList \n                    outcomes={outcomes}\n                    handleOutcomeNameChange={this.handleOutcomeNameChange}\n                    handleDeleteOutcome={this.handleDeleteOutcome}\n                    handleOutcomeChange={this.handleOutcomeChange}\n                    handleAddRubricMeasure={this.handleAddRubricMeasure}\n                    handleAddTestMeasure={this.handleAddTestMeasure}\n                    handleDeleteMeasure={this.handleDeleteMeasure}\n                    selectCourseList={this.state.curriculum} \n                    addCourse={this.addCourse}\n                />\n                <button className=\"btn btn-primary mb-4\" onClick={this.handleAddOutcome}>Add Outcome</button>\n                <div><button className=\"btn btn-success mb-4\" onClick={this.handleSave}>Save Changes</button></div>\n                {this.state.showAddRubricMeasurePopup ? <AddRubricMeasurePopup \n                                                            closePopup={this.closePopup} \n                                                            submit={this.addNewMeasure}\n                                                            rubrics={this.state.rubrics}\n                                                            handleInputChange={this.handleInputChange}\n                                                            rubric={this.state.toolName}\n                                                            measureName={this.state.measureName}\n                                                            description={this.state.description}\n                                                            targetScore={this.state.targetScore}\n                                                            percentToReachTarget={this.state.percentToReachTarget}\n                                                        /> : null}\n                {this.state.showAddTestMeasurePopup ? <AddTestMeasurePopup\n                                                            closePopup={this.closePopup}\n                                                            submit={this.addNewMeasure}\n                                                            handleInputChange={this.handleInputChange}\n                                                            testName={this.state.toolName}\n                                                            measureName={this.state.measureName}\n                                                            description={this.state.description}\n                                                            targetScore={this.state.targetScore}\n                                                            percentToReachTarget={this.state.percentToReachTarget}\n                                                        /> : null}\n                </>\n            )\n        }\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}