{"ast":null,"code":"import _defineProperty from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/createAssignment.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\"; //dummy data\n\nvar dummyOutcomeList = [{\n  Outcome_ID: 1,\n  Description: '',\n  measures: [{\n    Measure_ID: 1,\n    Description: ''\n  }]\n}];\nvar evalList = [{\n  email: '',\n  firstName: '',\n  lastName: ''\n}];\n\nfunction SelectOutcome(props) {\n  return props.outcomeList.map(function (outcome, index) {\n    return React.createElement(\"option\", {\n      key: outcome.Outcome_ID,\n      value: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, outcome.Description);\n  });\n}\n\nfunction SelectMeasure(props) {\n  return props.measureList.map(function (measure) {\n    return React.createElement(\"option\", {\n      key: measure.Measure_ID,\n      value: measure.Measure_ID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, measure.Measure_ID);\n  });\n}\n\nfunction SelectEvaluator(props) {\n  return props.evaluatorList.map(function (e) {\n    return React.createElement(\"option\", {\n      key: e.email,\n      value: e.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, e.firstName + ' ' + e.lastName);\n  });\n}\n\nfunction ManualStudentEntry(props) {\n  return props.formData.map(function (d, index) {\n    return React.createElement(\"div\", {\n      key: index,\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Full Name:\"), React.createElement(\"input\", {\n      className: \"form-control\",\n      id: index,\n      name: \"subjectName\",\n      value: props.formData[index].subjectName,\n      onChange: props.onChange,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Unique Identifier:\"), React.createElement(\"input\", {\n      className: \"form-control\",\n      id: index,\n      name: \"subjectId\",\n      value: props.formData[index].subjectId,\n      onChange: props.onChange,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })));\n  });\n}\n\nfunction manualStudentEntryToString(list) {\n  var studentList = \"\";\n  list.forEach(function (i) {\n    studentList += i.subjectName + \",\" + i.subjectId + \"\\n\";\n  });\n  return studentList;\n}\n\nvar CreateAssignment =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateAssignment, _Component);\n\n  function CreateAssignment(props) {\n    var _this;\n\n    _classCallCheck(this, CreateAssignment);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateAssignment).call(this, props));\n    _this.handleSelectOutcome = _this.handleSelectOutcome.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSelectMeasure = _this.handleSelectMeasure.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateManualStudentEntry = _this.updateManualStudentEntry.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addStudent = _this.addStudent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changeFile = _this.changeFile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.fileInput = React.createRef();\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      outcomeList: dummyOutcomeList,\n      evaluatorList: evalList,\n      selectedOutcomeIndex: 0,\n      selectedMeasure: undefined,\n      selectedEvaluator: '',\n      showFileAlert: false,\n      manualStudentEntry: []\n    };\n    return _this;\n  }\n\n  _createClass(CreateAssignment, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('/assignments/outcomesAndMeasures').then(function (res) {\n        _this2.setState({\n          outcomeList: res.data.outcomeList,\n          selectedMeasure: res.data.outcomeList[0].measures[0].Measure_ID\n        });\n      });\n      axios.get('/evaluators/evaluatorList/' + localStorage.getItem(\"dept_Id\")).then(function (res) {\n        _this2.setState({\n          evaluatorList: res.data.evaluatorList,\n          selectedOutcomeIndex: 0,\n          selectedEvaluator: res.data.evaluatorList[0].email\n        });\n      });\n    }\n  }, {\n    key: \"handleSelectOutcome\",\n    value: function handleSelectOutcome(e) {\n      this.setState({\n        selectedOutcomeIndex: e.target.value,\n        selectedMeasure: this.state.outcomeList[e.target.value].measures[0].Measure_ID\n      });\n    }\n  }, {\n    key: \"handleSelectMeasure\",\n    value: function handleSelectMeasure(e) {\n      this.setState({\n        selectedMeasure: e.target.value\n      });\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"changeFile\",\n    value: function changeFile(e) {\n      if (!(this.fileInput.current.files[0].type === \"text/csv\")) {\n        this.setState({\n          showFileAlert: true\n        });\n      } else {\n        this.setState({\n          showFileAlert: false\n        });\n      }\n    }\n  }, {\n    key: \"updateManualStudentEntry\",\n    value: function updateManualStudentEntry(e) {\n      var index = e.target.id;\n      var tempManualEntry = this.state.manualStudentEntry;\n\n      if (e.target.name === \"subjectName\") {\n        tempManualEntry[index].subjectName = e.target.value;\n      } else if (e.target.name === \"subjectId\") {\n        tempManualEntry[index].subjectId = e.target.value;\n      }\n\n      this.setState({\n        manualStudentEntry: tempManualEntry\n      });\n    }\n  }, {\n    key: \"addStudent\",\n    value: function addStudent(e) {\n      var tempManualEntry = this.state.manualStudentEntry;\n      tempManualEntry.push({\n        subjectName: '',\n        subjectId: ''\n      });\n      this.setState({\n        manualStudentEntry: tempManualEntry\n      });\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      var _this3 = this;\n\n      console.log(\"Entered on submit\");\n      e.preventDefault();\n\n      if (this.fileInput.current.files[0]) {\n        var fileReader = new FileReader();\n\n        fileReader.onloadend = function (e) {\n          var assignment = {\n            Measure_ID: _this3.state.selectedMeasure,\n            User_Email: _this3.state.selectedEvaluator,\n            studentList: fileReader.result + (_this3.state.manualStudentEntry !== '' ? \"\\n\" + manualStudentEntryToString(_this3.state.manualStudentEntry) : null)\n          };\n          console.log(assignment);\n          axios.post('/assignments/createAssignment', assignment).then(function (res) {\n            if (res.data.status) {\n              alert(res.data.message);\n\n              _this3.setState({\n                selectedMeasure: _this3.state.outcomeList[0].measures[0].Measure_ID,\n                selectedEvaluator: _this3.state.evaluatorList[0].email\n              });\n            }\n          });\n        };\n\n        fileReader.readAsText(this.fileInput.current.files[0]);\n      } else {\n        var assignment = {\n          Measure_ID: this.state.selectedMeasure,\n          User_Email: this.state.selectedEvaluator,\n          studentList: \"Name,ID\\n\" + manualStudentEntryToString(this.state.manualStudentEntry)\n        };\n        axios.post('/assignments/createAssignment', assignment).then(function (res) {\n          if (res.data.status) {\n            alert(res.data.message);\n\n            _this3.setState({\n              selectedMeasure: _this3.state.outcomeList[0].measures[0].Measure_ID,\n              selectedEvaluator: _this3.state.evaluatorList[0].email\n            });\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"Create Assignment\"), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"Select Outcome: \"), React.createElement(\"select\", {\n        className: \"form-control\",\n        value: this.state.selectedOutcomeIndex,\n        onChange: this.handleSelectOutcome,\n        onClick: this.handleSelectOutcome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(SelectOutcome, {\n        outcomeList: this.state.outcomeList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \"Select Measure: \"), React.createElement(\"select\", {\n        className: \"form-control\",\n        value: this.state.selectedMeasure,\n        onChange: this.handleSelectMeasure,\n        onClick: this.handleSelectMeasure,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(SelectMeasure, {\n        onChange: true,\n        measureList: this.state.outcomeList[this.state.selectedOutcomeIndex].measures,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"Select Evaluator: \"), React.createElement(\"select\", {\n        className: \"form-control\",\n        value: this.state.selectedEvaluator,\n        name: \"selectedEvaluator\",\n        onChange: this.handleInputChange,\n        onClick: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(SelectEvaluator, {\n        evaluatorList: this.state.evaluatorList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"Upload list of subjects as .csv file: \"), React.createElement(\"input\", {\n        type: \"file\",\n        className: \"form-control-file\",\n        ref: this.fileInput,\n        onChange: this.changeFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }), this.state.showFileAlert ? React.createElement(\"p\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, \"Invalid File\") : null), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(ManualStudentEntry, {\n        formData: this.state.manualStudentEntry,\n        onChange: this.updateManualStudentEntry,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-secondary mb-4\",\n        type: \"button\",\n        onClick: this.addStudent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \"Add Student Manually\")), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"submit\",\n        className: \"btn btn-primary\",\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CreateAssignment;\n}(Component);\n\nexport { CreateAssignment as default };","map":{"version":3,"sources":["/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/createAssignment.js"],"names":["React","Component","axios","dummyOutcomeList","Outcome_ID","Description","measures","Measure_ID","evalList","email","firstName","lastName","SelectOutcome","props","outcomeList","map","outcome","index","SelectMeasure","measureList","measure","SelectEvaluator","evaluatorList","e","ManualStudentEntry","formData","d","subjectName","onChange","subjectId","manualStudentEntryToString","list","studentList","forEach","i","CreateAssignment","handleSelectOutcome","bind","handleSelectMeasure","handleInputChange","updateManualStudentEntry","addStudent","changeFile","fileInput","createRef","onSubmit","state","selectedOutcomeIndex","selectedMeasure","undefined","selectedEvaluator","showFileAlert","manualStudentEntry","get","then","res","setState","data","localStorage","getItem","target","value","name","current","files","type","id","tempManualEntry","push","console","log","preventDefault","fileReader","FileReader","onloadend","assignment","User_Email","result","post","status","alert","message","readAsText"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from \"axios\";\n\n//dummy data\nvar dummyOutcomeList = [{ Outcome_ID: 1, Description: '', measures: [{ Measure_ID: 1, Description: ''}]}];\nvar evalList = [{ email: '', firstName: '', lastName: ''}];\n\nfunction SelectOutcome(props)\n{\n    return props.outcomeList.map((outcome, index) => {\n        return <option key={outcome.Outcome_ID} value={index}>{outcome.Description}</option>\n    })\n}\n\nfunction SelectMeasure(props)\n{\n    return props.measureList.map(measure => {\n        return <option key={measure.Measure_ID} value={measure.Measure_ID}>{measure.Measure_ID}</option>\n    })\n}\n\nfunction SelectEvaluator(props)\n{\n    return props.evaluatorList.map(e => {\n        return <option key={e.email} value={e.email}>{e.firstName + ' ' + e.lastName}</option>\n    })\n}\n\nfunction ManualStudentEntry(props)\n{\n    return props.formData.map((d, index) => {\n        return (\n            <div key={index} className=\"row\">\n                <div className=\"col-5\">\n                    <span>Full Name:</span>\n                    <input \n                        className=\"form-control\" \n                        id={index}\n                        name=\"subjectName\" \n                        value={props.formData[index].subjectName}\n                        onChange={props.onChange} \n                        type=\"text\" \n                    />\n                </div>\n                <div className=\"col-5\">\n                    <span>Unique Identifier:</span>\n                    <input \n                        className=\"form-control\" \n                        id={index}\n                        name=\"subjectId\" \n                        value={props.formData[index].subjectId}\n                        onChange={props.onChange} \n                        type=\"text\" \n                    />\n                </div>\n            </div>\n        )\n    })\n}\n\nfunction manualStudentEntryToString(list)\n{\n    let studentList = \"\";\n\n    list.forEach(i => {\n        studentList += i.subjectName + \",\" + i.subjectId + \"\\n\";\n    })\n\n    return studentList;\n}\n\nexport default class CreateAssignment extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.handleSelectOutcome = this.handleSelectOutcome.bind(this);\n        this.handleSelectMeasure = this.handleSelectMeasure.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.updateManualStudentEntry = this.updateManualStudentEntry.bind(this);\n        this.addStudent = this.addStudent.bind(this);\n        this.changeFile = this.changeFile.bind(this);\n        this.fileInput = React.createRef();\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            outcomeList: dummyOutcomeList,\n            evaluatorList: evalList,\n            selectedOutcomeIndex: 0,\n            selectedMeasure: undefined,\n            selectedEvaluator: '',\n            showFileAlert: false,\n            manualStudentEntry: []\n        }\n    }\n\n    componentDidMount()\n    {\n        axios.get('/assignments/outcomesAndMeasures')\n            .then(res => {\n                this.setState({\n                    outcomeList: res.data.outcomeList,\n                    selectedMeasure: res.data.outcomeList[0].measures[0].Measure_ID,\n                })\n            })\n        axios.get('/evaluators/evaluatorList/' + localStorage.getItem(\"dept_Id\"))\n            .then(res => {\n                this.setState({\n                    evaluatorList: res.data.evaluatorList,\n                    selectedOutcomeIndex: 0,\n                    selectedEvaluator: res.data.evaluatorList[0].email\n                })\n            })\n    }\n\n    handleSelectOutcome(e)\n    {\n        this.setState({\n            selectedOutcomeIndex: e.target.value,\n            selectedMeasure: this.state.outcomeList[e.target.value].measures[0].Measure_ID\n        })\n    }\n\n    handleSelectMeasure(e)\n    {\n        this.setState({\n            selectedMeasure: e.target.value\n        })\n    }\n\n    handleInputChange(e)\n    {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    changeFile(e)\n    {\n        if (!(this.fileInput.current.files[0].type === \"text/csv\"))\n        {\n            this.setState({\n                showFileAlert: true\n            })\n        }\n        else\n        {\n            this.setState({\n                showFileAlert: false\n            })\n        }\n    }\n\n    updateManualStudentEntry(e)\n    {\n        let index = e.target.id;\n        let tempManualEntry = this.state.manualStudentEntry;\n\n        if(e.target.name === \"subjectName\")\n        {\n            tempManualEntry[index].subjectName = e.target.value\n        }\n        else if (e.target.name === \"subjectId\")\n        {\n            tempManualEntry[index].subjectId = e.target.value\n        }\n\n        this.setState({\n            manualStudentEntry: tempManualEntry\n        })\n    }\n\n    addStudent(e)\n    {\n        let tempManualEntry = this.state.manualStudentEntry;\n        tempManualEntry.push({\n            subjectName: '',\n            subjectId: ''\n        })\n\n        this.setState({\n            manualStudentEntry: tempManualEntry\n        })\n    }\n\n    onSubmit(e)\n    {\n        console.log(\"Entered on submit\");\n        e.preventDefault();\n\n        if (this.fileInput.current.files[0])\n        {\n            let fileReader = new FileReader();\n            fileReader.onloadend = e => {\n                let assignment = {\n                    Measure_ID: this.state.selectedMeasure,\n                    User_Email: this.state.selectedEvaluator,\n                    studentList: fileReader.result + \n                    (this.state.manualStudentEntry !== '' ? \"\\n\" + manualStudentEntryToString(this.state.manualStudentEntry) : null)\n                }\n\n                console.log(assignment);\n                \n                axios.post('/assignments/createAssignment', assignment)\n                    .then(res =>  {\n                        if (res.data.status)\n                        {\n                            alert(res.data.message);\n                            this.setState({\n                                selectedMeasure: this.state.outcomeList[0].measures[0].Measure_ID,\n                                selectedEvaluator: this.state.evaluatorList[0].email\n                            })\n                        }\n                    });\n            }\n            fileReader.readAsText(this.fileInput.current.files[0]);\n        }\n        else\n        {\n            let assignment = {\n                Measure_ID: this.state.selectedMeasure,\n                User_Email: this.state.selectedEvaluator,\n                studentList: \"Name,ID\\n\" + manualStudentEntryToString(this.state.manualStudentEntry)\n            }\n\n            axios.post('/assignments/createAssignment', assignment)\n                .then(res =>  {\n                    if (res.data.status)\n                    {\n                        alert(res.data.message);\n                        this.setState({\n                            selectedMeasure: this.state.outcomeList[0].measures[0].Measure_ID,\n                            selectedEvaluator: this.state.evaluatorList[0].email\n                        })\n                    }\n                });\n        }\n    }\n\n    render()\n    {\n        return(\n            <form onSubmit={this.onSubmit}>\n                <h1>Create Assignment</h1>\n                <div className=\"form-group\">\n                    <label>Select Outcome: </label>\n                    <select className=\"form-control\" value={this.state.selectedOutcomeIndex} \n                            onChange={this.handleSelectOutcome} onClick={this.handleSelectOutcome}>\n                        <SelectOutcome outcomeList={this.state.outcomeList} />\n                    </select>\n                </div>\n                <div className=\"form-group\">\n                    <label>Select Measure: </label>\n                    <select className=\"form-control\" value={this.state.selectedMeasure}\n                            onChange={this.handleSelectMeasure} onClick={this.handleSelectMeasure}>\n                        <SelectMeasure onChange measureList={this.state.outcomeList[this.state.selectedOutcomeIndex].measures} />\n                    </select>\n                </div>\n                <div className=\"form-group\">\n                    <label>Select Evaluator: </label>\n                    <select className=\"form-control\" value={this.state.selectedEvaluator} name=\"selectedEvaluator\"\n                            onChange={this.handleInputChange} onClick={this.handleInputChange}>\n                        <SelectEvaluator evaluatorList={this.state.evaluatorList} />\n                    </select>\n                </div>\n                <div className=\"form-group\">\n                    <label>Upload list of subjects as .csv file: </label>\n                    <input type=\"file\" className=\"form-control-file\" ref={this.fileInput} onChange={this.changeFile} />\n                    {this.state.showFileAlert ? <p className=\"text-danger\">Invalid File</p>: null}\n                </div>\n                <div className=\"form-group\">\n                    <ManualStudentEntry formData={this.state.manualStudentEntry} onChange={this.updateManualStudentEntry} />\n                </div>\n                <div>\n                    <button className=\"btn btn-secondary mb-4\" type=\"button\" \n                    onClick={this.addStudent}>Add Student Manually</button>\n                </div>\n                <input type=\"submit\" value=\"submit\" className=\"btn btn-primary\" onClick={this.onSubmit} />\n            </form>\n        )\n    }\n\n}\n\n"]},"metadata":{},"sourceType":"module"}