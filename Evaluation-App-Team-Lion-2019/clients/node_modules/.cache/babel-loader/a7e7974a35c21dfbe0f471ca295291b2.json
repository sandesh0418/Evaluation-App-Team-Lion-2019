{"ast":null,"code":"import _defineProperty from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/createRubric.js\";\nimport React, { Component } from 'react';\nimport { Jumbotron, Container } from 'react-bootstrap';\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nvar CreateRubric =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateRubric, _Component);\n\n  function CreateRubric(props) {\n    var _this;\n\n    _classCallCheck(this, CreateRubric);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateRubric).call(this, props));\n\n    _this.onChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.id, e.target.value));\n    };\n\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      columns: 0,\n      rows: 0,\n      rubricTitle: \"\",\n      errors: {}\n    };\n    return _this;\n  }\n\n  _createClass(CreateRubric, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.errors) {\n        this.setState({\n          errors: nextProps.errors\n        });\n      }\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault();\n      localStorage.setItem(\"columns\", this.state.columns);\n      localStorage.setItem(\"rows\", this.state.rows);\n      var obj = {\n        columns: this.state.columns,\n        rows: this.state.rows,\n        rubricTitle: this.state.rubricTitle\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var errors = this.state.errors;\n      return React.createElement(Jumbotron, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Create a new rubric\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-field col s8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: \"rubricTitle\",\n        onChange: this.onChange,\n        value: this.state.rubricTitle,\n        errors: errors.rubricTitle,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Rubric Title\"), React.createElement(\"span\", {\n        className: \"red-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, errors.rubricTitle)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"input-field col s8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: this.state.columns,\n        error: errors.columns,\n        id: \"columns\",\n        type: \"number\",\n        className: classnames(\"\", {\n          invalid: errors.columns\n        }),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Number of Columns\"), React.createElement(\"span\", {\n        className: \"red-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, errors.columns)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"input-field col s8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: this.state.rows,\n        error: errors.rows,\n        id: \"rows\",\n        type: \"number\",\n        className: classnames(\"\", {\n          invalid: errors.rows\n        }),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Number of Rows\"), React.createElement(\"span\", {\n        className: \"red-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, errors.rows)), React.createElement(\"div\", {\n        className: \"col s12\",\n        style: {\n          paddingLeft: \"11.250px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        style: {\n          width: \"150px\",\n          borderRadius: \"3px\",\n          letterSpacing: \"1.5px\",\n          marginTop: \"1rem\"\n        },\n        type: \"submit\",\n        className: \"btn btn-large waves-effect waves-light hoverable blue accent-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Create\")))));\n    }\n  }]);\n\n  return CreateRubric;\n}(Component);\n\nCreateRubric.propTypes = {\n  errors: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps)(CreateRubric);","map":{"version":3,"sources":["/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/createRubric.js"],"names":["React","Component","Jumbotron","Container","classnames","PropTypes","connect","CreateRubric","props","onChange","e","setState","target","id","value","bind","onSubmit","state","columns","rows","rubricTitle","errors","nextProps","preventDefault","localStorage","setItem","obj","invalid","paddingLeft","width","borderRadius","letterSpacing","marginTop","propTypes","object","isRequired","auth","mapStateToProps"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAmBC,SAAnB,QAAoC,iBAApC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAGMC,Y;;;;;AAEF,wBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,sFAAMA,KAAN;;AADc,UAqBlBC,QArBkB,GAqBP,UAAAC,CAAC,EAAI;AACZ,YAAKC,QAAL,qBAAiBD,CAAC,CAACE,MAAF,CAASC,EAA1B,EAA+BH,CAAC,CAACE,MAAF,CAASE,KAAxC;AACD,KAvBe;;AAEd,UAAKL,QAAL,GAAgB,MAAKA,QAAL,CAAcM,IAAd,uDAAhB;AACA,UAAKC,QAAL,GAAgB,MAAKP,QAAL,CAAcM,IAAd,uDAAhB;AACA,UAAKE,KAAL,GAAW;AACPC,MAAAA,OAAO,EAAG,CADH;AAEPC,MAAAA,IAAI,EAAE,CAFC;AAGPC,MAAAA,WAAW,EAAE,EAHN;AAIPC,MAAAA,MAAM,EAAE;AAJD,KAAX;AAJc;AAWjB;;;;8CAEyBC,S,EAAW;AACjC,UAAIA,SAAS,CAACD,MAAd,EAAsB;AACpB,aAAKV,QAAL,CAAc;AACZU,UAAAA,MAAM,EAAEC,SAAS,CAACD;AADN,SAAd;AAGD;AACF;;;6BAMQX,C,EAAE;AACPA,MAAAA,CAAC,CAACa,cAAF;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAA+B,KAAKR,KAAL,CAAWC,OAA1C;AACAM,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6B,KAAKR,KAAL,CAAWE,IAAxC;AAEA,UAAMO,GAAG,GAAE;AACPR,QAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OADb;AAEPC,QAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE,IAFV;AAGPC,QAAAA,WAAW,EAAE,KAAKH,KAAL,CAAWG;AAHjB,OAAX;AAOH;;;6BAIP;AAAA,UACYC,MADZ,GACuB,KAAKJ,KAD5B,CACYI,MADZ;AAEA,aACA,oBAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIC;AAAM,QAAA,QAAQ,EAAE,KAAKL,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACH;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AACQ,QAAA,EAAE,EAAC,aADX;AAEQ,QAAA,QAAQ,EAAE,KAAKP,QAFvB;AAGQ,QAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWG,WAH1B;AAIQ,QAAA,MAAM,EAAEC,MAAM,CAACD,WAJvB;AAKQ,QAAA,QAAQ,MALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAOY;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPZ,EAQgB;AAAM,QAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,MAAM,CAACD,WADV,CARhB,CADG,EAcH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdG,EAeC;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACY;AACE,QAAA,QAAQ,EAAE,KAAKX,QADjB;AAEE,QAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWC,OAFpB;AAGE,QAAA,KAAK,EAAEG,MAAM,CAACH,OAHhB;AAIE,QAAA,EAAE,EAAC,SAJL;AAKE,QAAA,IAAI,EAAC,QALP;AAME,QAAA,SAAS,EAAEd,UAAU,CAAC,EAAD,EAAK;AACxBuB,UAAAA,OAAO,EAAEN,MAAM,CAACH;AADQ,SAAL,CANvB;AASA,QAAA,QAAQ,MATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADZ,EAWY;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAXZ,EAYY;AAAM,QAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGG,MAAM,CAACH,OADV,CAZZ,CAfD,EAgCW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhCX,EAkCC;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACY;AACE,QAAA,QAAQ,EAAE,KAAKT,QADjB;AAEE,QAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWE,IAFpB;AAGE,QAAA,KAAK,EAAEE,MAAM,CAACF,IAHhB;AAIE,QAAA,EAAE,EAAC,MAJL;AAKE,QAAA,IAAI,EAAC,QALP;AAME,QAAA,SAAS,EAAEf,UAAU,CAAC,EAAD,EAAK;AACxBuB,UAAAA,OAAO,EAAEN,MAAM,CAACF;AADQ,SAAL,CANvB;AASA,QAAA,QAAQ,MATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADZ,EAWY;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAXZ,EAYY;AAAM,QAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGE,MAAM,CAACF,IADV,CAZZ,CAlCD,EAoDW;AAAK,QAAA,SAAS,EAAC,SAAf;AAAyB,QAAA,KAAK,EAAE;AAAES,UAAAA,WAAW,EAAE;AAAf,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,OADF;AAELC,UAAAA,YAAY,EAAE,KAFT;AAGLC,UAAAA,aAAa,EAAE,OAHV;AAILC,UAAAA,SAAS,EAAE;AAJN,SADT;AAOE,QAAA,IAAI,EAAC,QAPP;AAQE,QAAA,SAAS,EAAC,gEARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CApDX,CAJD,CADF,CADA;AA6EC;;;;EA1H0B/B,S;;AA4H3BM,YAAY,CAAC0B,SAAb,GAAuB;AAEnBZ,EAAAA,MAAM,EAAEhB,SAAS,CAAC6B,MAAV,CAAiBC,UAFN;AAGnBC,EAAAA,IAAI,EAAE/B,SAAS,CAAC6B,MAAV,CAAiBC;AAHJ,CAAvB;;AAOA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAApB,KAAK;AAAA,SAAK;AAC7BmB,IAAAA,IAAI,EAAEnB,KAAK,CAACmB,IADiB;AAE7Bf,IAAAA,MAAM,EAAEJ,KAAK,CAACI;AAFe,GAAL;AAAA,CAA7B;;AAKA,eAAef,OAAO,CAAC+B,eAAD,CAAP,CAAyB9B,YAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Jumbotron,Container } from 'react-bootstrap';\nimport classnames from \"classnames\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\n\nclass CreateRubric extends Component{\n\n    constructor(props){\n        super(props);\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onChange.bind(this);\n        this.state={\n            columns : 0,\n            rows: 0,\n            rubricTitle: \"\",\n            errors: {}\n\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n          this.setState({\n            errors: nextProps.errors\n          });\n        }\n      }\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n      };\n\n      onSubmit(e){\n          e.preventDefault();\n          localStorage.setItem(\"columns\",this.state.columns);\n          localStorage.setItem(\"rows\", this.state.rows);\n\n          const obj ={\n              columns: this.state.columns,\n              rows: this.state.rows,\n              rubricTitle: this.state.rubricTitle\n          }\n\n          \n      }\n\n\nrender()\n{\n    const { errors } = this.state;\nreturn(\n<Jumbotron fluid>\n  <Container>\n    <h1>Create a new rubric</h1>\n    <br />\n    <br />\n   <form onSubmit={this.onSubmit}>\n<div className=\"input-field col s8\">\n    <input type=\"text\"\n            id=\"rubricTitle\"\n            onChange={this.onChange}\n            value={this.state.rubricTitle}\n            errors={errors.rubricTitle}\n            required/>\n            <label htmlFor=\"number\">Rubric Title</label>\n                <span className=\"red-text\">\n                  {errors.rubricTitle}\n                  \n                </span>\n</div>\n<br />\n    <div className=\"input-field col s8\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.columns}\n                  error={errors.columns}\n                  id=\"columns\"\n                  type=\"number\"\n                  className={classnames(\"\", {\n                    invalid: errors.columns\n                  })}\n                required/>\n                <label htmlFor=\"number\">Number of Columns</label>\n                <span className=\"red-text\">\n                  {errors.columns}\n                  \n                </span>\n              </div>\n              <br />\n    \n    <div className=\"input-field col s8\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.rows}\n                  error={errors.rows}\n                  id=\"rows\"\n                  type=\"number\"\n                  className={classnames(\"\", {\n                    invalid: errors.rows\n                  })}\n                required/>\n                <label htmlFor=\"number\">Number of Rows</label>\n                <span className=\"red-text\">\n                  {errors.rows}\n                  \n                </span>\n              </div>\n\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                >\n                  Create\n                </button>\n              </div>\n              </form>\n  </Container>\n</Jumbotron>\n)\n\n}\n}\nCreateRubric.propTypes={\n \n    errors: PropTypes.object.isRequired,\n    auth: PropTypes.object.isRequired\n\n}\n\nconst mapStateToProps = state => ({\n     auth: state.auth,\n     errors: state.errors,\n     \n})\nexport default connect(mapStateToProps)(CreateRubric);"]},"metadata":{},"sourceType":"module"}