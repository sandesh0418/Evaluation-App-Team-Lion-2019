{"ast":null,"code":"import _classCallCheck from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/editProgramSummary/addTestMeasurePopup.js\";\nimport React, { Component } from 'react';\nimport './popup.css';\n/**\n * Props:\n * -closePopup: a function to close the popup.\n * -submit: a function to save the changes to the measure.\n * -handleInputChange: a function to take inputs by name and update their state.\n * -description: the description that will be in the new measure\n * -targetScore: the target score of the new measure\n * -percentToReachTarget: the percent to reach to the target score\n */\n\nvar AddTestMeasurePopup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddTestMeasurePopup, _Component);\n\n  function AddTestMeasurePopup(props) {\n    _classCallCheck(this, AddTestMeasurePopup);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AddTestMeasurePopup).call(this, props));\n  }\n\n  _createClass(AddTestMeasurePopup, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"popup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"popup_inner p-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Define Test Measure\"), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Description of new measure:\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"At least \" + this.props.percentToReachTarget + \"% of subjects score a \" + this.props.targetScore + \"% or higher on \" + this.props.testName + \".\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"Enter Test Name: \"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"toolName\",\n        value: this.props.testName,\n        onChange: this.props.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"(Optional) Enter Additional Information: \"), React.createElement(\"textarea\", {\n        className: \"form-control\",\n        rows: \"7\",\n        name: \"description\",\n        placeholder: \"(Optional) Add additional information.\",\n        value: this.props.description,\n        onChange: this.props.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Enter target score: \"), React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control bg-sm\",\n        name: \"targetScore\",\n        value: this.props.targetScore,\n        onChange: this.props.handleInputChange,\n        min: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Enter percent to achieve score: \"), React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        name: \"percentToReachTarget\",\n        value: this.props.percentToReachTarget,\n        onChange: this.props.handleInputChange,\n        min: \"0\",\n        max: \"100\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }))), React.createElement(\"button\", {\n        className: \"btn btn-primary mr-4\",\n        name: \"testMeasure\",\n        onClick: this.props.submit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        className: \"btn btn-danger mr-4\",\n        onClick: this.props.closePopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Cancel\")));\n    }\n  }]);\n\n  return AddTestMeasurePopup;\n}(Component);\n\nexport { AddTestMeasurePopup as default };","map":{"version":3,"sources":["/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/editProgramSummary/addTestMeasurePopup.js"],"names":["React","Component","AddTestMeasurePopup","props","percentToReachTarget","targetScore","testName","handleInputChange","description","submit","closePopup"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './popup.css';\n\n/**\n * Props:\n * -closePopup: a function to close the popup.\n * -submit: a function to save the changes to the measure.\n * -handleInputChange: a function to take inputs by name and update their state.\n * -description: the description that will be in the new measure\n * -targetScore: the target score of the new measure\n * -percentToReachTarget: the percent to reach to the target score\n */\n\nexport default class AddTestMeasurePopup extends Component\n{\n    constructor(props)\n    {\n      super(props);\n    }\n\n    render() {\n        return (\n          <div className='popup'>\n            <div className='popup_inner p-4'>\n              <h1>Define Test Measure</h1>\n              <label>Description of new measure:</label>\n              <p>\n                {\"At least \" + this.props.percentToReachTarget + \"% of subjects score a \" + \n                this.props.targetScore + \"% or higher on \" + this.props.testName + \".\"}\n              </p>\n              <form>\n                <div className=\"form-group\">\n                  <label>Enter Test Name: </label>\n                  <input \n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"toolName\"\n                    value={this.props.testName}\n                    onChange={this.props.handleInputChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>(Optional) Enter Additional Information: </label>\n                  <textarea \n                    className=\"form-control\" \n                    rows=\"7\"\n                    name=\"description\"\n                    placeholder=\"(Optional) Add additional information.\"\n                    value={this.props.description}\n                    onChange={this.props.handleInputChange} \n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Enter target score: </label>\n                  <input \n                    type=\"number\" \n                    className=\"form-control bg-sm\"\n                    name=\"targetScore\"\n                    value={this.props.targetScore} \n                    onChange={this.props.handleInputChange}\n                    min=\"0\" />\n                </div>\n                <div className=\"form-group\">\n                  <label>Enter percent to achieve score: </label>\n                  <input \n                    type=\"number\" \n                    className=\"form-control\"\n                    name=\"percentToReachTarget\"\n                    value={this.props.percentToReachTarget}\n                    onChange={this.props.handleInputChange} \n                    min=\"0\" \n                    max=\"100\" />\n                </div>\n              </form>\n              <button\n                className=\"btn btn-primary mr-4\" \n                name=\"testMeasure\"\n                onClick={this.props.submit}>\n                Submit\n              </button>\n              <button \n                className=\"btn btn-danger mr-4\" \n                onClick={this.props.closePopup}>\n                Cancel\n              </button>\n            </div>\n          </div>\n        );\n      }\n}"]},"metadata":{},"sourceType":"module"}