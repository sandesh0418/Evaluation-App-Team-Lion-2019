{"ast":null,"code":"import _defineProperty from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/createAssignment.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\n/*dummy data\nvar out1mea1 = {\n    Measure_ID: 1,\n    Description: ''\n}\n\nvar out1 = {\n    Outcome_ID: 1,\n    Description: '',\n    measures: [out1mea1]\n}\n\nvar dummyOutcomeList = [out1];\n\nvar eval3 = {\n    email: '',\n    firstName: '',\n    lastName: ''\n}\n\nvar evalList = [eval3];\n*/\n\nfunction SelectOutcome(props) {\n  return props.outcomeList.map(function (outcome, index) {\n    return React.createElement(\"option\", {\n      key: outcome.Outcome_ID,\n      value: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, outcome.Description);\n  });\n}\n\nfunction SelectMeasure(props) {\n  return props.measureList.map(function (measure) {\n    return React.createElement(\"option\", {\n      key: measure.Measure_ID,\n      value: measure.Measure_ID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, measure.Measure_ID);\n  });\n}\n\nfunction SelectEvaluator(props) {\n  return props.evaluatorList.map(function (e) {\n    return React.createElement(\"option\", {\n      key: e.email,\n      value: e.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, e.firstName + ' ' + e.lastName);\n  });\n}\n\nfunction ManualStudentEntry(props) {\n  return props.formData.map(function (d) {\n    return React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-inline\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"form-inline\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }));\n  });\n}\n\nvar CreateAssignment =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateAssignment, _Component);\n\n  function CreateAssignment(props) {\n    var _this;\n\n    _classCallCheck(this, CreateAssignment);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateAssignment).call(this, props));\n    _this.handleSelectOutcome = _this.handleSelectOutcome.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSelectMeasure = _this.handleSelectMeasure.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addStudent = _this.addStudent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.changeFile = _this.changeFile.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.fileInput = React.createRef();\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      outcomeList: dummyOutcomeList,\n      evaluatorList: evalList,\n      selectedOutcomeIndex: 0,\n      selectedMeasure: undefined,\n      selectedEvaluator: '',\n      showFileAlert: false,\n      manualStudentEntry: []\n    };\n    return _this;\n  }\n\n  _createClass(CreateAssignment, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('http://localhost:5000/assignments/outcomesAndMeasures').then(function (res) {\n        _this2.setState({\n          outcomeList: res.data.outcomeList,\n          selectedMeasure: res.data.outcomeList[0].measures[0].Measure_ID\n        });\n\n        console.log(_this2.state);\n      });\n      axios.get('http://localhost:5000/evaluators/evaluatorList').then(function (res) {\n        _this2.setState({\n          evaluatorList: res.data.evaluatorList,\n          selectedOutcomeIndex: 0,\n          selectedEvaluator: res.data.evaluatorList[0].email\n        });\n      });\n    }\n  }, {\n    key: \"handleSelectOutcome\",\n    value: function handleSelectOutcome(e) {\n      this.setState({\n        selectedOutcomeIndex: e.target.value,\n        selectedMeasure: this.state.outcomeList[e.target.value].measures[0].Measure_ID\n      });\n    }\n  }, {\n    key: \"handleSelectMeasure\",\n    value: function handleSelectMeasure(e) {\n      this.setState({\n        selectedMeasure: e.target.value\n      });\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"changeFile\",\n    value: function changeFile(e) {\n      if (!(this.fileInput.current.files[0].type == \"text/csv\")) {\n        this.setState({\n          showFileAlert: true\n        });\n      } else {\n        this.setState({\n          showFileAlert: false\n        });\n      }\n    }\n  }, {\n    key: \"addStudent\",\n    value: function addStudent(e) {\n      var tempManualEntry = this.state.manualStudentEntry;\n      tempManualEntry.push({\n        subjectName: '',\n        subjectId: ''\n      });\n      this.setState({\n        manualStudentEntry: tempManualEntry\n      });\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      var _this3 = this;\n\n      e.preventDefault();\n\n      if (this.fileInput.current.files[0]) {\n        var fileReader = new FileReader();\n\n        fileReader.onloadend = function (e) {\n          var assignment = {\n            Measure_ID: _this3.state.selectedMeasure,\n            User_Email: _this3.state.selectedEvaluator,\n            studentList: fileReader.result + \"\\n\" + _this3.state.manualStudentEntry\n          };\n          axios.post('http://localhost:5000/assignments/createAssignment', assignment).then(function (res) {\n            if (res.data.status) {\n              alert(res.data.message);\n\n              _this3.setState({\n                selectedMeasure: _this3.state.outcomeList[0].measures[0].Measure_ID,\n                selectedEvaluator: _this3.state.evaluatorList[0].email\n              });\n            }\n          });\n        };\n\n        fileReader.readAsText(this.fileInput.current.files[0]);\n      } else {\n        var assignment = {\n          Measure_ID: this.state.selectedMeasure,\n          User_Email: this.state.selectedEvaluator,\n          studentList: \"Name,ID\\n\" + this.state.manualStudentEntry\n        };\n        axios.post('http://localhost:5000/assignments/createAssignment', assignment).then(function (res) {\n          if (res.data.status) {\n            alert(res.data.message);\n\n            _this3.setState({\n              selectedMeasure: _this3.state.outcomeList[0].measures[0].Measure_ID,\n              selectedEvaluator: _this3.state.evaluatorList[0].email\n            });\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Create Assignment\"), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"Select Outcome: \"), React.createElement(\"select\", {\n        className: \"form-control\",\n        value: this.state.selectedOutcomeIndex,\n        onChange: this.handleSelectOutcome,\n        onClick: this.handleSelectOutcome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(SelectOutcome, {\n        outcomeList: this.state.outcomeList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"Select Measure: \"), React.createElement(\"select\", {\n        className: \"form-control\",\n        value: this.state.selectedMeasure,\n        onChange: this.handleSelectMeasure,\n        onClick: this.handleSelectMeasure,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(SelectMeasure, {\n        onChange: true,\n        measureList: this.state.outcomeList[this.state.selectedOutcomeIndex].measures,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"Select Evaluator: \"), React.createElement(\"select\", {\n        className: \"form-control\",\n        value: this.state.selectedEvaluator,\n        name: \"selectedEvaluator\",\n        onChange: this.handleInputChange,\n        onClick: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(SelectEvaluator, {\n        evaluatorList: this.state.evaluatorList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"Select List of Subjects as .csv file: \"), React.createElement(\"input\", {\n        type: \"file\",\n        className: \"form-control-file\",\n        ref: this.fileInput,\n        onChange: this.changeFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }), this.state.showFileAlert ? React.createElement(\"p\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"Invalid File\") : null), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"Enter students manually.\"), React.createElement(ManualStudentEntry, {\n        formData: this.state.manualStudentEntry,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: this.addStudent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"Add Student Manually\")), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"submit\",\n        className: \"btn btn-primary\",\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CreateAssignment;\n}(Component);\n\nexport { CreateAssignment as default };","map":{"version":3,"sources":["/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/createAssignment.js"],"names":["React","Component","axios","SelectOutcome","props","outcomeList","map","outcome","index","Outcome_ID","Description","SelectMeasure","measureList","measure","Measure_ID","SelectEvaluator","evaluatorList","e","email","firstName","lastName","ManualStudentEntry","formData","d","CreateAssignment","handleSelectOutcome","bind","handleSelectMeasure","handleInputChange","addStudent","changeFile","fileInput","createRef","onSubmit","state","dummyOutcomeList","evalList","selectedOutcomeIndex","selectedMeasure","undefined","selectedEvaluator","showFileAlert","manualStudentEntry","get","then","res","setState","data","measures","console","log","target","value","name","current","files","type","tempManualEntry","push","subjectName","subjectId","preventDefault","fileReader","FileReader","onloadend","assignment","User_Email","studentList","result","post","status","alert","message","readAsText"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from \"axios\";\n\n/*dummy data\nvar out1mea1 = {\n    Measure_ID: 1,\n    Description: ''\n}\n\nvar out1 = {\n    Outcome_ID: 1,\n    Description: '',\n    measures: [out1mea1]\n}\n\nvar dummyOutcomeList = [out1];\n\nvar eval3 = {\n    email: '',\n    firstName: '',\n    lastName: ''\n}\n\nvar evalList = [eval3];\n*/\n\nfunction SelectOutcome(props)\n{\n    return props.outcomeList.map((outcome, index) => {\n        return <option key={outcome.Outcome_ID} value={index}>{outcome.Description}</option>\n    })\n}\n\nfunction SelectMeasure(props)\n{\n    return props.measureList.map(measure => {\n        return <option key={measure.Measure_ID} value={measure.Measure_ID}>{measure.Measure_ID}</option>\n    })\n}\n\nfunction SelectEvaluator(props)\n{\n    return props.evaluatorList.map(e => {\n        return <option key={e.email} value={e.email}>{e.firstName + ' ' + e.lastName}</option>\n    })\n}\n\nfunction ManualStudentEntry(props)\n{\n    return props.formData.map(d => {\n        return (\n            <div className=\"form-group\">\n                <input className=\"form-inline\" type=\"text\" />\n                <input className=\"form-inline\" type=\"text\" />\n            </div>\n        )\n    })\n}\n\nexport default class CreateAssignment extends Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.handleSelectOutcome = this.handleSelectOutcome.bind(this);\n        this.handleSelectMeasure = this.handleSelectMeasure.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.addStudent = this.addStudent.bind(this);\n        this.changeFile = this.changeFile.bind(this);\n        this.fileInput = React.createRef();\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            outcomeList: dummyOutcomeList,\n            evaluatorList: evalList,\n            selectedOutcomeIndex: 0,\n            selectedMeasure: undefined,\n            selectedEvaluator: '',\n            showFileAlert: false,\n            manualStudentEntry: []\n        }\n    }\n\n    componentDidMount()\n    {\n        axios.get('http://localhost:5000/assignments/outcomesAndMeasures')\n            .then(res => {\n                this.setState({\n                    outcomeList: res.data.outcomeList,\n                    selectedMeasure: res.data.outcomeList[0].measures[0].Measure_ID,\n                })\n                console.log(this.state);\n            })\n        axios.get('http://localhost:5000/evaluators/evaluatorList')\n        .then(res => {\n            this.setState({\n                evaluatorList: res.data.evaluatorList,\n                selectedOutcomeIndex: 0,\n                selectedEvaluator: res.data.evaluatorList[0].email\n            })\n        })\n    }\n\n    handleSelectOutcome(e)\n    {\n        this.setState({\n            selectedOutcomeIndex: e.target.value,\n            selectedMeasure: this.state.outcomeList[e.target.value].measures[0].Measure_ID\n        })\n    }\n\n    handleSelectMeasure(e)\n    {\n        this.setState({\n            selectedMeasure: e.target.value\n        })\n    }\n\n    handleInputChange(e)\n    {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    changeFile(e)\n    {\n        if (!(this.fileInput.current.files[0].type == \"text/csv\"))\n        {\n            this.setState({\n                showFileAlert: true\n            })\n        }\n        else\n        {\n            this.setState({\n                showFileAlert: false\n            })\n        }\n    }\n\n    addStudent(e)\n    {\n        let tempManualEntry = this.state.manualStudentEntry;\n        tempManualEntry.push({\n            subjectName: '',\n            subjectId: ''\n        })\n\n        this.setState({\n            manualStudentEntry: tempManualEntry\n        })\n    }\n\n    onSubmit(e)\n    {\n        e.preventDefault();\n\n        if (this.fileInput.current.files[0])\n        {\n            let fileReader = new FileReader();\n            fileReader.onloadend = e => {\n                let assignment = {\n                    Measure_ID: this.state.selectedMeasure,\n                    User_Email: this.state.selectedEvaluator,\n                    studentList: fileReader.result + \"\\n\" + this.state.manualStudentEntry\n                }\n                \n                axios.post('http://localhost:5000/assignments/createAssignment', assignment)\n                    .then(res =>  {\n                        if (res.data.status)\n                        {\n                            alert(res.data.message);\n                            this.setState({\n                                selectedMeasure: this.state.outcomeList[0].measures[0].Measure_ID,\n                                selectedEvaluator: this.state.evaluatorList[0].email\n                            })\n                        }\n                    });\n            }\n            fileReader.readAsText(this.fileInput.current.files[0]);\n        }\n        else\n        {\n            let assignment = {\n                Measure_ID: this.state.selectedMeasure,\n                User_Email: this.state.selectedEvaluator,\n                studentList: \"Name,ID\\n\" + this.state.manualStudentEntry\n            }\n            \n            axios.post('http://localhost:5000/assignments/createAssignment', assignment)\n                .then(res =>  {\n                    if (res.data.status)\n                    {\n                        alert(res.data.message);\n                        this.setState({\n                            selectedMeasure: this.state.outcomeList[0].measures[0].Measure_ID,\n                            selectedEvaluator: this.state.evaluatorList[0].email\n                        })\n                    }\n                });\n        }\n    }\n\n    render()\n    {\n        return(\n            <form onSubmit={this.onSubmit}>\n                <h1>Create Assignment</h1>\n                <div className=\"form-group\">\n                    <label>Select Outcome: </label>\n                    <select className=\"form-control\" value={this.state.selectedOutcomeIndex} \n                            onChange={this.handleSelectOutcome} onClick={this.handleSelectOutcome}>\n                        <SelectOutcome outcomeList={this.state.outcomeList} />\n                    </select>\n                </div>\n                <div className=\"form-group\">\n                    <label>Select Measure: </label>\n                    <select className=\"form-control\" value={this.state.selectedMeasure}\n                            onChange={this.handleSelectMeasure} onClick={this.handleSelectMeasure}>\n                        <SelectMeasure onChange measureList={this.state.outcomeList[this.state.selectedOutcomeIndex].measures} />\n                    </select>\n                </div>\n                <div className=\"form-group\">\n                    <label>Select Evaluator: </label>\n                    <select className=\"form-control\" value={this.state.selectedEvaluator} name=\"selectedEvaluator\"\n                            onChange={this.handleInputChange} onClick={this.handleInputChange}>\n                        <SelectEvaluator evaluatorList={this.state.evaluatorList} />\n                    </select>\n                </div>\n                <div className=\"form-group\">\n                    <label>Select List of Subjects as .csv file: </label>\n                    <input type=\"file\" className=\"form-control-file\" ref={this.fileInput} onChange={this.changeFile} />\n                    {this.state.showFileAlert ? <p className=\"text-danger\">Invalid File</p>: null}\n                </div>\n                <div className=\"form-group\">\n                    <p>Enter students manually.</p>\n                    <ManualStudentEntry formData={this.state.manualStudentEntry} />\n                    <button className=\"btn btn-secondary\" onClick={this.addStudent}>Add Student Manually</button>\n                </div>\n                <input type=\"submit\" value=\"submit\" className=\"btn btn-primary\" onClick={this.onSubmit} />\n            </form>\n        )\n    }\n\n}\n\n"]},"metadata":{},"sourceType":"module"}