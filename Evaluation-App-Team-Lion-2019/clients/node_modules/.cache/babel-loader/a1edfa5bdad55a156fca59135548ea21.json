{"ast":null,"code":"import _defineProperty from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/Rubric.js\";\nimport React, { Component } from 'react';\nimport { Jumbotron, Container, Form } from 'react-bootstrap';\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport axios from 'axios';\n\nvar CreateRubric =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateRubric, _Component);\n\n  function CreateRubric(props) {\n    var _this;\n\n    _classCallCheck(this, CreateRubric);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateRubric).call(this, props));\n\n    _this.onChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.id, e.target.value));\n    };\n\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleCheck = _this.handleCheck.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      rows: 0,\n      scores: \"\",\n      Rubric_Title: \"\",\n      checked: false,\n      errors: {}\n    };\n    return _this;\n  }\n\n  _createClass(CreateRubric, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.errors) {\n        this.setState({\n          errors: nextProps.errors\n        });\n      }\n    }\n  }, {\n    key: \"handleCheck\",\n    value: function handleCheck() {\n      this.setState({\n        checked: !this.state.checked\n      });\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      var obj = {\n        rows: this.state.rows,\n        scores: this.state.scores,\n        Rubric_Title: this.state.Rubric_Title,\n        weight: this.state.checked\n      };\n      localStorage.setItem(\"title\", this.state.Rubric_Title);\n      axios.post(\"http://localhost:5000/rubric/createRubric\", obj).then(function (res) {\n        return window.location.replace('/createRubric');\n      }).catch(function (err) {\n        return _this2.setState({\n          errors: err.response.data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Jumbotron, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Create a new rubric\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-field col s8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: this.state.Rubric_Title,\n        error: this.state.errors.title,\n        type: \"text\",\n        id: \"Rubric_Title\",\n        className: classnames(\"\", {\n          invalid: this.state.errors.title\n        }),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Rubric Title\"), React.createElement(\"span\", {\n        className: \"red-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, this.state.errors.title)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"input-field col s8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: this.state.rows,\n        error: this.state.errors.rows,\n        id: \"rows\",\n        type: \"number\",\n        className: classnames(\"\", {\n          invalid: this.state.errors.rows\n        }),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Number of Criteria\"), React.createElement(\"span\", {\n        className: \"red-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, this.state.errors.rows)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"input-field col s8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        onChange: this.onChange,\n        value: this.state.scores,\n        error: this.state.errors.scores,\n        id: \"scores\",\n        type: \"number\",\n        placeholder: \"A rubric grading Students from Poor, Average and Good will have 3 scores\",\n        className: classnames(\"\", {\n          invalid: this.state.errors.scores\n        }),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Number of Scores\"), React.createElement(\"span\", {\n        className: \"red-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, this.state.errors.scores)), React.createElement(\"div\", {\n        style: {\n          color: \"black\",\n          padding: \"10px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        onChange: this.handleCheck,\n        value: this.state.checked,\n        type: \"checkbox\",\n        id: \"weight\",\n        style: {\n          opacity: 1,\n          pointerEvents: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"checkbox\",\n        style: {\n          marginLeft: \"12px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Do you want a weight column?\")), React.createElement(\"div\", {\n        className: \"col s12\",\n        style: {\n          paddingLeft: \"11.250px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        style: {\n          width: \"150px\",\n          borderRadius: \"3px\",\n          letterSpacing: \"1.5px\",\n          marginTop: \"1rem\"\n        },\n        type: \"submit\",\n        className: \"btn btn-large waves-effect waves-light hoverable blue accent-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Create\")))));\n    }\n  }]);\n\n  return CreateRubric;\n}(Component);\n\nCreateRubric.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps)(CreateRubric);","map":{"version":3,"sources":["/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/Rubric.js"],"names":["React","Component","Jumbotron","Container","Form","classnames","PropTypes","connect","axios","CreateRubric","props","onChange","e","setState","target","id","value","bind","onSubmit","handleCheck","state","rows","scores","Rubric_Title","checked","errors","nextProps","preventDefault","obj","weight","localStorage","setItem","post","then","res","window","location","replace","catch","err","response","data","title","invalid","color","padding","opacity","pointerEvents","marginLeft","paddingLeft","width","borderRadius","letterSpacing","marginTop","propTypes","auth","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Jumbotron,Container, Form } from 'react-bootstrap';\nimport classnames from \"classnames\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport axios from 'axios';\n\n\nclass CreateRubric extends Component{\n\n    constructor(props){\n        super(props);\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.handleCheck=this.handleCheck.bind(this);\n        this.state={\n            rows : 0,\n            scores: \"\",\n            Rubric_Title: \"\",\n            checked: false,\n            errors: {}\n\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n          this.setState({\n            errors: nextProps.errors\n          });\n        }\n      }\n\n    onChange = e => {\n        this.setState({ [e.target.id]: e.target.value });\n      };\n\n      handleCheck(){\n        this.setState({checked: !(this.state.checked)});\n        \n      }\n\n      \n\n      onSubmit(e){\n          e.preventDefault();\n        \n\n          const obj ={\n              rows: this.state.rows,\n              scores: this.state.scores,\n              Rubric_Title: this.state.Rubric_Title,\n              weight: this.state.checked\n          }\n\n          localStorage.setItem(\"title\", this.state.Rubric_Title);\n\n          axios.post(\"http://localhost:5000/rubric/createRubric\", obj)\n                .then(res => window.location.replace('/createRubric'))\n                .catch(err => \n                  this.setState({errors: err.response.data}))\n\n          ;\n\n          \n      }\n\n\nrender()\n{\n  \n    \nreturn(\n<Jumbotron fluid>\n  <Container>\n    <h1>Create a new rubric</h1>\n    <br />\n    <br />\n   <form onSubmit={this.onSubmit}>\n<div className=\"input-field col s8\">\n    <input  onChange={this.onChange}\n            value={this.state.Rubric_Title}\n            error={this.state.errors.title}\n            type=\"text\"\n            id=\"Rubric_Title\"\n            \n            className={classnames(\"\", {\n              invalid: this.state.errors.title\n            })}\n            required/>\n            <label htmlFor=\"text\">Rubric Title</label>\n                <span className=\"red-text\">\n                  {this.state.errors.title}\n                  \n                </span>\n</div>\n<br />\n    <div className=\"input-field col s8\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.rows}\n                  error={this.state.errors.rows}\n                  id=\"rows\"\n                  type=\"number\"\n                  className={classnames(\"\", {\n                    invalid: this.state.errors.rows\n                  })}\n                required/>\n                <label htmlFor=\"number\">Number of Criteria</label>\n                <span className=\"red-text\">\n                  {this.state.errors.rows}\n                  \n                </span>\n              </div>\n              <br />\n    \n    <div className=\"input-field col s8\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.scores}\n                  error={this.state.errors.scores}\n                  id=\"scores\"\n                  type=\"number\"\n                  placeholder=\"A rubric grading Students from Poor, Average and Good will have 3 scores\"\n                  className={classnames(\"\", {\n                    invalid: this.state.errors.scores\n                  })}\n                required/>\n                <label htmlFor=\"number\">Number of Scores</label>\n                <span className=\"red-text\">\n                  {this.state.errors.scores}\n                  \n                </span>\n              </div>\n\n              <div style ={{color: \"black\", padding: \"10px\"}}>\n\n              <input onChange={this.handleCheck}\n                     value={this.state.checked}\n                     type= \"checkbox\"\n                     id =\"weight\"\n                     style={{opacity : 1, pointerEvents: \"auto\"}}\n                     />\n              <label htmlFor=\"checkbox\" style={{marginLeft: \"12px\"}}>Do you want a weight column?</label>\n            \n              </div>\n\n              \n\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                >\n                  Create\n                </button>\n              </div>\n              </form>\n  </Container>\n</Jumbotron>\n)\n\n}\n}\nCreateRubric.propTypes={\n \n    \n    auth: PropTypes.object.isRequired\n\n}\n\nconst mapStateToProps = state => ({\n     auth: state.auth,\n     \n     \n})\nexport default connect(mapStateToProps)(CreateRubric);"]},"metadata":{},"sourceType":"module"}