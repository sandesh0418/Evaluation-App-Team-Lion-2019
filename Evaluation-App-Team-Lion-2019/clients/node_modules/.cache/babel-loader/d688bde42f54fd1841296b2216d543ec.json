{"ast":null,"code":"import _classCallCheck from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/Assignment/myAssignments.js\";\nimport React, { Component } from 'react';\nimport axios from \"axios\";\nimport AddSubjects from './addSubjects';\nimport './myAssignments.css';\n\nfunction ListDisplay(props) {\n  var list = props.assignments.map(function (a) {\n    if (a.finished === props.finished) {\n      return React.createElement(\"div\", {\n        className: \"m-3 p-3 border rounded\",\n        key: a.assignmentId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"Outcome name: \" + a.outcomeName), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"Outcome description: \" + a.outcomeDescription), React.createElement(\"p\", {\n        className: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Measure name: \" + a.measureName), React.createElement(\"details\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"summary\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Subjects:\"), React.createElement(\"table\", {\n        className: \"table table-bordered p-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Id\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Graded?\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Remove Subject\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(SubjectList, {\n        assignmentId: a.assignmentId,\n        subjects: a.subjects,\n        removeSubject: props.removeSubject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      })))), React.createElement(AddSubjects, {\n        assignmentId: a.assignmentId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary mt-2\",\n        id: a.rubricId + \"/\" + a.assignmentId,\n        onClick: props.onClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Evaluate \" + a.toolName));\n    }\n  });\n\n  if (list.length > 0) {\n    var type = props.finished ? \"Complete\" : \"Incomplete\";\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, type + \" Assignments\"), list);\n  } else {\n    return null;\n  }\n}\n\nfunction SubjectList(props) {\n  return props.subjects.map(function (s) {\n    return React.createElement(\"tr\", {\n      key: s.subjectId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"p-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, s.subjectName), React.createElement(\"td\", {\n      className: \"p-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, s.subjectId), React.createElement(\"td\", {\n      className: \"p-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, s.scores[0].score === null ? \"No\" : \"Yes\"), React.createElement(\"td\", {\n      className: \"p-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-sm btn-danger\",\n      id: s.subjectId,\n      name: props.assignmentId,\n      onClick: props.removeSubject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"X\")));\n  });\n}\n\nvar RubricList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RubricList, _Component);\n\n  function RubricList(props) {\n    var _this;\n\n    _classCallCheck(this, RubricList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RubricList).call(this, props));\n    _this.handleEvaluateClick = _this.handleEvaluateClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.removeSubject = _this.removeSubject.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      assignments: []\n    };\n    return _this;\n  }\n\n  _createClass(RubricList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('/assignments/myAssignments/' + localStorage.getItem(\"email\") + \"/\" + localStorage.getItem(\"Cycle_Id\")).then(function (res) {\n        _this2.setState({\n          assignments: res.data.assignments\n        });\n\n        console.log(res.data.assignments);\n      });\n    }\n  }, {\n    key: \"removeSubject\",\n    value: function removeSubject(e) {\n      var subjectId = e.target.id;\n      var assignmentId = e.target.name;\n      var tempAssignments = this.state.assignments;\n      var assignmentIndex = tempAssignments.findIndex(function (a) {\n        return a.assignmentId === assignmentId;\n      });\n      var subjectIndex = tempAssignments[assignmentIndex].subjects.findIndex(function (s) {\n        return s.subjectId === subjectId;\n      });\n      tempAssignments[assignmentIndex].subjects.splice(subjectIndex, 1);\n      this.setState({\n        assignments: tempAssignments\n      });\n      var data = {\n        subjectId: subjectId,\n        assignmentId: assignmentId\n      };\n      axios.post('/assignments/deleteSubject', data).then(function (res) {\n        if (!res.data.deleted) {\n          alert(\"Subject not deleted.\");\n        }\n      });\n    }\n  }, {\n    key: \"handleEvaluateClick\",\n    value: function handleEvaluateClick(e) {\n      if (e.target.id.includes('null')) {\n        this.props.history.push(\"/evaluateTest/\" + e.target.id);\n      } else {\n        this.props.history.push(\"/gradeRubric/\" + e.target.id);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"My Assignments\"), this.state.assingments !== [] ? React.createElement(React.Fragment, null, React.createElement(ListDisplay, {\n        finished: false,\n        assignments: this.state.assignments,\n        onClick: this.handleEvaluateClick,\n        removeSubject: this.removeSubject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), React.createElement(ListDisplay, {\n        finished: true,\n        assignments: this.state.assignments,\n        onClick: this.handleEvaluateClick,\n        removeSubject: this.removeSubject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      })) : React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"You have no assignments.\"));\n    }\n  }]);\n\n  return RubricList;\n}(Component);\n\nexport { RubricList as default };","map":{"version":3,"sources":["/Users/RyanBlomquist/Documents/GitHub/Evaluation-App-Team-Lion-2019/Evaluation-App-Team-Lion-2019/clients/src/components/dashboard/Assignment/myAssignments.js"],"names":["React","Component","axios","AddSubjects","ListDisplay","props","list","assignments","map","a","finished","assignmentId","outcomeName","outcomeDescription","measureName","subjects","removeSubject","rubricId","onClick","toolName","length","type","SubjectList","s","subjectId","subjectName","scores","score","RubricList","handleEvaluateClick","bind","state","get","localStorage","getItem","then","res","setState","data","console","log","e","target","id","name","tempAssignments","assignmentIndex","findIndex","subjectIndex","splice","post","deleted","alert","includes","history","push","assingments"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from \"axios\";\nimport AddSubjects from './addSubjects';\nimport './myAssignments.css';\n\n\nfunction ListDisplay(props)\n{\n    let list = props.assignments.map(a => {\n        if (a.finished === props.finished)\n        {\n            return (\n                <div className=\"m-3 p-3 border rounded\" key={a.assignmentId}>\n                    <p className=\"h5\">{\"Outcome name: \" + a.outcomeName}</p>\n                    <div>{\"Outcome description: \" + a.outcomeDescription}</div>\n                    <p className=\"h5\">{\"Measure name: \" + a.measureName}</p>\n                    <details>\n                        <summary>Subjects:</summary>\n                        <table className=\"table table-bordered p-3\">\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th>Id</th> \n                                    <th>Graded?</th>\n                                    <th>Remove Subject</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <SubjectList \n                                    assignmentId={a.assignmentId} \n                                    subjects={a.subjects}\n                                    removeSubject={props.removeSubject} \n                                />\n                            </tbody>\n                        </table>\n                    </details>\n                    <AddSubjects assignmentId={a.assignmentId} />\n                    <button \n                        type=\"button\" \n                        className=\"btn btn-secondary mt-2\" \n                        id={a.rubricId + \"/\" + a.assignmentId}\n                        onClick={props.onClick}>\n                        {\"Evaluate \" + a.toolName}\n                    </button>\n                </div>\n            )\n        }\n    });\n\n    if(list.length > 0)\n    {\n        let type = props.finished ? \"Complete\" : \"Incomplete\"\n        return (\n            <div>\n                <h2>{type + \" Assignments\"}</h2>\n                {list}\n            </div>\n        )\n    }\n    else\n    {\n        return null;\n    }\n}\n\nfunction SubjectList(props)\n{\n    return props.subjects.map(s => {\n        \n        return (\n            <tr key={s.subjectId}>\n                <td className=\"p-2\">{s.subjectName}</td>\n                <td className=\"p-2\">{s.subjectId}</td>\n                <td className=\"p-2\">{s.scores[0].score === null ? \"No\" : \"Yes\"}</td>\n                <td className=\"p-2\">\n                    <button \n                        className=\"btn btn-sm btn-danger\"\n                        id={s.subjectId}\n                        name={props.assignmentId}\n                        onClick={props.removeSubject}>\n                        X\n                    </button>\n                </td>\n            </tr>\n        )\n    })\n}\n\nexport default class RubricList extends Component \n{\n    constructor(props)\n    {\n        super(props);\n        this.handleEvaluateClick = this.handleEvaluateClick.bind(this);\n        this.removeSubject = this.removeSubject.bind(this);\n        this.state = {\n            assignments: []\n        }\n    }\n\n    componentDidMount()\n    {\n        axios.get('/assignments/myAssignments/' + localStorage.getItem(\"email\") + \"/\" + localStorage.getItem(\"Cycle_Id\"))\n            .then(res => {\n                this.setState({\n                    assignments: res.data.assignments\n                })\n                console.log(res.data.assignments);\n            })\n    }\n\n    removeSubject(e)\n    {\n        let subjectId = e.target.id;\n        let assignmentId = e.target.name;\n        let tempAssignments = this.state.assignments;\n        let assignmentIndex = tempAssignments.findIndex(a => a.assignmentId === assignmentId);\n        let subjectIndex = tempAssignments[assignmentIndex].subjects.findIndex(s => s.subjectId === subjectId);\n\n        tempAssignments[assignmentIndex].subjects.splice(subjectIndex, 1);\n\n        this.setState({\n            assignments: tempAssignments\n        })\n\n        let data = {\n            subjectId: subjectId,\n            assignmentId: assignmentId\n        }\n\n        axios.post('/assignments/deleteSubject', data)\n            .then(res => {\n                if (!res.data.deleted)\n                {\n                    alert(\"Subject not deleted.\");\n                }\n            })\n    }\n\n    handleEvaluateClick(e)\n    {\n        if (e.target.id.includes('null'))\n        {\n            this.props.history.push(\"/evaluateTest/\" + e.target.id);\n        }\n        else\n        {\n            this.props.history.push(\"/gradeRubric/\" + e.target.id);\n        }\n    }\n\n    render()\n    {\n        return(\n            <div>\n                <h1>My Assignments</h1>\n                {this.state.assingments !== [] ? \n                    <>\n                        {/* show incomplete assignments */}\n                        <ListDisplay\n                            finished={false} \n                            assignments={this.state.assignments} \n                            onClick={this.handleEvaluateClick}\n                            removeSubject={this.removeSubject} \n                        />\n                        {/* show complete assignments */}\n                        <ListDisplay\n                            finished={true} \n                            assignments={this.state.assignments} \n                            onClick={this.handleEvaluateClick}\n                            removeSubject={this.removeSubject} \n                        /> \n                    </>\n                    : <p>You have no assignments.</p>\n                }\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}